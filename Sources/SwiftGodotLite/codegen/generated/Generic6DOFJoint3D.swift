// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A physics joint that allows for complex movement and rotation between two 3D physics bodies.
/// 
/// The ``Generic6DOFJoint3D`` (6 Degrees Of Freedom) joint allows for implementing custom types of joints by locking the rotation and translation of certain axes.
/// 
/// The first 3 DOF represent the linear motion of the physics bodies and the last 3 DOF represent the angular motion of the physics bodies. Each axis can be either locked, or limited.
/// 
open class Generic6DOFJoint3D: Joint3D {
    override open class var godotClassName: StringName { "Generic6DOFJoint3D" }
    public enum Param: Int64 {
        /// The minimum difference between the pivot points' axes.
        case linearLowerLimit = 0 // PARAM_LINEAR_LOWER_LIMIT
        /// The maximum difference between the pivot points' axes.
        case linearUpperLimit = 1 // PARAM_LINEAR_UPPER_LIMIT
        /// A factor applied to the movement across the axes. The lower, the slower the movement.
        case linearLimitSoftness = 2 // PARAM_LINEAR_LIMIT_SOFTNESS
        /// The amount of restitution on the axes' movement. The lower, the more momentum gets lost.
        case linearRestitution = 3 // PARAM_LINEAR_RESTITUTION
        /// The amount of damping that happens at the linear motion across the axes.
        case linearDamping = 4 // PARAM_LINEAR_DAMPING
        /// The velocity the linear motor will try to reach.
        case linearMotorTargetVelocity = 5 // PARAM_LINEAR_MOTOR_TARGET_VELOCITY
        /// The maximum force the linear motor will apply while trying to reach the velocity target.
        case linearMotorForceLimit = 6 // PARAM_LINEAR_MOTOR_FORCE_LIMIT
        /// 
        case linearSpringStiffness = 7 // PARAM_LINEAR_SPRING_STIFFNESS
        /// 
        case linearSpringDamping = 8 // PARAM_LINEAR_SPRING_DAMPING
        /// 
        case linearSpringEquilibriumPoint = 9 // PARAM_LINEAR_SPRING_EQUILIBRIUM_POINT
        /// The minimum rotation in negative direction to break loose and rotate around the axes.
        case angularLowerLimit = 10 // PARAM_ANGULAR_LOWER_LIMIT
        /// The minimum rotation in positive direction to break loose and rotate around the axes.
        case angularUpperLimit = 11 // PARAM_ANGULAR_UPPER_LIMIT
        /// The speed of all rotations across the axes.
        case angularLimitSoftness = 12 // PARAM_ANGULAR_LIMIT_SOFTNESS
        /// The amount of rotational damping across the axes. The lower, the more damping occurs.
        case angularDamping = 13 // PARAM_ANGULAR_DAMPING
        /// The amount of rotational restitution across the axes. The lower, the more restitution occurs.
        case angularRestitution = 14 // PARAM_ANGULAR_RESTITUTION
        /// The maximum amount of force that can occur, when rotating around the axes.
        case angularForceLimit = 15 // PARAM_ANGULAR_FORCE_LIMIT
        /// When rotating across the axes, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.
        case angularErp = 16 // PARAM_ANGULAR_ERP
        /// Target speed for the motor at the axes.
        case angularMotorTargetVelocity = 17 // PARAM_ANGULAR_MOTOR_TARGET_VELOCITY
        /// Maximum acceleration for the motor at the axes.
        case angularMotorForceLimit = 18 // PARAM_ANGULAR_MOTOR_FORCE_LIMIT
        /// 
        case angularSpringStiffness = 19 // PARAM_ANGULAR_SPRING_STIFFNESS
        /// 
        case angularSpringDamping = 20 // PARAM_ANGULAR_SPRING_DAMPING
        /// 
        case angularSpringEquilibriumPoint = 21 // PARAM_ANGULAR_SPRING_EQUILIBRIUM_POINT
        /// Represents the size of the ``Generic6DOFJoint3D/Param`` enum.
        case max = 22 // PARAM_MAX
    }
    
    public enum Flag: Int64 {
        /// If enabled, linear motion is possible within the given limits.
        case enableLinearLimit = 0 // FLAG_ENABLE_LINEAR_LIMIT
        /// If enabled, rotational motion is possible within the given limits.
        case enableAngularLimit = 1 // FLAG_ENABLE_ANGULAR_LIMIT
        /// 
        case enableLinearSpring = 3 // FLAG_ENABLE_LINEAR_SPRING
        /// 
        case enableAngularSpring = 2 // FLAG_ENABLE_ANGULAR_SPRING
        /// If enabled, there is a rotational motor across these axes.
        case enableMotor = 4 // FLAG_ENABLE_MOTOR
        /// If enabled, there is a linear motor across these axes.
        case enableLinearMotor = 5 // FLAG_ENABLE_LINEAR_MOTOR
        /// Represents the size of the ``Generic6DOFJoint3D/Flag`` enum.
        case max = 6 // FLAG_MAX
    }
    
    /* Methods */
    fileprivate static var method_set_param_x: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_param_x")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2018184242)!
            }
            
        }
        
    }()
    
    /// 
    public final func setParamX (param: Generic6DOFJoint3D.Param, value: Double) {
        #if false
        
        var copy_param = Int64 (param.rawValue)
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_set_param_x, UnsafeMutableRawPointer (mutating: handle), nil, &copy_param, &copy_value)
        
        #else
        
        var copy_param = Int64 (param.rawValue)
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_param) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_value) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_set_param_x, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_param_x: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_param_x")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2599835054)!
            }
            
        }
        
    }()
    
    /// 
    public final func getParamX (param: Generic6DOFJoint3D.Param)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_param = Int64 (param.rawValue)
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_get_param_x, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_param)
        return _result
        #else
        
        var copy_param = Int64 (param.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_param) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_get_param_x, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_param_y: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_param_y")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2018184242)!
            }
            
        }
        
    }()
    
    /// 
    public final func setParamY (param: Generic6DOFJoint3D.Param, value: Double) {
        #if false
        
        var copy_param = Int64 (param.rawValue)
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_set_param_y, UnsafeMutableRawPointer (mutating: handle), nil, &copy_param, &copy_value)
        
        #else
        
        var copy_param = Int64 (param.rawValue)
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_param) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_value) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_set_param_y, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_param_y: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_param_y")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2599835054)!
            }
            
        }
        
    }()
    
    /// 
    public final func getParamY (param: Generic6DOFJoint3D.Param)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_param = Int64 (param.rawValue)
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_get_param_y, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_param)
        return _result
        #else
        
        var copy_param = Int64 (param.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_param) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_get_param_y, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_param_z: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_param_z")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2018184242)!
            }
            
        }
        
    }()
    
    /// 
    public final func setParamZ (param: Generic6DOFJoint3D.Param, value: Double) {
        #if false
        
        var copy_param = Int64 (param.rawValue)
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_set_param_z, UnsafeMutableRawPointer (mutating: handle), nil, &copy_param, &copy_value)
        
        #else
        
        var copy_param = Int64 (param.rawValue)
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_param) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_value) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_set_param_z, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_param_z: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_param_z")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2599835054)!
            }
            
        }
        
    }()
    
    /// 
    public final func getParamZ (param: Generic6DOFJoint3D.Param)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_param = Int64 (param.rawValue)
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_get_param_z, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_param)
        return _result
        #else
        
        var copy_param = Int64 (param.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_param) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_get_param_z, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_flag_x: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_flag_x")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2451594564)!
            }
            
        }
        
    }()
    
    /// 
    public final func setFlagX (flag: Generic6DOFJoint3D.Flag, value: Bool) {
        #if false
        
        var copy_flag = Int64 (flag.rawValue)
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_set_flag_x, UnsafeMutableRawPointer (mutating: handle), nil, &copy_flag, &copy_value)
        
        #else
        
        var copy_flag = Int64 (flag.rawValue)
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_flag) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_value) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_set_flag_x, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_flag_x: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_flag_x")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2122427807)!
            }
            
        }
        
    }()
    
    /// 
    public final func getFlagX (flag: Generic6DOFJoint3D.Flag)-> Bool {
        var _result: Bool = false
        #if false
        
        var copy_flag = Int64 (flag.rawValue)
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_get_flag_x, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_flag)
        return _result
        #else
        
        var copy_flag = Int64 (flag.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_flag) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_get_flag_x, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_flag_y: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_flag_y")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2451594564)!
            }
            
        }
        
    }()
    
    /// 
    public final func setFlagY (flag: Generic6DOFJoint3D.Flag, value: Bool) {
        #if false
        
        var copy_flag = Int64 (flag.rawValue)
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_set_flag_y, UnsafeMutableRawPointer (mutating: handle), nil, &copy_flag, &copy_value)
        
        #else
        
        var copy_flag = Int64 (flag.rawValue)
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_flag) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_value) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_set_flag_y, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_flag_y: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_flag_y")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2122427807)!
            }
            
        }
        
    }()
    
    /// 
    public final func getFlagY (flag: Generic6DOFJoint3D.Flag)-> Bool {
        var _result: Bool = false
        #if false
        
        var copy_flag = Int64 (flag.rawValue)
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_get_flag_y, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_flag)
        return _result
        #else
        
        var copy_flag = Int64 (flag.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_flag) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_get_flag_y, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_flag_z: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_flag_z")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2451594564)!
            }
            
        }
        
    }()
    
    /// 
    public final func setFlagZ (flag: Generic6DOFJoint3D.Flag, value: Bool) {
        #if false
        
        var copy_flag = Int64 (flag.rawValue)
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_set_flag_z, UnsafeMutableRawPointer (mutating: handle), nil, &copy_flag, &copy_value)
        
        #else
        
        var copy_flag = Int64 (flag.rawValue)
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_flag) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_value) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_set_flag_z, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_flag_z: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_flag_z")
        return withUnsafePointer (to: &Generic6DOFJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2122427807)!
            }
            
        }
        
    }()
    
    /// 
    public final func getFlagZ (flag: Generic6DOFJoint3D.Flag)-> Bool {
        var _result: Bool = false
        #if false
        
        var copy_flag = Int64 (flag.rawValue)
        
        gi.object_method_bind_ptrcall_v (Generic6DOFJoint3D.method_get_flag_z, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_flag)
        return _result
        #else
        
        var copy_flag = Int64 (flag.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_flag) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Generic6DOFJoint3D.method_get_flag_z, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
}

