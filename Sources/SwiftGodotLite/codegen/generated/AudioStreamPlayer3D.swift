// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Plays positional sound in 3D space.
/// 
/// Plays audio with positional sound effects, based on the relative position of the audio listener. Positional effects include distance attenuation, directionality, and the Doppler effect. For greater realism, a low-pass filter is applied to distant sounds. This can be disabled by setting ``attenuationFilterCutoffHz`` to `20500`.
/// 
/// By default, audio is heard from the camera position. This can be changed by adding an ``AudioListener3D`` node to the scene and enabling it by calling ``AudioListener3D/makeCurrent()`` on it.
/// 
/// See also ``AudioStreamPlayer`` to play a sound non-positionally.
/// 
/// > Note: Hiding an ``AudioStreamPlayer3D`` node does not disable its audio output. To temporarily disable an ``AudioStreamPlayer3D``'s audio output, set ``volumeDb`` to a very low value like `-100` (which isn't audible to human hearing).
/// 
/// 
/// 
/// This object emits the following signals:
/// 
/// - ``finished``
open class AudioStreamPlayer3D: Node3D {
    override open class var godotClassName: StringName { "AudioStreamPlayer3D" }
    public enum AttenuationModel: Int64 {
        /// Attenuation of loudness according to linear distance.
        case inverseDistance = 0 // ATTENUATION_INVERSE_DISTANCE
        /// Attenuation of loudness according to squared distance.
        case inverseSquareDistance = 1 // ATTENUATION_INVERSE_SQUARE_DISTANCE
        /// Attenuation of loudness according to logarithmic distance.
        case logarithmic = 2 // ATTENUATION_LOGARITHMIC
        /// No attenuation of loudness according to distance. The sound will still be heard positionally, unlike an ``AudioStreamPlayer``. .attenuationDisabled can be combined with a ``maxDistance`` value greater than `0.0` to achieve linear attenuation clamped to a sphere of a defined size.
        case disabled = 3 // ATTENUATION_DISABLED
    }
    
    public enum DopplerTracking: Int64 {
        /// Disables doppler tracking.
        case disabled = 0 // DOPPLER_TRACKING_DISABLED
        /// Executes doppler tracking during process frames (see ``Node/``notificationInternalProcess````).
        case idleStep = 1 // DOPPLER_TRACKING_IDLE_STEP
        /// Executes doppler tracking during physics frames (see ``Node/``notificationInternalPhysicsProcess````).
        case physicsStep = 2 // DOPPLER_TRACKING_PHYSICS_STEP
    }
    
    
    /* Properties */
    
    /// The ``AudioStream`` resource to be played.
    final public var stream: AudioStream? {
        get {
            return get_stream ()
        }
        
        set {
            set_stream (newValue)
        }
        
    }
    
    /// Decides if audio should get quieter with distance linearly, quadratically, logarithmically, or not be affected by distance, effectively disabling attenuation.
    final public var attenuationModel: AudioStreamPlayer3D.AttenuationModel {
        get {
            return get_attenuation_model ()
        }
        
        set {
            set_attenuation_model (newValue)
        }
        
    }
    
    /// The base sound level before attenuation, in decibels.
    final public var volumeDb: Double {
        get {
            return get_volume_db ()
        }
        
        set {
            set_volume_db (newValue)
        }
        
    }
    
    /// The factor for the attenuation effect. Higher values make the sound audible over a larger distance.
    final public var unitSize: Double {
        get {
            return get_unit_size ()
        }
        
        set {
            set_unit_size (newValue)
        }
        
    }
    
    /// Sets the absolute maximum of the sound level, in decibels.
    final public var maxDb: Double {
        get {
            return get_max_db ()
        }
        
        set {
            set_max_db (newValue)
        }
        
    }
    
    /// The pitch and the tempo of the audio, as a multiplier of the audio sample's sample rate.
    final public var pitchScale: Double {
        get {
            return get_pitch_scale ()
        }
        
        set {
            set_pitch_scale (newValue)
        }
        
    }
    
    /// If `true`, audio plays when the AudioStreamPlayer3D node is added to scene tree.
    final public var autoplay: Bool {
        get {
            return is_autoplay_enabled ()
        }
        
        set {
            set_autoplay (newValue)
        }
        
    }
    
    /// If `true`, the playback is paused. You can resume it by setting ``streamPaused`` to `false`.
    final public var streamPaused: Bool {
        get {
            return get_stream_paused ()
        }
        
        set {
            set_stream_paused (newValue)
        }
        
    }
    
    /// The distance past which the sound can no longer be heard at all. Only has an effect if set to a value greater than `0.0`. ``maxDistance`` works in tandem with ``unitSize``. However, unlike ``unitSize`` whose behavior depends on the ``attenuationModel``, ``maxDistance`` always works in a linear fashion. This can be used to prevent the ``AudioStreamPlayer3D`` from requiring audio mixing when the listener is far away, which saves CPU resources.
    final public var maxDistance: Double {
        get {
            return get_max_distance ()
        }
        
        set {
            set_max_distance (newValue)
        }
        
    }
    
    /// The maximum number of sounds this node can play at the same time. Playing additional sounds after this value is reached will cut off the oldest sounds.
    final public var maxPolyphony: Int32 {
        get {
            return get_max_polyphony ()
        }
        
        set {
            set_max_polyphony (newValue)
        }
        
    }
    
    /// Scales the panning strength for this node by multiplying the base ``ProjectSettings/audio/general/3dPanningStrength`` with this factor. Higher values will pan audio from left to right more dramatically than lower values.
    final public var panningStrength: Double {
        get {
            return get_panning_strength ()
        }
        
        set {
            set_panning_strength (newValue)
        }
        
    }
    
    /// The bus on which this audio is playing.
    /// 
    /// > Note: When setting this property, keep in mind that no validation is performed to see if the given name matches an existing bus. This is because audio bus layouts might be loaded after this property is set. If this given name can't be resolved at runtime, it will fall back to `"Master"`.
    /// 
    final public var bus: StringName {
        get {
            return get_bus ()
        }
        
        set {
            set_bus (newValue)
        }
        
    }
    
    /// Determines which ``Area3D`` layers affect the sound for reverb and audio bus effects. Areas can be used to redirect ``AudioStream``s so that they play in a certain audio bus. An example of how you might use this is making a "water" area so that sounds played in the water are redirected through an audio bus to make them sound like they are being played underwater.
    final public var areaMask: UInt32 {
        get {
            return get_area_mask ()
        }
        
        set {
            set_area_mask (newValue)
        }
        
    }
    
    /// If `true`, the audio should be attenuated according to the direction of the sound.
    final public var emissionAngleEnabled: Bool {
        get {
            return is_emission_angle_enabled ()
        }
        
        set {
            set_emission_angle_enabled (newValue)
        }
        
    }
    
    /// The angle in which the audio reaches a listener unattenuated.
    final public var emissionAngleDegrees: Double {
        get {
            return get_emission_angle ()
        }
        
        set {
            set_emission_angle (newValue)
        }
        
    }
    
    /// Attenuation factor used if listener is outside of ``emissionAngleDegrees`` and ``emissionAngleEnabled`` is set, in decibels.
    final public var emissionAngleFilterAttenuationDb: Double {
        get {
            return get_emission_angle_filter_attenuation_db ()
        }
        
        set {
            set_emission_angle_filter_attenuation_db (newValue)
        }
        
    }
    
    /// The cutoff frequency of the attenuation low-pass filter, in Hz. A sound above this frequency is attenuated more than a sound below this frequency. To disable this effect, set this to `20500` as this frequency is above the human hearing limit.
    final public var attenuationFilterCutoffHz: Double {
        get {
            return get_attenuation_filter_cutoff_hz ()
        }
        
        set {
            set_attenuation_filter_cutoff_hz (newValue)
        }
        
    }
    
    /// Amount how much the filter affects the loudness, in decibels.
    final public var attenuationFilterDb: Double {
        get {
            return get_attenuation_filter_db ()
        }
        
        set {
            set_attenuation_filter_db (newValue)
        }
        
    }
    
    /// Decides in which step the Doppler effect should be calculated.
    final public var dopplerTracking: AudioStreamPlayer3D.DopplerTracking {
        get {
            return get_doppler_tracking ()
        }
        
        set {
            set_doppler_tracking (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_stream: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_stream")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2210767741)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_stream (_ stream: AudioStream?) {
        #if false
        
        var copy_stream_handle = stream?.handle
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_stream, UnsafeMutableRawPointer (mutating: handle), nil, &copy_stream_handle)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: stream?.handle) { p0 in
        _args.append (stream == nil ? nil : p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_stream, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_stream: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_stream")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 160907539)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_stream ()-> AudioStream? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_stream, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_volume_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_volume_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_volume_db (_ volumeDb: Double) {
        #if false
        
        var copy_volume_db = volumeDb
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_volume_db, UnsafeMutableRawPointer (mutating: handle), nil, &copy_volume_db)
        
        #else
        
        var copy_volume_db = volumeDb
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_volume_db) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_volume_db, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_volume_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_volume_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_volume_db ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_volume_db, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_unit_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_unit_size")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_unit_size (_ unitSize: Double) {
        #if false
        
        var copy_unit_size = unitSize
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_unit_size, UnsafeMutableRawPointer (mutating: handle), nil, &copy_unit_size)
        
        #else
        
        var copy_unit_size = unitSize
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_unit_size) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_unit_size, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_unit_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_unit_size")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_unit_size ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_unit_size, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_max_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_max_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_max_db (_ maxDb: Double) {
        #if false
        
        var copy_max_db = maxDb
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_max_db, UnsafeMutableRawPointer (mutating: handle), nil, &copy_max_db)
        
        #else
        
        var copy_max_db = maxDb
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_max_db) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_max_db, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_max_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_max_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_max_db ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_max_db, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_pitch_scale: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_pitch_scale")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_pitch_scale (_ pitchScale: Double) {
        #if false
        
        var copy_pitch_scale = pitchScale
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_pitch_scale, UnsafeMutableRawPointer (mutating: handle), nil, &copy_pitch_scale)
        
        #else
        
        var copy_pitch_scale = pitchScale
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_pitch_scale) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_pitch_scale, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_pitch_scale: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_pitch_scale")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_pitch_scale ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_pitch_scale, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_play: GDExtensionMethodBindPtr = {
        let methodName = StringName ("play")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1958160172)!
            }
            
        }
        
    }()
    
    /// Queues the audio to play on the next physics frame, from the given position `fromPosition`, in seconds.
    public final func play (fromPosition: Double = 0.0) {
        #if false
        
        var copy_from_position = fromPosition
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_play, UnsafeMutableRawPointer (mutating: handle), nil, &copy_from_position)
        
        #else
        
        var copy_from_position = fromPosition
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_from_position) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_play, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_seek: GDExtensionMethodBindPtr = {
        let methodName = StringName ("seek")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    /// Sets the position from which audio will be played, in seconds.
    public final func seek (toPosition: Double) {
        #if false
        
        var copy_to_position = toPosition
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_seek, UnsafeMutableRawPointer (mutating: handle), nil, &copy_to_position)
        
        #else
        
        var copy_to_position = toPosition
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_to_position) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_seek, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_stop: GDExtensionMethodBindPtr = {
        let methodName = StringName ("stop")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// Stops the audio.
    public final func stop () {
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_stop, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_is_playing: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_playing")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    public final func isPlaying ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_is_playing, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_playback_position: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_playback_position")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 191475506)!
            }
            
        }
        
    }()
    
    /// Returns the position in the ``AudioStream``.
    public final func getPlaybackPosition ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_playback_position, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_bus: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_bus")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3304788590)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_bus (_ bus: StringName) {
        #if false
        
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_bus, UnsafeMutableRawPointer (mutating: handle), nil, &bus.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &bus.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_bus, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_bus: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bus")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2002593661)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_bus ()-> StringName {
        let _result: StringName = StringName ()
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_bus, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_autoplay: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_autoplay")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_autoplay (_ enable: Bool) {
        #if false
        
        var copy_enable = enable
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_autoplay, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enable)
        
        #else
        
        var copy_enable = enable
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enable) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_autoplay, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_is_autoplay_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_autoplay_enabled")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2240911060)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func is_autoplay_enabled ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_is_autoplay_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_max_distance: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_max_distance")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_max_distance (_ meters: Double) {
        #if false
        
        var copy_meters = meters
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_max_distance, UnsafeMutableRawPointer (mutating: handle), nil, &copy_meters)
        
        #else
        
        var copy_meters = meters
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_meters) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_max_distance, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_max_distance: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_max_distance")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_max_distance ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_max_distance, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_area_mask: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_area_mask")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_area_mask (_ mask: UInt32) {
        #if false
        
        var copy_mask: Int = Int (mask)
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_area_mask, UnsafeMutableRawPointer (mutating: handle), nil, &copy_mask)
        
        #else
        
        var copy_mask: Int = Int (mask)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_mask) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_area_mask, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_area_mask: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_area_mask")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_area_mask ()-> UInt32 {
        var _result: UInt32 = 0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_area_mask, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_emission_angle: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_emission_angle")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_emission_angle (_ degrees: Double) {
        #if false
        
        var copy_degrees = degrees
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_emission_angle, UnsafeMutableRawPointer (mutating: handle), nil, &copy_degrees)
        
        #else
        
        var copy_degrees = degrees
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_degrees) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_emission_angle, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_emission_angle: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_emission_angle")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_emission_angle ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_emission_angle, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_emission_angle_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_emission_angle_enabled")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_emission_angle_enabled (_ enabled: Bool) {
        #if false
        
        var copy_enabled = enabled
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_emission_angle_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enabled)
        
        #else
        
        var copy_enabled = enabled
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enabled) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_emission_angle_enabled, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_is_emission_angle_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_emission_angle_enabled")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func is_emission_angle_enabled ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_is_emission_angle_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_emission_angle_filter_attenuation_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_emission_angle_filter_attenuation_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_emission_angle_filter_attenuation_db (_ db: Double) {
        #if false
        
        var copy_db = db
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_emission_angle_filter_attenuation_db, UnsafeMutableRawPointer (mutating: handle), nil, &copy_db)
        
        #else
        
        var copy_db = db
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_db) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_emission_angle_filter_attenuation_db, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_emission_angle_filter_attenuation_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_emission_angle_filter_attenuation_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_emission_angle_filter_attenuation_db ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_emission_angle_filter_attenuation_db, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_attenuation_filter_cutoff_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_attenuation_filter_cutoff_hz")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_attenuation_filter_cutoff_hz (_ degrees: Double) {
        #if false
        
        var copy_degrees = degrees
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_attenuation_filter_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), nil, &copy_degrees)
        
        #else
        
        var copy_degrees = degrees
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_degrees) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_attenuation_filter_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_attenuation_filter_cutoff_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_attenuation_filter_cutoff_hz")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_attenuation_filter_cutoff_hz ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_attenuation_filter_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_attenuation_filter_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_attenuation_filter_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_attenuation_filter_db (_ db: Double) {
        #if false
        
        var copy_db = db
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_attenuation_filter_db, UnsafeMutableRawPointer (mutating: handle), nil, &copy_db)
        
        #else
        
        var copy_db = db
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_db) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_attenuation_filter_db, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_attenuation_filter_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_attenuation_filter_db")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_attenuation_filter_db ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_attenuation_filter_db, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_attenuation_model: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_attenuation_model")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2988086229)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_attenuation_model (_ model: AudioStreamPlayer3D.AttenuationModel) {
        #if false
        
        var copy_model = Int64 (model.rawValue)
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_attenuation_model, UnsafeMutableRawPointer (mutating: handle), nil, &copy_model)
        
        #else
        
        var copy_model = Int64 (model.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_model) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_attenuation_model, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_attenuation_model: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_attenuation_model")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3035106060)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_attenuation_model ()-> AudioStreamPlayer3D.AttenuationModel {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_attenuation_model, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return AudioStreamPlayer3D.AttenuationModel (rawValue: _result)!
    }
    
    fileprivate static var method_set_doppler_tracking: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_doppler_tracking")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3968161450)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_doppler_tracking (_ mode: AudioStreamPlayer3D.DopplerTracking) {
        #if false
        
        var copy_mode = Int64 (mode.rawValue)
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_doppler_tracking, UnsafeMutableRawPointer (mutating: handle), nil, &copy_mode)
        
        #else
        
        var copy_mode = Int64 (mode.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_mode) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_doppler_tracking, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_doppler_tracking: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_doppler_tracking")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1702418664)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_doppler_tracking ()-> AudioStreamPlayer3D.DopplerTracking {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_doppler_tracking, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return AudioStreamPlayer3D.DopplerTracking (rawValue: _result)!
    }
    
    fileprivate static var method_set_stream_paused: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_stream_paused")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_stream_paused (_ pause: Bool) {
        #if false
        
        var copy_pause = pause
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_stream_paused, UnsafeMutableRawPointer (mutating: handle), nil, &copy_pause)
        
        #else
        
        var copy_pause = pause
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_pause) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_stream_paused, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_stream_paused: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_stream_paused")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_stream_paused ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_stream_paused, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_max_polyphony: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_max_polyphony")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_max_polyphony (_ maxPolyphony: Int32) {
        #if false
        
        var copy_max_polyphony: Int = Int (maxPolyphony)
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_max_polyphony, UnsafeMutableRawPointer (mutating: handle), nil, &copy_max_polyphony)
        
        #else
        
        var copy_max_polyphony: Int = Int (maxPolyphony)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_max_polyphony) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_max_polyphony, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_max_polyphony: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_max_polyphony")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_max_polyphony ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_max_polyphony, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_panning_strength: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_panning_strength")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_panning_strength (_ panningStrength: Double) {
        #if false
        
        var copy_panning_strength = panningStrength
        
        gi.object_method_bind_ptrcall_v (AudioStreamPlayer3D.method_set_panning_strength, UnsafeMutableRawPointer (mutating: handle), nil, &copy_panning_strength)
        
        #else
        
        var copy_panning_strength = panningStrength
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_panning_strength) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_set_panning_strength, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_panning_strength: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_panning_strength")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_panning_strength ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_panning_strength, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_has_stream_playback: GDExtensionMethodBindPtr = {
        let methodName = StringName ("has_stream_playback")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2240911060)!
            }
            
        }
        
    }()
    
    /// Returns whether the ``AudioStreamPlayer`` can return the ``AudioStreamPlayback`` object or not.
    public final func hasStreamPlayback ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_has_stream_playback, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_stream_playback: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_stream_playback")
        return withUnsafePointer (to: &AudioStreamPlayer3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 210135309)!
            }
            
        }
        
    }()
    
    /// Returns the ``AudioStreamPlayback`` object associated with this ``AudioStreamPlayer3D``.
    public final func getStreamPlayback ()-> AudioStreamPlayback? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (AudioStreamPlayer3D.method_get_stream_playback, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    // Signals 
    /// Emitted when the audio stops playing.
    ///
    /// To connect to this signal, reference this property and call the
    /// 
    /// `connect` method with the method you want to invoke
    /// 
    /// 
    /// 
    /// Example:
    /// ```swift
    /// obj.finished.connect {
    ///    print ("caught signal")
    /// }
    /// ```
    public var finished: SimpleSignal { SimpleSignal (target: self, signalName: "finished") }
    
}

