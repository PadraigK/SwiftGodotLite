// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Occluder shape resource for use with occlusion culling in ``OccluderInstance3D``.
/// 
/// ``Occluder3D`` stores an occluder shape that can be used by the engine's occlusion culling system.
/// 
/// See ``OccluderInstance3D``'s documentation for instructions on setting up occlusion culling.
/// 
open class Occluder3D: Resource {
    override open class var godotClassName: StringName { "Occluder3D" }
    /* Methods */
    fileprivate static var method_get_vertices: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_vertices")
        return withUnsafePointer (to: &Occluder3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 497664490)!
            }
            
        }
        
    }()
    
    /// Returns the occluder shape's vertex positions.
    public final func getVertices ()-> PackedVector3Array {
        let _result: PackedVector3Array = PackedVector3Array ()
        gi.object_method_bind_ptrcall (Occluder3D.method_get_vertices, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_get_indices: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_indices")
        return withUnsafePointer (to: &Occluder3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1930428628)!
            }
            
        }
        
    }()
    
    /// Returns the occluder shape's vertex indices.
    public final func getIndices ()-> PackedInt32Array {
        let _result: PackedInt32Array = PackedInt32Array ()
        gi.object_method_bind_ptrcall (Occluder3D.method_get_indices, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
}

