// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class GDExtension: Resource {
    override open class var godotClassName: StringName { "GDExtension" }
    public enum InitializationLevel: Int64 {
        /// 
        case core = 0 // INITIALIZATION_LEVEL_CORE
        /// 
        case servers = 1 // INITIALIZATION_LEVEL_SERVERS
        /// 
        case scene = 2 // INITIALIZATION_LEVEL_SCENE
        /// 
        case editor = 3 // INITIALIZATION_LEVEL_EDITOR
    }
    
    /* Methods */
    fileprivate static var method_open_library: GDExtensionMethodBindPtr = {
        let methodName = StringName ("open_library")
        return withUnsafePointer (to: &GDExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 852856452)!
            }
            
        }
        
    }()
    
    /// 
    public final func openLibrary (path: String, entrySymbol: String)-> GodotError {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        #if false
        
        let gstr_path = GString (path)
        let gstr_entry_symbol = GString (entrySymbol)
        
        gi.object_method_bind_ptrcall_v (GDExtension.method_open_library, UnsafeMutableRawPointer (mutating: handle), &_result, &gstr_path.content, &gstr_entry_symbol.content)
        return GodotError (rawValue: _result)!
        #else
        
        let gstr_path = GString (path)
        let gstr_entry_symbol = GString (entrySymbol)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &gstr_path.content) { p0 in
            _args.append (p0)
            return withUnsafePointer (to: &gstr_entry_symbol.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (GDExtension.method_open_library, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
                return GodotError (rawValue: _result)!
            }
        }
        
        #endif
    }
    
    fileprivate static var method_close_library: GDExtensionMethodBindPtr = {
        let methodName = StringName ("close_library")
        return withUnsafePointer (to: &GDExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// 
    public final func closeLibrary () {
        gi.object_method_bind_ptrcall (GDExtension.method_close_library, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_is_library_open: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_library_open")
        return withUnsafePointer (to: &GDExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    /// 
    public final func isLibraryOpen ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (GDExtension.method_is_library_open, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_minimum_library_initialization_level: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_minimum_library_initialization_level")
        return withUnsafePointer (to: &GDExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 964858755)!
            }
            
        }
        
    }()
    
    /// 
    public final func getMinimumLibraryInitializationLevel ()-> GDExtension.InitializationLevel {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (GDExtension.method_get_minimum_library_initialization_level, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return GDExtension.InitializationLevel (rawValue: _result)!
    }
    
    fileprivate static var method_initialize_library: GDExtensionMethodBindPtr = {
        let methodName = StringName ("initialize_library")
        return withUnsafePointer (to: &GDExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3409922941)!
            }
            
        }
        
    }()
    
    /// 
    public final func initializeLibrary (level: GDExtension.InitializationLevel) {
        #if false
        
        var copy_level = Int64 (level.rawValue)
        
        gi.object_method_bind_ptrcall_v (GDExtension.method_initialize_library, UnsafeMutableRawPointer (mutating: handle), nil, &copy_level)
        
        #else
        
        var copy_level = Int64 (level.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_level) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GDExtension.method_initialize_library, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
}

