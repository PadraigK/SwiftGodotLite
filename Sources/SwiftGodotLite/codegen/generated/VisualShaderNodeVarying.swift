// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A visual shader node that represents a "varying" shader value.
/// 
/// Varying values are shader variables that can be passed between shader functions, e.g. from Vertex shader to Fragment shader.
open class VisualShaderNodeVarying: VisualShaderNode {
    override open class var godotClassName: StringName { "VisualShaderNodeVarying" }
    
    /* Properties */
    
    /// Name of the variable. Must be unique.
    final public var varyingName: String {
        get {
            return get_varying_name ()
        }
        
        set {
            set_varying_name (newValue)
        }
        
    }
    
    /// Type of the variable. Determines where the variable can be accessed.
    final public var varyingType: VisualShader.VaryingType {
        get {
            return get_varying_type ()
        }
        
        set {
            set_varying_type (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_varying_name: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_varying_name")
        return withUnsafePointer (to: &VisualShaderNodeVarying.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 83702148)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_varying_name (_ name: String) {
        #if true
        
        let gstr_name = GString (name)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeVarying.method_set_varying_name, UnsafeMutableRawPointer (mutating: handle), nil, &gstr_name.content)
        
        #else
        
        let gstr_name = GString (name)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &gstr_name.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeVarying.method_set_varying_name, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_varying_name: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_varying_name")
        return withUnsafePointer (to: &VisualShaderNodeVarying.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 201670096)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_varying_name ()-> String {
        let _result = GString ()
        gi.object_method_bind_ptrcall (VisualShaderNodeVarying.method_get_varying_name, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result.description
    }
    
    fileprivate static var method_set_varying_type: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_varying_type")
        return withUnsafePointer (to: &VisualShaderNodeVarying.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3565867981)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_varying_type (_ type: VisualShader.VaryingType) {
        #if true
        
        var copy_type = Int64 (type.rawValue)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeVarying.method_set_varying_type, UnsafeMutableRawPointer (mutating: handle), nil, &copy_type)
        
        #else
        
        var copy_type = Int64 (type.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_type) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeVarying.method_set_varying_type, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_varying_type: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_varying_type")
        return withUnsafePointer (to: &VisualShaderNodeVarying.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 523183580)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_varying_type ()-> VisualShader.VaryingType {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (VisualShaderNodeVarying.method_get_varying_type, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return VisualShader.VaryingType (rawValue: _result)!
    }
    
}

