// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class PolygonPathFinder: Resource {
    override open class var godotClassName: StringName { "PolygonPathFinder" }
    
    /* Properties */
    
    /* Methods */
    fileprivate static var method_setup: GDExtensionMethodBindPtr = {
        let methodName = StringName ("setup")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3251786936)!
            }
            
        }
        
    }()
    
    /// 
    public final func setup (points: PackedVector2Array, connections: PackedInt32Array) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_setup, UnsafeMutableRawPointer (mutating: handle), nil, &points.content, &connections.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &points.content) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &connections.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (PolygonPathFinder.method_setup, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_find_path: GDExtensionMethodBindPtr = {
        let methodName = StringName ("find_path")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1562168077)!
            }
            
        }
        
    }()
    
    /// 
    public final func findPath (from: Vector2, to: Vector2)-> PackedVector2Array {
        let _result: PackedVector2Array = PackedVector2Array ()
        #if true
        
        var copy_from = from
        var copy_to = to
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_find_path, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_from, &copy_to)
        return _result
        #else
        
        var copy_from = from
        var copy_to = to
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_from) { p0 in
            _args.append (p0)
            return withUnsafePointer (to: &copy_to) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (PolygonPathFinder.method_find_path, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
                return _result
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_intersections: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_intersections")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3932192302)!
            }
            
        }
        
    }()
    
    /// 
    public final func getIntersections (from: Vector2, to: Vector2)-> PackedVector2Array {
        let _result: PackedVector2Array = PackedVector2Array ()
        #if true
        
        var copy_from = from
        var copy_to = to
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_get_intersections, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_from, &copy_to)
        return _result
        #else
        
        var copy_from = from
        var copy_to = to
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_from) { p0 in
            _args.append (p0)
            return withUnsafePointer (to: &copy_to) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (PolygonPathFinder.method_get_intersections, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
                return _result
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_closest_point: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_closest_point")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2656412154)!
            }
            
        }
        
    }()
    
    /// 
    public final func getClosestPoint (_ point: Vector2)-> Vector2 {
        var _result: Vector2 = Vector2 ()
        #if true
        
        var copy_point = point
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_get_closest_point, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_point)
        return _result
        #else
        
        var copy_point = point
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_point) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PolygonPathFinder.method_get_closest_point, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_is_point_inside: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_point_inside")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 556197845)!
            }
            
        }
        
    }()
    
    /// 
    public final func isPointInside (point: Vector2)-> Bool {
        var _result: Bool = false
        #if true
        
        var copy_point = point
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_is_point_inside, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_point)
        return _result
        #else
        
        var copy_point = point
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_point) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PolygonPathFinder.method_is_point_inside, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_point_penalty: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_point_penalty")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setPointPenalty (idx: Int32, penalty: Double) {
        #if true
        
        var copy_idx: Int = Int (idx)
        var copy_penalty = penalty
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_set_point_penalty, UnsafeMutableRawPointer (mutating: handle), nil, &copy_idx, &copy_penalty)
        
        #else
        
        var copy_idx: Int = Int (idx)
        var copy_penalty = penalty
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_penalty) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (PolygonPathFinder.method_set_point_penalty, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_point_penalty: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_point_penalty")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getPointPenalty (idx: Int32)-> Double {
        var _result: Double = 0.0
        #if true
        
        var copy_idx: Int = Int (idx)
        
        gi.object_method_bind_ptrcall_v (PolygonPathFinder.method_get_point_penalty, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_idx)
        return _result
        #else
        
        var copy_idx: Int = Int (idx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PolygonPathFinder.method_get_point_penalty, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_get_bounds: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bounds")
        return withUnsafePointer (to: &PolygonPathFinder.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1639390495)!
            }
            
        }
        
    }()
    
    /// 
    public final func getBounds ()-> Rect2 {
        var _result: Rect2 = Rect2 ()
        gi.object_method_bind_ptrcall (PolygonPathFinder.method_get_bounds, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

