// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A scalar float parameter to be used within the visual shader graph.
/// 
/// Translated to `uniform float` in the shader language.
open class VisualShaderNodeFloatParameter: VisualShaderNodeParameter {
    override open class var godotClassName: StringName { "VisualShaderNodeFloatParameter" }
    public enum Hint: Int64 {
        /// No hint used.
        case none = 0 // HINT_NONE
        /// A range hint for scalar value, which limits possible input values between ``min`` and ``max``. Translated to `hint_range(min, max)` in shader code.
        case range = 1 // HINT_RANGE
        /// A range hint for scalar value with step, which limits possible input values between ``min`` and ``max``, with a step (increment) of ``step``). Translated to `hint_range(min, max, step)` in shader code.
        case rangeStep = 2 // HINT_RANGE_STEP
        /// Represents the size of the ``VisualShaderNodeFloatParameter/Hint`` enum.
        case max = 3 // HINT_MAX
    }
    
    
    /* Properties */
    
    /// A hint applied to the uniform, which controls the values it can take when set through the Inspector.
    final public var hint: VisualShaderNodeFloatParameter.Hint {
        get {
            return get_hint ()
        }
        
        set {
            set_hint (newValue)
        }
        
    }
    
    /// Maximum value for range hints. Used if ``hint`` is set to .range or .rangeStep.
    final public var min: Double {
        get {
            return get_min ()
        }
        
        set {
            set_min (newValue)
        }
        
    }
    
    /// Minimum value for range hints. Used if ``hint`` is set to .range or .rangeStep.
    final public var max: Double {
        get {
            return get_max ()
        }
        
        set {
            set_max (newValue)
        }
        
    }
    
    /// Step (increment) value for the range hint with step. Used if ``hint`` is set to .rangeStep.
    final public var step: Double {
        get {
            return get_step ()
        }
        
        set {
            set_step (newValue)
        }
        
    }
    
    /// Enables usage of the ``defaultValue``.
    final public var defaultValueEnabled: Bool {
        get {
            return is_default_value_enabled ()
        }
        
        set {
            set_default_value_enabled (newValue)
        }
        
    }
    
    /// A default value to be assigned within the shader.
    final public var defaultValue: Double {
        get {
            return get_default_value ()
        }
        
        set {
            set_default_value (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_hint: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_hint")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3712586466)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_hint (_ hint: VisualShaderNodeFloatParameter.Hint) {
        #if true
        
        var copy_hint = Int64 (hint.rawValue)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeFloatParameter.method_set_hint, UnsafeMutableRawPointer (mutating: handle), nil, &copy_hint)
        
        #else
        
        var copy_hint = Int64 (hint.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_hint) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_set_hint, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_hint: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_hint")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3042240429)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_hint ()-> VisualShaderNodeFloatParameter.Hint {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_get_hint, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return VisualShaderNodeFloatParameter.Hint (rawValue: _result)!
    }
    
    fileprivate static var method_set_min: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_min")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_min (_ value: Double) {
        #if true
        
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeFloatParameter.method_set_min, UnsafeMutableRawPointer (mutating: handle), nil, &copy_value)
        
        #else
        
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_value) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_set_min, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_min: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_min")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_min ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_get_min, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_max: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_max")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_max (_ value: Double) {
        #if true
        
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeFloatParameter.method_set_max, UnsafeMutableRawPointer (mutating: handle), nil, &copy_value)
        
        #else
        
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_value) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_set_max, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_max: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_max")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_max ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_get_max, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_step: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_step")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_step (_ value: Double) {
        #if true
        
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeFloatParameter.method_set_step, UnsafeMutableRawPointer (mutating: handle), nil, &copy_value)
        
        #else
        
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_value) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_set_step, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_step: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_step")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_step ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_get_step, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_default_value_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_default_value_enabled")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_default_value_enabled (_ enabled: Bool) {
        #if true
        
        var copy_enabled = enabled
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeFloatParameter.method_set_default_value_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enabled)
        
        #else
        
        var copy_enabled = enabled
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enabled) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_set_default_value_enabled, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_is_default_value_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_default_value_enabled")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func is_default_value_enabled ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_is_default_value_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_default_value: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_default_value")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_default_value (_ value: Double) {
        #if true
        
        var copy_value = value
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeFloatParameter.method_set_default_value, UnsafeMutableRawPointer (mutating: handle), nil, &copy_value)
        
        #else
        
        var copy_value = value
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_value) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_set_default_value, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_default_value: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_default_value")
        return withUnsafePointer (to: &VisualShaderNodeFloatParameter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_default_value ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (VisualShaderNodeFloatParameter.method_get_default_value, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

