// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A class representing an Ogg Vorbis audio stream.
/// 
/// The AudioStreamOggVorbis class is a specialized ``AudioStream`` for handling Ogg Vorbis file formats. It offers functionality for loading and playing back Ogg Vorbis files, as well as managing looping and other playback properties. This class is part of the audio stream system, which also supports WAV files through the ``AudioStreamWAV`` class.
open class AudioStreamOggVorbis: AudioStream {
    override open class var godotClassName: StringName { "AudioStreamOggVorbis" }
    
    /* Properties */
    
    /// Contains the raw Ogg data for this stream.
    final public var packetSequence: OggPacketSequence? {
        get {
            return get_packet_sequence ()
        }
        
        set {
            set_packet_sequence (newValue)
        }
        
    }
    
    final public var bpm: Double {
        get {
            return get_bpm ()
        }
        
        set {
            set_bpm (newValue)
        }
        
    }
    
    final public var beatCount: Int32 {
        get {
            return get_beat_count ()
        }
        
        set {
            set_beat_count (newValue)
        }
        
    }
    
    final public var barBeats: Int32 {
        get {
            return get_bar_beats ()
        }
        
        set {
            set_bar_beats (newValue)
        }
        
    }
    
    /// If `true`, the audio will play again from the specified ``loopOffset`` once it is done playing. Useful for ambient sounds and background music.
    final public var loop: Bool {
        get {
            return has_loop ()
        }
        
        set {
            set_loop (newValue)
        }
        
    }
    
    /// Time in seconds at which the stream starts after being looped.
    final public var loopOffset: Double {
        get {
            return get_loop_offset ()
        }
        
        set {
            set_loop_offset (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_load_from_buffer: GDExtensionMethodBindPtr = {
        let methodName = StringName ("load_from_buffer")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 354904730)!
            }
            
        }
        
    }()
    
    /// Creates a new AudioStreamOggVorbis instance from the given buffer. The buffer must contain Ogg Vorbis data.
    public static func loadFromBuffer (_ buffer: PackedByteArray)-> AudioStreamOggVorbis? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        #if false
        
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_load_from_buffer, nil, &_result, &buffer.content)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
        #else
        
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &buffer.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_load_from_buffer, nil, &_args, &_result)
            guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
        }
        
        #endif
    }
    
    fileprivate static var method_load_from_file: GDExtensionMethodBindPtr = {
        let methodName = StringName ("load_from_file")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 797568536)!
            }
            
        }
        
    }()
    
    /// Creates a new AudioStreamOggVorbis instance from the given file path. The file must be in Ogg Vorbis format.
    public static func loadFromFile (path: String)-> AudioStreamOggVorbis? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        #if false
        
        let gstr_path = GString (path)
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_load_from_file, nil, &_result, &gstr_path.content)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
        #else
        
        let gstr_path = GString (path)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &gstr_path.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_load_from_file, nil, &_args, &_result)
            guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
        }
        
        #endif
    }
    
    fileprivate static var method_set_packet_sequence: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_packet_sequence")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 438882457)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_packet_sequence (_ packetSequence: OggPacketSequence?) {
        #if false
        
        var copy_packet_sequence_handle = packetSequence?.handle
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_set_packet_sequence, UnsafeMutableRawPointer (mutating: handle), nil, &copy_packet_sequence_handle)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: packetSequence?.handle) { p0 in
        _args.append (packetSequence == nil ? nil : p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_set_packet_sequence, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_packet_sequence: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_packet_sequence")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2801636033)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_packet_sequence ()-> OggPacketSequence? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_get_packet_sequence, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_loop: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_loop")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_loop (_ enable: Bool) {
        #if false
        
        var copy_enable = enable
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_set_loop, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enable)
        
        #else
        
        var copy_enable = enable
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enable) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_set_loop, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_has_loop: GDExtensionMethodBindPtr = {
        let methodName = StringName ("has_loop")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func has_loop ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_has_loop, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_loop_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_loop_offset")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_loop_offset (_ seconds: Double) {
        #if false
        
        var copy_seconds = seconds
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_set_loop_offset, UnsafeMutableRawPointer (mutating: handle), nil, &copy_seconds)
        
        #else
        
        var copy_seconds = seconds
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_seconds) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_set_loop_offset, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_loop_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_loop_offset")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_loop_offset ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_get_loop_offset, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_bpm: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_bpm")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_bpm (_ bpm: Double) {
        #if false
        
        var copy_bpm = bpm
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_set_bpm, UnsafeMutableRawPointer (mutating: handle), nil, &copy_bpm)
        
        #else
        
        var copy_bpm = bpm
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_bpm) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_set_bpm, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_bpm: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bpm")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_bpm ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_get_bpm, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_beat_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_beat_count")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_beat_count (_ count: Int32) {
        #if false
        
        var copy_count: Int = Int (count)
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_set_beat_count, UnsafeMutableRawPointer (mutating: handle), nil, &copy_count)
        
        #else
        
        var copy_count: Int = Int (count)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_count) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_set_beat_count, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_beat_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_beat_count")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_beat_count ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_get_beat_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_bar_beats: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_bar_beats")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_bar_beats (_ count: Int32) {
        #if false
        
        var copy_count: Int = Int (count)
        
        gi.object_method_bind_ptrcall_v (AudioStreamOggVorbis.method_set_bar_beats, UnsafeMutableRawPointer (mutating: handle), nil, &copy_count)
        
        #else
        
        var copy_count: Int = Int (count)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_count) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_set_bar_beats, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_bar_beats: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bar_beats")
        return withUnsafePointer (to: &AudioStreamOggVorbis.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_bar_beats ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (AudioStreamOggVorbis.method_get_bar_beats, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

