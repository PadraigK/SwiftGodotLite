// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Provides virtual methods that can be overridden to create custom ``PhysicsServer2D`` implementations.
/// 
/// This class extends ``PhysicsServer2D`` by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.
/// 
/// Intended for use with GDExtension to create custom implementations of ``PhysicsServer2D``.
/// 
open class PhysicsServer2DExtension: PhysicsServer2D {
    override open class var godotClassName: StringName { "PhysicsServer2DExtension" }
    /* Methods */
    /// 
    @_documentation(visibility: public)
    open func _worldBoundaryShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _separationRayShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _segmentShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _circleShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _rectangleShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _capsuleShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _convexPolygonShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _concavePolygonShapeCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _shapeSetData (shape: RID, data: Variant) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _shapeSetCustomSolverBias (shape: RID, bias: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _shapeGetType (shape: RID)-> PhysicsServer2D.ShapeType {
        return PhysicsServer2D.ShapeType(rawValue: 0)!
    }
    
    /// 
    @_documentation(visibility: public)
    open func _shapeGetData (shape: RID)-> Variant {
        return Variant ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _shapeGetCustomSolverBias (shape: RID)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceSetActive (space: RID, active: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceIsActive (space: RID)-> Bool {
        return false
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceSetParam (space: RID, param: PhysicsServer2D.SpaceParameter, value: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceGetParam (space: RID, param: PhysicsServer2D.SpaceParameter)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceGetDirectState (space: RID)-> PhysicsDirectSpaceState2D? {
        return PhysicsDirectSpaceState2D ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceSetDebugContacts (space: RID, maxContacts: Int32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceGetContacts (space: RID)-> PackedVector2Array {
        return PackedVector2Array ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _spaceGetContactCount (space: RID)-> Int32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetSpace (area: RID, space: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetSpace (area: RID)-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaAddShape (area: RID, shape: RID, transform: Transform2D, disabled: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetShape (area: RID, shapeIdx: Int32, shape: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetShapeTransform (area: RID, shapeIdx: Int32, transform: Transform2D) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetShapeDisabled (area: RID, shapeIdx: Int32, disabled: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetShapeCount (area: RID)-> Int32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetShape (area: RID, shapeIdx: Int32)-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetShapeTransform (area: RID, shapeIdx: Int32)-> Transform2D {
        return Transform2D ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaRemoveShape (area: RID, shapeIdx: Int32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaClearShapes (area: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaAttachObjectInstanceId (area: RID, id: UInt) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetObjectInstanceId (area: RID)-> UInt {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaAttachCanvasInstanceId (area: RID, id: UInt) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetCanvasInstanceId (area: RID)-> UInt {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetParam (area: RID, param: PhysicsServer2D.AreaParameter, value: Variant) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetTransform (area: RID, transform: Transform2D) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetParam (area: RID, param: PhysicsServer2D.AreaParameter)-> Variant {
        return Variant ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetTransform (area: RID)-> Transform2D {
        return Transform2D ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetCollisionLayer (area: RID, layer: UInt32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetCollisionLayer (area: RID)-> UInt32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetCollisionMask (area: RID, mask: UInt32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaGetCollisionMask (area: RID)-> UInt32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetMonitorable (area: RID, monitorable: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetPickable (area: RID, pickable: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetMonitorCallback (area: RID, callback: Callable) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _areaSetAreaMonitorCallback (area: RID, callback: Callable) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetSpace (body: RID, space: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetSpace (body: RID)-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetMode (body: RID, mode: PhysicsServer2D.BodyMode) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetMode (body: RID)-> PhysicsServer2D.BodyMode {
        return PhysicsServer2D.BodyMode(rawValue: 0)!
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAddShape (body: RID, shape: RID, transform: Transform2D, disabled: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetShape (body: RID, shapeIdx: Int32, shape: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetShapeTransform (body: RID, shapeIdx: Int32, transform: Transform2D) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetShapeCount (body: RID)-> Int32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetShape (body: RID, shapeIdx: Int32)-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetShapeTransform (body: RID, shapeIdx: Int32)-> Transform2D {
        return Transform2D ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetShapeDisabled (body: RID, shapeIdx: Int32, disabled: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetShapeAsOneWayCollision (body: RID, shapeIdx: Int32, enable: Bool, margin: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyRemoveShape (body: RID, shapeIdx: Int32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyClearShapes (body: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAttachObjectInstanceId (body: RID, id: UInt) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetObjectInstanceId (body: RID)-> UInt {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAttachCanvasInstanceId (body: RID, id: UInt) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetCanvasInstanceId (body: RID)-> UInt {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetContinuousCollisionDetectionMode (body: RID, mode: PhysicsServer2D.CCDMode) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetContinuousCollisionDetectionMode (body: RID)-> PhysicsServer2D.CCDMode {
        return PhysicsServer2D.CCDMode(rawValue: 0)!
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetCollisionLayer (body: RID, layer: UInt32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetCollisionLayer (body: RID)-> UInt32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetCollisionMask (body: RID, mask: UInt32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetCollisionMask (body: RID)-> UInt32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetCollisionPriority (body: RID, priority: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetCollisionPriority (body: RID)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetParam (body: RID, param: PhysicsServer2D.BodyParameter, value: Variant) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetParam (body: RID, param: PhysicsServer2D.BodyParameter)-> Variant {
        return Variant ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyResetMassProperties (body: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetState (body: RID, state: PhysicsServer2D.BodyState, value: Variant) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetState (body: RID, state: PhysicsServer2D.BodyState)-> Variant {
        return Variant ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyApplyCentralImpulse (body: RID, impulse: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyApplyTorqueImpulse (body: RID, impulse: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyApplyImpulse (body: RID, impulse: Vector2, position: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyApplyCentralForce (body: RID, force: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyApplyForce (body: RID, force: Vector2, position: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyApplyTorque (body: RID, torque: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAddConstantCentralForce (body: RID, force: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAddConstantForce (body: RID, force: Vector2, position: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAddConstantTorque (body: RID, torque: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetConstantForce (body: RID, force: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetConstantForce (body: RID)-> Vector2 {
        return Vector2 ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetConstantTorque (body: RID, torque: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetConstantTorque (body: RID)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetAxisVelocity (body: RID, axisVelocity: Vector2) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyAddCollisionException (body: RID, exceptedBody: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyRemoveCollisionException (body: RID, exceptedBody: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetCollisionExceptions (body: RID)-> VariantCollection<RID> {
        return VariantCollection<RID>()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetMaxContactsReported (body: RID, amount: Int32) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetMaxContactsReported (body: RID)-> Int32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetContactsReportedDepthThreshold (body: RID, threshold: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetContactsReportedDepthThreshold (body: RID)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetOmitForceIntegration (body: RID, enable: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyIsOmittingForceIntegration (body: RID)-> Bool {
        return false
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetStateSyncCallback (body: RID, callable: Callable) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetForceIntegrationCallback (body: RID, callable: Callable, userdata: Variant) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodySetPickable (body: RID, pickable: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _bodyGetDirectState (body: RID)-> PhysicsDirectBodyState2D? {
        return PhysicsDirectBodyState2D ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointCreate ()-> RID {
        return RID ()
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointClear (joint: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointSetParam (joint: RID, param: PhysicsServer2D.JointParam, value: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointGetParam (joint: RID, param: PhysicsServer2D.JointParam)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointDisableCollisionsBetweenBodies (joint: RID, disable: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointIsDisabledCollisionsBetweenBodies (joint: RID)-> Bool {
        return false
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointMakePin (joint: RID, anchor: Vector2, bodyA: RID, bodyB: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointMakeGroove (joint: RID, aGroove1: Vector2, aGroove2: Vector2, bAnchor: Vector2, bodyA: RID, bodyB: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointMakeDampedSpring (joint: RID, anchorA: Vector2, anchorB: Vector2, bodyA: RID, bodyB: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _pinJointSetFlag (joint: RID, flag: PhysicsServer2D.PinJointFlag, enabled: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _pinJointGetFlag (joint: RID, flag: PhysicsServer2D.PinJointFlag)-> Bool {
        return false
    }
    
    /// 
    @_documentation(visibility: public)
    open func _pinJointSetParam (joint: RID, param: PhysicsServer2D.PinJointParam, value: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _pinJointGetParam (joint: RID, param: PhysicsServer2D.PinJointParam)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _dampedSpringJointSetParam (joint: RID, param: PhysicsServer2D.DampedSpringParam, value: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _dampedSpringJointGetParam (joint: RID, param: PhysicsServer2D.DampedSpringParam)-> Double {
        return 0.0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _jointGetType (joint: RID)-> PhysicsServer2D.JointType {
        return PhysicsServer2D.JointType(rawValue: 0)!
    }
    
    /// 
    @_documentation(visibility: public)
    open func _freeRid (_ rid: RID) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _setActive (_ active: Bool) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _init () {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _step (_ step: Double) {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _sync () {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _flushQueries () {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _endSync () {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _finish () {
    }
    
    /// 
    @_documentation(visibility: public)
    open func _isFlushingQueries ()-> Bool {
        return false
    }
    
    /// 
    @_documentation(visibility: public)
    open func _getProcessInfo (_ processInfo: PhysicsServer2D.ProcessInfo)-> Int32 {
        return 0
    }
    
    fileprivate static var method_body_test_motion_is_excluding_body: GDExtensionMethodBindPtr = {
        let methodName = StringName ("body_test_motion_is_excluding_body")
        return withUnsafePointer (to: &PhysicsServer2DExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 4155700596)!
            }
            
        }
        
    }()
    
    /// 
    public final func bodyTestMotionIsExcludingBody (_ body: RID)-> Bool {
        var _result: Bool = false
        #if true
        
        
        gi.object_method_bind_ptrcall_v (PhysicsServer2DExtension.method_body_test_motion_is_excluding_body, UnsafeMutableRawPointer (mutating: handle), &_result, &body.content)
        return _result
        #else
        
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &body.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PhysicsServer2DExtension.method_body_test_motion_is_excluding_body, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_body_test_motion_is_excluding_object: GDExtensionMethodBindPtr = {
        let methodName = StringName ("body_test_motion_is_excluding_object")
        return withUnsafePointer (to: &PhysicsServer2DExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1116898809)!
            }
            
        }
        
    }()
    
    /// 
    public final func bodyTestMotionIsExcludingObject (_ object: UInt)-> Bool {
        var _result: Bool = false
        #if true
        
        var copy_object = object
        
        gi.object_method_bind_ptrcall_v (PhysicsServer2DExtension.method_body_test_motion_is_excluding_object, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_object)
        return _result
        #else
        
        var copy_object = object
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_object) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PhysicsServer2DExtension.method_body_test_motion_is_excluding_object, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    override class func getVirtualDispatcher (name: StringName) -> GDExtensionClassCallVirtual? {
        guard implementedOverrides().contains(name) else { return nil }
        switch name.description {
            case "_area_add_shape":
                return _PhysicsServer2DExtension_proxy_area_add_shape
            case "_area_attach_canvas_instance_id":
                return _PhysicsServer2DExtension_proxy_area_attach_canvas_instance_id
            case "_area_attach_object_instance_id":
                return _PhysicsServer2DExtension_proxy_area_attach_object_instance_id
            case "_area_clear_shapes":
                return _PhysicsServer2DExtension_proxy_area_clear_shapes
            case "_area_create":
                return _PhysicsServer2DExtension_proxy_area_create
            case "_area_get_canvas_instance_id":
                return _PhysicsServer2DExtension_proxy_area_get_canvas_instance_id
            case "_area_get_collision_layer":
                return _PhysicsServer2DExtension_proxy_area_get_collision_layer
            case "_area_get_collision_mask":
                return _PhysicsServer2DExtension_proxy_area_get_collision_mask
            case "_area_get_object_instance_id":
                return _PhysicsServer2DExtension_proxy_area_get_object_instance_id
            case "_area_get_param":
                return _PhysicsServer2DExtension_proxy_area_get_param
            case "_area_get_shape":
                return _PhysicsServer2DExtension_proxy_area_get_shape
            case "_area_get_shape_count":
                return _PhysicsServer2DExtension_proxy_area_get_shape_count
            case "_area_get_shape_transform":
                return _PhysicsServer2DExtension_proxy_area_get_shape_transform
            case "_area_get_space":
                return _PhysicsServer2DExtension_proxy_area_get_space
            case "_area_get_transform":
                return _PhysicsServer2DExtension_proxy_area_get_transform
            case "_area_remove_shape":
                return _PhysicsServer2DExtension_proxy_area_remove_shape
            case "_area_set_area_monitor_callback":
                return _PhysicsServer2DExtension_proxy_area_set_area_monitor_callback
            case "_area_set_collision_layer":
                return _PhysicsServer2DExtension_proxy_area_set_collision_layer
            case "_area_set_collision_mask":
                return _PhysicsServer2DExtension_proxy_area_set_collision_mask
            case "_area_set_monitor_callback":
                return _PhysicsServer2DExtension_proxy_area_set_monitor_callback
            case "_area_set_monitorable":
                return _PhysicsServer2DExtension_proxy_area_set_monitorable
            case "_area_set_param":
                return _PhysicsServer2DExtension_proxy_area_set_param
            case "_area_set_pickable":
                return _PhysicsServer2DExtension_proxy_area_set_pickable
            case "_area_set_shape":
                return _PhysicsServer2DExtension_proxy_area_set_shape
            case "_area_set_shape_disabled":
                return _PhysicsServer2DExtension_proxy_area_set_shape_disabled
            case "_area_set_shape_transform":
                return _PhysicsServer2DExtension_proxy_area_set_shape_transform
            case "_area_set_space":
                return _PhysicsServer2DExtension_proxy_area_set_space
            case "_area_set_transform":
                return _PhysicsServer2DExtension_proxy_area_set_transform
            case "_body_add_collision_exception":
                return _PhysicsServer2DExtension_proxy_body_add_collision_exception
            case "_body_add_constant_central_force":
                return _PhysicsServer2DExtension_proxy_body_add_constant_central_force
            case "_body_add_constant_force":
                return _PhysicsServer2DExtension_proxy_body_add_constant_force
            case "_body_add_constant_torque":
                return _PhysicsServer2DExtension_proxy_body_add_constant_torque
            case "_body_add_shape":
                return _PhysicsServer2DExtension_proxy_body_add_shape
            case "_body_apply_central_force":
                return _PhysicsServer2DExtension_proxy_body_apply_central_force
            case "_body_apply_central_impulse":
                return _PhysicsServer2DExtension_proxy_body_apply_central_impulse
            case "_body_apply_force":
                return _PhysicsServer2DExtension_proxy_body_apply_force
            case "_body_apply_impulse":
                return _PhysicsServer2DExtension_proxy_body_apply_impulse
            case "_body_apply_torque":
                return _PhysicsServer2DExtension_proxy_body_apply_torque
            case "_body_apply_torque_impulse":
                return _PhysicsServer2DExtension_proxy_body_apply_torque_impulse
            case "_body_attach_canvas_instance_id":
                return _PhysicsServer2DExtension_proxy_body_attach_canvas_instance_id
            case "_body_attach_object_instance_id":
                return _PhysicsServer2DExtension_proxy_body_attach_object_instance_id
            case "_body_clear_shapes":
                return _PhysicsServer2DExtension_proxy_body_clear_shapes
            case "_body_create":
                return _PhysicsServer2DExtension_proxy_body_create
            case "_body_get_canvas_instance_id":
                return _PhysicsServer2DExtension_proxy_body_get_canvas_instance_id
            case "_body_get_collision_exceptions":
                return _PhysicsServer2DExtension_proxy_body_get_collision_exceptions
            case "_body_get_collision_layer":
                return _PhysicsServer2DExtension_proxy_body_get_collision_layer
            case "_body_get_collision_mask":
                return _PhysicsServer2DExtension_proxy_body_get_collision_mask
            case "_body_get_collision_priority":
                return _PhysicsServer2DExtension_proxy_body_get_collision_priority
            case "_body_get_constant_force":
                return _PhysicsServer2DExtension_proxy_body_get_constant_force
            case "_body_get_constant_torque":
                return _PhysicsServer2DExtension_proxy_body_get_constant_torque
            case "_body_get_contacts_reported_depth_threshold":
                return _PhysicsServer2DExtension_proxy_body_get_contacts_reported_depth_threshold
            case "_body_get_continuous_collision_detection_mode":
                return _PhysicsServer2DExtension_proxy_body_get_continuous_collision_detection_mode
            case "_body_get_direct_state":
                return _PhysicsServer2DExtension_proxy_body_get_direct_state
            case "_body_get_max_contacts_reported":
                return _PhysicsServer2DExtension_proxy_body_get_max_contacts_reported
            case "_body_get_mode":
                return _PhysicsServer2DExtension_proxy_body_get_mode
            case "_body_get_object_instance_id":
                return _PhysicsServer2DExtension_proxy_body_get_object_instance_id
            case "_body_get_param":
                return _PhysicsServer2DExtension_proxy_body_get_param
            case "_body_get_shape":
                return _PhysicsServer2DExtension_proxy_body_get_shape
            case "_body_get_shape_count":
                return _PhysicsServer2DExtension_proxy_body_get_shape_count
            case "_body_get_shape_transform":
                return _PhysicsServer2DExtension_proxy_body_get_shape_transform
            case "_body_get_space":
                return _PhysicsServer2DExtension_proxy_body_get_space
            case "_body_get_state":
                return _PhysicsServer2DExtension_proxy_body_get_state
            case "_body_is_omitting_force_integration":
                return _PhysicsServer2DExtension_proxy_body_is_omitting_force_integration
            case "_body_remove_collision_exception":
                return _PhysicsServer2DExtension_proxy_body_remove_collision_exception
            case "_body_remove_shape":
                return _PhysicsServer2DExtension_proxy_body_remove_shape
            case "_body_reset_mass_properties":
                return _PhysicsServer2DExtension_proxy_body_reset_mass_properties
            case "_body_set_axis_velocity":
                return _PhysicsServer2DExtension_proxy_body_set_axis_velocity
            case "_body_set_collision_layer":
                return _PhysicsServer2DExtension_proxy_body_set_collision_layer
            case "_body_set_collision_mask":
                return _PhysicsServer2DExtension_proxy_body_set_collision_mask
            case "_body_set_collision_priority":
                return _PhysicsServer2DExtension_proxy_body_set_collision_priority
            case "_body_set_constant_force":
                return _PhysicsServer2DExtension_proxy_body_set_constant_force
            case "_body_set_constant_torque":
                return _PhysicsServer2DExtension_proxy_body_set_constant_torque
            case "_body_set_contacts_reported_depth_threshold":
                return _PhysicsServer2DExtension_proxy_body_set_contacts_reported_depth_threshold
            case "_body_set_continuous_collision_detection_mode":
                return _PhysicsServer2DExtension_proxy_body_set_continuous_collision_detection_mode
            case "_body_set_force_integration_callback":
                return _PhysicsServer2DExtension_proxy_body_set_force_integration_callback
            case "_body_set_max_contacts_reported":
                return _PhysicsServer2DExtension_proxy_body_set_max_contacts_reported
            case "_body_set_mode":
                return _PhysicsServer2DExtension_proxy_body_set_mode
            case "_body_set_omit_force_integration":
                return _PhysicsServer2DExtension_proxy_body_set_omit_force_integration
            case "_body_set_param":
                return _PhysicsServer2DExtension_proxy_body_set_param
            case "_body_set_pickable":
                return _PhysicsServer2DExtension_proxy_body_set_pickable
            case "_body_set_shape":
                return _PhysicsServer2DExtension_proxy_body_set_shape
            case "_body_set_shape_as_one_way_collision":
                return _PhysicsServer2DExtension_proxy_body_set_shape_as_one_way_collision
            case "_body_set_shape_disabled":
                return _PhysicsServer2DExtension_proxy_body_set_shape_disabled
            case "_body_set_shape_transform":
                return _PhysicsServer2DExtension_proxy_body_set_shape_transform
            case "_body_set_space":
                return _PhysicsServer2DExtension_proxy_body_set_space
            case "_body_set_state":
                return _PhysicsServer2DExtension_proxy_body_set_state
            case "_body_set_state_sync_callback":
                return _PhysicsServer2DExtension_proxy_body_set_state_sync_callback
            case "_capsule_shape_create":
                return _PhysicsServer2DExtension_proxy_capsule_shape_create
            case "_circle_shape_create":
                return _PhysicsServer2DExtension_proxy_circle_shape_create
            case "_concave_polygon_shape_create":
                return _PhysicsServer2DExtension_proxy_concave_polygon_shape_create
            case "_convex_polygon_shape_create":
                return _PhysicsServer2DExtension_proxy_convex_polygon_shape_create
            case "_damped_spring_joint_get_param":
                return _PhysicsServer2DExtension_proxy_damped_spring_joint_get_param
            case "_damped_spring_joint_set_param":
                return _PhysicsServer2DExtension_proxy_damped_spring_joint_set_param
            case "_end_sync":
                return _PhysicsServer2DExtension_proxy_end_sync
            case "_finish":
                return _PhysicsServer2DExtension_proxy_finish
            case "_flush_queries":
                return _PhysicsServer2DExtension_proxy_flush_queries
            case "_free_rid":
                return _PhysicsServer2DExtension_proxy_free_rid
            case "_get_process_info":
                return _PhysicsServer2DExtension_proxy_get_process_info
            case "_init":
                return _PhysicsServer2DExtension_proxy_init
            case "_is_flushing_queries":
                return _PhysicsServer2DExtension_proxy_is_flushing_queries
            case "_joint_clear":
                return _PhysicsServer2DExtension_proxy_joint_clear
            case "_joint_create":
                return _PhysicsServer2DExtension_proxy_joint_create
            case "_joint_disable_collisions_between_bodies":
                return _PhysicsServer2DExtension_proxy_joint_disable_collisions_between_bodies
            case "_joint_get_param":
                return _PhysicsServer2DExtension_proxy_joint_get_param
            case "_joint_get_type":
                return _PhysicsServer2DExtension_proxy_joint_get_type
            case "_joint_is_disabled_collisions_between_bodies":
                return _PhysicsServer2DExtension_proxy_joint_is_disabled_collisions_between_bodies
            case "_joint_make_damped_spring":
                return _PhysicsServer2DExtension_proxy_joint_make_damped_spring
            case "_joint_make_groove":
                return _PhysicsServer2DExtension_proxy_joint_make_groove
            case "_joint_make_pin":
                return _PhysicsServer2DExtension_proxy_joint_make_pin
            case "_joint_set_param":
                return _PhysicsServer2DExtension_proxy_joint_set_param
            case "_pin_joint_get_flag":
                return _PhysicsServer2DExtension_proxy_pin_joint_get_flag
            case "_pin_joint_get_param":
                return _PhysicsServer2DExtension_proxy_pin_joint_get_param
            case "_pin_joint_set_flag":
                return _PhysicsServer2DExtension_proxy_pin_joint_set_flag
            case "_pin_joint_set_param":
                return _PhysicsServer2DExtension_proxy_pin_joint_set_param
            case "_rectangle_shape_create":
                return _PhysicsServer2DExtension_proxy_rectangle_shape_create
            case "_segment_shape_create":
                return _PhysicsServer2DExtension_proxy_segment_shape_create
            case "_separation_ray_shape_create":
                return _PhysicsServer2DExtension_proxy_separation_ray_shape_create
            case "_set_active":
                return _PhysicsServer2DExtension_proxy_set_active
            case "_shape_get_custom_solver_bias":
                return _PhysicsServer2DExtension_proxy_shape_get_custom_solver_bias
            case "_shape_get_data":
                return _PhysicsServer2DExtension_proxy_shape_get_data
            case "_shape_get_type":
                return _PhysicsServer2DExtension_proxy_shape_get_type
            case "_shape_set_custom_solver_bias":
                return _PhysicsServer2DExtension_proxy_shape_set_custom_solver_bias
            case "_shape_set_data":
                return _PhysicsServer2DExtension_proxy_shape_set_data
            case "_space_create":
                return _PhysicsServer2DExtension_proxy_space_create
            case "_space_get_contact_count":
                return _PhysicsServer2DExtension_proxy_space_get_contact_count
            case "_space_get_contacts":
                return _PhysicsServer2DExtension_proxy_space_get_contacts
            case "_space_get_direct_state":
                return _PhysicsServer2DExtension_proxy_space_get_direct_state
            case "_space_get_param":
                return _PhysicsServer2DExtension_proxy_space_get_param
            case "_space_is_active":
                return _PhysicsServer2DExtension_proxy_space_is_active
            case "_space_set_active":
                return _PhysicsServer2DExtension_proxy_space_set_active
            case "_space_set_debug_contacts":
                return _PhysicsServer2DExtension_proxy_space_set_debug_contacts
            case "_space_set_param":
                return _PhysicsServer2DExtension_proxy_space_set_param
            case "_step":
                return _PhysicsServer2DExtension_proxy_step
            case "_sync":
                return _PhysicsServer2DExtension_proxy_sync
            case "_world_boundary_shape_create":
                return _PhysicsServer2DExtension_proxy_world_boundary_shape_create
            default:
                return super.getVirtualDispatcher (name: name)
        }
        
    }
    
}

// Support methods for proxies
func _PhysicsServer2DExtension_proxy_area_add_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaAddShape (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shape: RID (content: args [1]!.assumingMemoryBound (to: Int64.self).pointee), transform: args [2]!.assumingMemoryBound (to: Transform2D.self).pointee, disabled: args [3]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_attach_canvas_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaAttachCanvasInstanceId (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), id: args [1]!.assumingMemoryBound (to: UInt.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_attach_object_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaAttachObjectInstanceId (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), id: args [1]!.assumingMemoryBound (to: UInt.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_clear_shapes (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaClearShapes (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_area_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_area_get_canvas_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetCanvasInstanceId (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt.self)
}

func _PhysicsServer2DExtension_proxy_area_get_collision_layer (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetCollisionLayer (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt32.self)
}

func _PhysicsServer2DExtension_proxy_area_get_collision_mask (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetCollisionMask (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt32.self)
}

func _PhysicsServer2DExtension_proxy_area_get_object_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetObjectInstanceId (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt.self)
}

func _PhysicsServer2DExtension_proxy_area_get_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetParam (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.AreaParameter.self).pointee)
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // Variant
    ret.content = Variant.zero
}

func _PhysicsServer2DExtension_proxy_area_get_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetShape (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_area_get_shape_count (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetShapeCount (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_area_get_shape_transform (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetShapeTransform (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
    retPtr!.storeBytes (of: ret, as: Transform2D.self)
}

func _PhysicsServer2DExtension_proxy_area_get_space (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetSpace (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_area_get_transform (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._areaGetTransform (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Transform2D.self)
}

func _PhysicsServer2DExtension_proxy_area_remove_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaRemoveShape (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_area_monitor_callback (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetAreaMonitorCallback (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), callback: Callable (content: args [1]!.assumingMemoryBound (to: (Int64, Int64).self).pointee))
}

func _PhysicsServer2DExtension_proxy_area_set_collision_layer (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetCollisionLayer (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), layer: args [1]!.assumingMemoryBound (to: UInt32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_collision_mask (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetCollisionMask (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), mask: args [1]!.assumingMemoryBound (to: UInt32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_monitor_callback (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetMonitorCallback (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), callback: Callable (content: args [1]!.assumingMemoryBound (to: (Int64, Int64).self).pointee))
}

func _PhysicsServer2DExtension_proxy_area_set_monitorable (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetMonitorable (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), monitorable: args [1]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetParam (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.AreaParameter.self).pointee, value: args [2]!.assumingMemoryBound (to: Variant.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_pickable (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetPickable (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), pickable: args [1]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetShape (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, shape: RID (content: args [2]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_area_set_shape_disabled (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetShapeDisabled (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, disabled: args [2]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_shape_transform (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetShapeTransform (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, transform: args [2]!.assumingMemoryBound (to: Transform2D.self).pointee)
}

func _PhysicsServer2DExtension_proxy_area_set_space (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetSpace (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), space: RID (content: args [1]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_area_set_transform (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._areaSetTransform (area: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), transform: args [1]!.assumingMemoryBound (to: Transform2D.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_add_collision_exception (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAddCollisionException (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), exceptedBody: RID (content: args [1]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_body_add_constant_central_force (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAddConstantCentralForce (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), force: args [1]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_add_constant_force (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAddConstantForce (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), force: args [1]!.assumingMemoryBound (to: Vector2.self).pointee, position: args [2]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_add_constant_torque (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAddConstantTorque (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), torque: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_add_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAddShape (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shape: RID (content: args [1]!.assumingMemoryBound (to: Int64.self).pointee), transform: args [2]!.assumingMemoryBound (to: Transform2D.self).pointee, disabled: args [3]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_apply_central_force (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyApplyCentralForce (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), force: args [1]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_apply_central_impulse (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyApplyCentralImpulse (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), impulse: args [1]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_apply_force (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyApplyForce (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), force: args [1]!.assumingMemoryBound (to: Vector2.self).pointee, position: args [2]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_apply_impulse (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyApplyImpulse (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), impulse: args [1]!.assumingMemoryBound (to: Vector2.self).pointee, position: args [2]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_apply_torque (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyApplyTorque (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), torque: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_apply_torque_impulse (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyApplyTorqueImpulse (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), impulse: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_attach_canvas_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAttachCanvasInstanceId (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), id: args [1]!.assumingMemoryBound (to: UInt.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_attach_object_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyAttachObjectInstanceId (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), id: args [1]!.assumingMemoryBound (to: UInt.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_clear_shapes (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyClearShapes (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_body_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_body_get_canvas_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetCanvasInstanceId (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt.self)
}

func _PhysicsServer2DExtension_proxy_body_get_collision_exceptions (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetCollisionExceptions (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret.array.content, as: type (of: ret.array.content)) // typedarray::RID
}

func _PhysicsServer2DExtension_proxy_body_get_collision_layer (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetCollisionLayer (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt32.self)
}

func _PhysicsServer2DExtension_proxy_body_get_collision_mask (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetCollisionMask (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt32.self)
}

func _PhysicsServer2DExtension_proxy_body_get_collision_priority (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetCollisionPriority (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_body_get_constant_force (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetConstantForce (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Vector2.self)
}

func _PhysicsServer2DExtension_proxy_body_get_constant_torque (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetConstantTorque (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_body_get_contacts_reported_depth_threshold (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetContactsReportedDepthThreshold (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_body_get_continuous_collision_detection_mode (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetContinuousCollisionDetectionMode (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: Int32 (ret.rawValue), as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_body_get_direct_state (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetDirectState (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret?.handle, as: UnsafeRawPointer?.self) // PhysicsDirectBodyState2D
}

func _PhysicsServer2DExtension_proxy_body_get_max_contacts_reported (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetMaxContactsReported (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_body_get_mode (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetMode (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: Int32 (ret.rawValue), as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_body_get_object_instance_id (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetObjectInstanceId (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: UInt.self)
}

func _PhysicsServer2DExtension_proxy_body_get_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetParam (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.BodyParameter.self).pointee)
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // Variant
    ret.content = Variant.zero
}

func _PhysicsServer2DExtension_proxy_body_get_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetShape (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_body_get_shape_count (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetShapeCount (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_body_get_shape_transform (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetShapeTransform (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
    retPtr!.storeBytes (of: ret, as: Transform2D.self)
}

func _PhysicsServer2DExtension_proxy_body_get_space (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetSpace (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_body_get_state (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyGetState (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), state: args [1]!.assumingMemoryBound (to: PhysicsServer2D.BodyState.self).pointee)
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // Variant
    ret.content = Variant.zero
}

func _PhysicsServer2DExtension_proxy_body_is_omitting_force_integration (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._bodyIsOmittingForceIntegration (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Bool.self)
}

func _PhysicsServer2DExtension_proxy_body_remove_collision_exception (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyRemoveCollisionException (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), exceptedBody: RID (content: args [1]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_body_remove_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyRemoveShape (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_reset_mass_properties (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodyResetMassProperties (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_body_set_axis_velocity (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetAxisVelocity (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), axisVelocity: args [1]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_collision_layer (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetCollisionLayer (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), layer: args [1]!.assumingMemoryBound (to: UInt32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_collision_mask (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetCollisionMask (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), mask: args [1]!.assumingMemoryBound (to: UInt32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_collision_priority (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetCollisionPriority (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), priority: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_constant_force (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetConstantForce (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), force: args [1]!.assumingMemoryBound (to: Vector2.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_constant_torque (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetConstantTorque (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), torque: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_contacts_reported_depth_threshold (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetContactsReportedDepthThreshold (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), threshold: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_continuous_collision_detection_mode (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetContinuousCollisionDetectionMode (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), mode: args [1]!.assumingMemoryBound (to: PhysicsServer2D.CCDMode.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_force_integration_callback (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetForceIntegrationCallback (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), callable: Callable (content: args [1]!.assumingMemoryBound (to: (Int64, Int64).self).pointee), userdata: args [2]!.assumingMemoryBound (to: Variant.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_max_contacts_reported (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetMaxContactsReported (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), amount: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_mode (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetMode (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), mode: args [1]!.assumingMemoryBound (to: PhysicsServer2D.BodyMode.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_omit_force_integration (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetOmitForceIntegration (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), enable: args [1]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetParam (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.BodyParameter.self).pointee, value: args [2]!.assumingMemoryBound (to: Variant.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_pickable (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetPickable (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), pickable: args [1]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_shape (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetShape (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, shape: RID (content: args [2]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_body_set_shape_as_one_way_collision (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetShapeAsOneWayCollision (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, enable: args [2]!.assumingMemoryBound (to: Bool.self).pointee, margin: args [3]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_shape_disabled (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetShapeDisabled (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, disabled: args [2]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_shape_transform (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetShapeTransform (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), shapeIdx: args [1]!.assumingMemoryBound (to: Int32.self).pointee, transform: args [2]!.assumingMemoryBound (to: Transform2D.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_space (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetSpace (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), space: RID (content: args [1]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_body_set_state (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetState (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), state: args [1]!.assumingMemoryBound (to: PhysicsServer2D.BodyState.self).pointee, value: args [2]!.assumingMemoryBound (to: Variant.self).pointee)
}

func _PhysicsServer2DExtension_proxy_body_set_state_sync_callback (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._bodySetStateSyncCallback (body: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), callable: Callable (content: args [1]!.assumingMemoryBound (to: (Int64, Int64).self).pointee))
}

func _PhysicsServer2DExtension_proxy_capsule_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._capsuleShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_circle_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._circleShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_concave_polygon_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._concavePolygonShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_convex_polygon_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._convexPolygonShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_damped_spring_joint_get_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._dampedSpringJointGetParam (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.DampedSpringParam.self).pointee)
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_damped_spring_joint_set_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._dampedSpringJointSetParam (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.DampedSpringParam.self).pointee, value: args [2]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_end_sync (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._endSync ()
}

func _PhysicsServer2DExtension_proxy_finish (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._finish ()
}

func _PhysicsServer2DExtension_proxy_flush_queries (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._flushQueries ()
}

func _PhysicsServer2DExtension_proxy_free_rid (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._freeRid (RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_get_process_info (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._getProcessInfo (args [0]!.assumingMemoryBound (to: PhysicsServer2D.ProcessInfo.self).pointee)
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_init (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._init ()
}

func _PhysicsServer2DExtension_proxy_is_flushing_queries (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._isFlushingQueries ()
    retPtr!.storeBytes (of: ret, as: Bool.self)
}

func _PhysicsServer2DExtension_proxy_joint_clear (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._jointClear (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_joint_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._jointCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_joint_disable_collisions_between_bodies (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._jointDisableCollisionsBetweenBodies (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), disable: args [1]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_joint_get_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._jointGetParam (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.JointParam.self).pointee)
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_joint_get_type (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._jointGetType (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: Int32 (ret.rawValue), as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_joint_is_disabled_collisions_between_bodies (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._jointIsDisabledCollisionsBetweenBodies (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Bool.self)
}

func _PhysicsServer2DExtension_proxy_joint_make_damped_spring (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._jointMakeDampedSpring (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), anchorA: args [1]!.assumingMemoryBound (to: Vector2.self).pointee, anchorB: args [2]!.assumingMemoryBound (to: Vector2.self).pointee, bodyA: RID (content: args [3]!.assumingMemoryBound (to: Int64.self).pointee), bodyB: RID (content: args [4]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_joint_make_groove (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._jointMakeGroove (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), aGroove1: args [1]!.assumingMemoryBound (to: Vector2.self).pointee, aGroove2: args [2]!.assumingMemoryBound (to: Vector2.self).pointee, bAnchor: args [3]!.assumingMemoryBound (to: Vector2.self).pointee, bodyA: RID (content: args [4]!.assumingMemoryBound (to: Int64.self).pointee), bodyB: RID (content: args [5]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_joint_make_pin (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._jointMakePin (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), anchor: args [1]!.assumingMemoryBound (to: Vector2.self).pointee, bodyA: RID (content: args [2]!.assumingMemoryBound (to: Int64.self).pointee), bodyB: RID (content: args [3]!.assumingMemoryBound (to: Int64.self).pointee))
}

func _PhysicsServer2DExtension_proxy_joint_set_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._jointSetParam (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.JointParam.self).pointee, value: args [2]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_pin_joint_get_flag (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._pinJointGetFlag (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), flag: args [1]!.assumingMemoryBound (to: PhysicsServer2D.PinJointFlag.self).pointee)
    retPtr!.storeBytes (of: ret, as: Bool.self)
}

func _PhysicsServer2DExtension_proxy_pin_joint_get_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._pinJointGetParam (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.PinJointParam.self).pointee)
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_pin_joint_set_flag (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._pinJointSetFlag (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), flag: args [1]!.assumingMemoryBound (to: PhysicsServer2D.PinJointFlag.self).pointee, enabled: args [2]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_pin_joint_set_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._pinJointSetParam (joint: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.PinJointParam.self).pointee, value: args [2]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_rectangle_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._rectangleShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_segment_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._segmentShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_separation_ray_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._separationRayShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_set_active (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._setActive (args [0]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_shape_get_custom_solver_bias (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._shapeGetCustomSolverBias (shape: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_shape_get_data (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._shapeGetData (shape: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // Variant
    ret.content = Variant.zero
}

func _PhysicsServer2DExtension_proxy_shape_get_type (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._shapeGetType (shape: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: Int32 (ret.rawValue), as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_shape_set_custom_solver_bias (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._shapeSetCustomSolverBias (shape: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), bias: args [1]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_shape_set_data (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._shapeSetData (shape: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), data: args [1]!.assumingMemoryBound (to: Variant.self).pointee)
}

func _PhysicsServer2DExtension_proxy_space_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._spaceCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

func _PhysicsServer2DExtension_proxy_space_get_contact_count (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._spaceGetContactCount (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

func _PhysicsServer2DExtension_proxy_space_get_contacts (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._spaceGetContacts (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // PackedVector2Array
    ret.content = PackedVector2Array.zero
}

func _PhysicsServer2DExtension_proxy_space_get_direct_state (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._spaceGetDirectState (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret?.handle, as: UnsafeRawPointer?.self) // PhysicsDirectSpaceState2D
}

func _PhysicsServer2DExtension_proxy_space_get_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._spaceGetParam (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.SpaceParameter.self).pointee)
    retPtr!.storeBytes (of: ret, as: Double.self)
}

func _PhysicsServer2DExtension_proxy_space_is_active (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._spaceIsActive (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee))
    retPtr!.storeBytes (of: ret, as: Bool.self)
}

func _PhysicsServer2DExtension_proxy_space_set_active (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._spaceSetActive (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), active: args [1]!.assumingMemoryBound (to: Bool.self).pointee)
}

func _PhysicsServer2DExtension_proxy_space_set_debug_contacts (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._spaceSetDebugContacts (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), maxContacts: args [1]!.assumingMemoryBound (to: Int32.self).pointee)
}

func _PhysicsServer2DExtension_proxy_space_set_param (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._spaceSetParam (space: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), param: args [1]!.assumingMemoryBound (to: PhysicsServer2D.SpaceParameter.self).pointee, value: args [2]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_step (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._step (args [0]!.assumingMemoryBound (to: Double.self).pointee)
}

func _PhysicsServer2DExtension_proxy_sync (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    swiftObject._sync ()
}

func _PhysicsServer2DExtension_proxy_world_boundary_shape_create (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PhysicsServer2DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._worldBoundaryShapeCreate ()
    retPtr!.storeBytes (of: ret.content, as: type (of: ret.content)) // RID
    ret.content = RID.zero
}

