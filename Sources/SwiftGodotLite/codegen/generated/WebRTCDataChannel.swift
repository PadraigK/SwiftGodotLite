// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class WebRTCDataChannel: PacketPeer {
    override open class var godotClassName: StringName { "WebRTCDataChannel" }
    public enum WriteMode: Int64 {
        /// Tells the channel to send data over this channel as text. An external peer (non-Godot) would receive this as a string.
        case text = 0 // WRITE_MODE_TEXT
        /// Tells the channel to send data over this channel as binary. An external peer (non-Godot) would receive this as array buffer or blob.
        case binary = 1 // WRITE_MODE_BINARY
    }
    
    public enum ChannelState: Int64 {
        /// The channel was created, but it's still trying to connect.
        case connecting = 0 // STATE_CONNECTING
        /// The channel is currently open, and data can flow over it.
        case open = 1 // STATE_OPEN
        /// The channel is being closed, no new messages will be accepted, but those already in queue will be flushed.
        case closing = 2 // STATE_CLOSING
        /// The channel was closed, or connection failed.
        case closed = 3 // STATE_CLOSED
    }
    
    
    /* Properties */
    
    /// The transfer mode to use when sending outgoing packet. Either text or binary.
    final public var writeMode: WebRTCDataChannel.WriteMode {
        get {
            return get_write_mode ()
        }
        
        set {
            set_write_mode (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_poll: GDExtensionMethodBindPtr = {
        let methodName = StringName ("poll")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 166280745)!
            }
            
        }
        
    }()
    
    /// Reserved, but not used for now.
    public final func poll ()-> GodotError {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_poll, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return GodotError (rawValue: _result)!
    }
    
    fileprivate static var method_close: GDExtensionMethodBindPtr = {
        let methodName = StringName ("close")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// Closes this data channel, notifying the other peer.
    public final func close () {
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_close, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_was_string_packet: GDExtensionMethodBindPtr = {
        let methodName = StringName ("was_string_packet")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    /// Returns `true` if the last received packet was transferred as text. See ``writeMode``.
    public final func wasStringPacket ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_was_string_packet, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_write_mode: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_write_mode")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1999768052)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_write_mode (_ writeMode: WebRTCDataChannel.WriteMode) {
        #if false
        
        var copy_write_mode = Int64 (writeMode.rawValue)
        
        gi.object_method_bind_ptrcall_v (WebRTCDataChannel.method_set_write_mode, UnsafeMutableRawPointer (mutating: handle), nil, &copy_write_mode)
        
        #else
        
        var copy_write_mode = Int64 (writeMode.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_write_mode) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (WebRTCDataChannel.method_set_write_mode, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_write_mode: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_write_mode")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2848495172)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_write_mode ()-> WebRTCDataChannel.WriteMode {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_write_mode, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return WebRTCDataChannel.WriteMode (rawValue: _result)!
    }
    
    fileprivate static var method_get_ready_state: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_ready_state")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3501143017)!
            }
            
        }
        
    }()
    
    /// Returns the current state of this channel, see ``WebRTCDataChannel/ChannelState``.
    public final func getReadyState ()-> WebRTCDataChannel.ChannelState {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_ready_state, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return WebRTCDataChannel.ChannelState (rawValue: _result)!
    }
    
    fileprivate static var method_get_label: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_label")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 201670096)!
            }
            
        }
        
    }()
    
    /// Returns the label assigned to this channel during creation.
    public final func getLabel ()-> String {
        let _result = GString ()
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_label, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result.description
    }
    
    fileprivate static var method_is_ordered: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_ordered")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    /// Returns `true` if this channel was created with ordering enabled (default).
    public final func isOrdered ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_is_ordered, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_id: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_id")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the ID assigned to this channel during creation (or auto-assigned during negotiation).
    /// 
    /// If the channel is not negotiated out-of-band the ID will only be available after the connection is established (will return `65535` until then).
    /// 
    public final func getId ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_id, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_max_packet_life_time: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_max_packet_life_time")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the `maxPacketLifeTime` value assigned to this channel during creation.
    /// 
    /// Will be `65535` if not specified.
    /// 
    public final func getMaxPacketLifeTime ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_max_packet_life_time, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_max_retransmits: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_max_retransmits")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the `maxRetransmits` value assigned to this channel during creation.
    /// 
    /// Will be `65535` if not specified.
    /// 
    public final func getMaxRetransmits ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_max_retransmits, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_protocol: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_protocol")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 201670096)!
            }
            
        }
        
    }()
    
    /// Returns the sub-protocol assigned to this channel during creation. An empty string if not specified.
    public final func getProtocol ()-> String {
        let _result = GString ()
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_protocol, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result.description
    }
    
    fileprivate static var method_is_negotiated: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_negotiated")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    /// Returns `true` if this channel was created with out-of-band configuration.
    public final func isNegotiated ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_is_negotiated, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_buffered_amount: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_buffered_amount")
        return withUnsafePointer (to: &WebRTCDataChannel.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of bytes currently queued to be sent over this channel.
    public final func getBufferedAmount ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (WebRTCDataChannel.method_get_buffered_amount, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

