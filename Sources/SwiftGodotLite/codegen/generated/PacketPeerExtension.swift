// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class PacketPeerExtension: PacketPeer {
    override open class var godotClassName: StringName { "PacketPeerExtension" }
    /* Methods */
    /// 
    @_documentation(visibility: public)
    open func _getAvailablePacketCount ()-> Int32 {
        return 0
    }
    
    /// 
    @_documentation(visibility: public)
    open func _getMaxPacketSize ()-> Int32 {
        return 0
    }
    
    override class func getVirtualDispatcher (name: StringName) -> GDExtensionClassCallVirtual? {
        guard implementedOverrides().contains(name) else { return nil }
        switch name.description {
            case "_get_available_packet_count":
                return _PacketPeerExtension_proxy_get_available_packet_count
            case "_get_max_packet_size":
                return _PacketPeerExtension_proxy_get_max_packet_size
            default:
                return super.getVirtualDispatcher (name: name)
        }
        
    }
    
}

// Support methods for proxies
func _PacketPeerExtension_proxy_get_available_packet_count (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PacketPeerExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._getAvailablePacketCount ()
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

func _PacketPeerExtension_proxy_get_max_packet_size (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    let swiftObject = Unmanaged<PacketPeerExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._getMaxPacketSize ()
    retPtr!.storeBytes (of: ret, as: Int32.self)
}

