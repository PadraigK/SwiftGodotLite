// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A 2D polygon.
/// 
/// A Polygon2D is defined by a set of points. Each point is connected to the next, with the final point being connected to the first, resulting in a closed polygon. Polygon2Ds can be filled with color (solid or gradient) or filled with a given texture.
open class Polygon2D: Node2D {
    override open class var godotClassName: StringName { "Polygon2D" }
    
    /* Properties */
    
    /// The polygon's fill color. If ``texture`` is set, it will be multiplied by this color. It will also be the default color for vertices not set in ``vertexColors``.
    final public var color: Color {
        get {
            return get_color ()
        }
        
        set {
            set_color (newValue)
        }
        
    }
    
    /// The offset applied to each vertex.
    final public var offset: Vector2 {
        get {
            return get_offset ()
        }
        
        set {
            set_offset (newValue)
        }
        
    }
    
    /// If `true`, polygon edges will be anti-aliased.
    final public var antialiased: Bool {
        get {
            return get_antialiased ()
        }
        
        set {
            set_antialiased (newValue)
        }
        
    }
    
    /// The polygon's fill texture. Use ``uv`` to set texture coordinates.
    final public var texture: Texture2D? {
        get {
            return get_texture ()
        }
        
        set {
            set_texture (newValue)
        }
        
    }
    
    /// Amount to offset the polygon's ``texture``. If set to `Vector2(0, 0)`, the texture's origin (its top-left corner) will be placed at the polygon's position.
    final public var textureOffset: Vector2 {
        get {
            return get_texture_offset ()
        }
        
        set {
            set_texture_offset (newValue)
        }
        
    }
    
    /// Amount to multiply the ``uv`` coordinates when using ``texture``. Larger values make the texture smaller, and vice versa.
    final public var textureScale: Vector2 {
        get {
            return get_texture_scale ()
        }
        
        set {
            set_texture_scale (newValue)
        }
        
    }
    
    /// The texture's rotation in radians.
    final public var textureRotation: Double {
        get {
            return get_texture_rotation ()
        }
        
        set {
            set_texture_rotation (newValue)
        }
        
    }
    
    /// Path to a ``Skeleton2D`` node used for skeleton-based deformations of this polygon. If empty or invalid, skeletal deformations will not be used.
    final public var skeleton: NodePath {
        get {
            return get_skeleton ()
        }
        
        set {
            set_skeleton (newValue)
        }
        
    }
    
    /// If `true`, the polygon will be inverted, containing the area outside the defined points and extending to the ``invertBorder``.
    final public var invertEnabled: Bool {
        get {
            return get_invert_enabled ()
        }
        
        set {
            set_invert_enabled (newValue)
        }
        
    }
    
    /// Added padding applied to the bounding box when ``invertEnabled`` is set to `true`. Setting this value too small may result in a "Bad Polygon" error.
    final public var invertBorder: Double {
        get {
            return get_invert_border ()
        }
        
        set {
            set_invert_border (newValue)
        }
        
    }
    
    /// The polygon's list of vertices. The final point will be connected to the first.
    /// 
    /// > Note: This returns a copy of the ``PackedVector2Array`` rather than a reference.
    /// 
    final public var polygon: PackedVector2Array {
        get {
            return get_polygon ()
        }
        
        set {
            set_polygon (newValue)
        }
        
    }
    
    /// Texture coordinates for each vertex of the polygon. There should be one UV value per polygon vertex. If there are fewer, undefined vertices will use `Vector2(0, 0)`.
    final public var uv: PackedVector2Array {
        get {
            return get_uv ()
        }
        
        set {
            set_uv (newValue)
        }
        
    }
    
    /// Color for each vertex. Colors are interpolated between vertices, resulting in smooth gradients. There should be one per polygon vertex. If there are fewer, undefined vertices will use ``color``.
    final public var vertexColors: PackedColorArray {
        get {
            return get_vertex_colors ()
        }
        
        set {
            set_vertex_colors (newValue)
        }
        
    }
    
    /// The list of polygons, in case more than one is being represented. Every individual polygon is stored as a ``PackedInt32Array`` where each integer is an index to a point in ``polygon``. If empty, this property will be ignored, and the resulting single polygon will be composed of all points in ``polygon``, using the order they are stored in.
    final public var polygons: GArray {
        get {
            return get_polygons ()
        }
        
        set {
            set_polygons (newValue)
        }
        
    }
    
    /// Number of internal vertices, used for UV mapping.
    final public var internalVertexCount: Int32 {
        get {
            return get_internal_vertex_count ()
        }
        
        set {
            set_internal_vertex_count (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_polygon: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_polygon")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1509147220)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_polygon (_ polygon: PackedVector2Array) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_polygon, UnsafeMutableRawPointer (mutating: handle), nil, &polygon.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &polygon.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_polygon, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_polygon: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_polygon")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2961356807)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_polygon ()-> PackedVector2Array {
        let _result: PackedVector2Array = PackedVector2Array ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_polygon, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_uv: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_uv")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1509147220)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_uv (_ uv: PackedVector2Array) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_uv, UnsafeMutableRawPointer (mutating: handle), nil, &uv.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &uv.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_uv, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_uv: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_uv")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2961356807)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_uv ()-> PackedVector2Array {
        let _result: PackedVector2Array = PackedVector2Array ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_uv, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_color: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_color")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2920490490)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_color (_ color: Color) {
        #if true
        
        var copy_color = color
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_color, UnsafeMutableRawPointer (mutating: handle), nil, &copy_color)
        
        #else
        
        var copy_color = color
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_color) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_color, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_color: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_color")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3444240500)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_color ()-> Color {
        var _result: Color = Color ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_color, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_polygons: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_polygons")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 381264803)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_polygons (_ polygons: GArray) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_polygons, UnsafeMutableRawPointer (mutating: handle), nil, &polygons.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &polygons.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_polygons, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_polygons: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_polygons")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3995934104)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_polygons ()-> GArray {
        let _result: GArray = GArray ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_polygons, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_vertex_colors: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_vertex_colors")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3546319833)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_vertex_colors (_ vertexColors: PackedColorArray) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_vertex_colors, UnsafeMutableRawPointer (mutating: handle), nil, &vertexColors.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &vertexColors.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_vertex_colors, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_vertex_colors: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_vertex_colors")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1392750486)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_vertex_colors ()-> PackedColorArray {
        let _result: PackedColorArray = PackedColorArray ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_vertex_colors, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_texture: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_texture")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 4051416890)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_texture (_ texture: Texture2D?) {
        #if true
        
        var copy_texture_handle = texture?.handle
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_texture, UnsafeMutableRawPointer (mutating: handle), nil, &copy_texture_handle)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: texture?.handle) { p0 in
        _args.append (texture == nil ? nil : p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_texture, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_texture: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_texture")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3635182373)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_texture ()-> Texture2D? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (Polygon2D.method_get_texture, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_texture_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_texture_offset")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 743155724)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_texture_offset (_ textureOffset: Vector2) {
        #if true
        
        var copy_texture_offset = textureOffset
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_texture_offset, UnsafeMutableRawPointer (mutating: handle), nil, &copy_texture_offset)
        
        #else
        
        var copy_texture_offset = textureOffset
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_texture_offset) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_texture_offset, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_texture_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_texture_offset")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3341600327)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_texture_offset ()-> Vector2 {
        var _result: Vector2 = Vector2 ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_texture_offset, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_texture_rotation: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_texture_rotation")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_texture_rotation (_ textureRotation: Double) {
        #if true
        
        var copy_texture_rotation = textureRotation
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_texture_rotation, UnsafeMutableRawPointer (mutating: handle), nil, &copy_texture_rotation)
        
        #else
        
        var copy_texture_rotation = textureRotation
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_texture_rotation) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_texture_rotation, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_texture_rotation: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_texture_rotation")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_texture_rotation ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (Polygon2D.method_get_texture_rotation, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_texture_scale: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_texture_scale")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 743155724)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_texture_scale (_ textureScale: Vector2) {
        #if true
        
        var copy_texture_scale = textureScale
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_texture_scale, UnsafeMutableRawPointer (mutating: handle), nil, &copy_texture_scale)
        
        #else
        
        var copy_texture_scale = textureScale
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_texture_scale) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_texture_scale, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_texture_scale: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_texture_scale")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3341600327)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_texture_scale ()-> Vector2 {
        var _result: Vector2 = Vector2 ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_texture_scale, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_invert_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_invert_enabled")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_invert_enabled (_ invert: Bool) {
        #if true
        
        var copy_invert = invert
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_invert_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &copy_invert)
        
        #else
        
        var copy_invert = invert
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_invert) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_invert_enabled, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_invert_enabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_invert_enabled")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_invert_enabled ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (Polygon2D.method_get_invert_enabled, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_antialiased: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_antialiased")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_antialiased (_ antialiased: Bool) {
        #if true
        
        var copy_antialiased = antialiased
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_antialiased, UnsafeMutableRawPointer (mutating: handle), nil, &copy_antialiased)
        
        #else
        
        var copy_antialiased = antialiased
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_antialiased) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_antialiased, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_antialiased: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_antialiased")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_antialiased ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (Polygon2D.method_get_antialiased, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_invert_border: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_invert_border")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_invert_border (_ invertBorder: Double) {
        #if true
        
        var copy_invert_border = invertBorder
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_invert_border, UnsafeMutableRawPointer (mutating: handle), nil, &copy_invert_border)
        
        #else
        
        var copy_invert_border = invertBorder
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_invert_border) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_invert_border, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_invert_border: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_invert_border")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_invert_border ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (Polygon2D.method_get_invert_border, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_offset")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 743155724)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_offset (_ offset: Vector2) {
        #if true
        
        var copy_offset = offset
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_offset, UnsafeMutableRawPointer (mutating: handle), nil, &copy_offset)
        
        #else
        
        var copy_offset = offset
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_offset) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_offset, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_offset")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3341600327)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_offset ()-> Vector2 {
        var _result: Vector2 = Vector2 ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_offset, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_add_bone: GDExtensionMethodBindPtr = {
        let methodName = StringName ("add_bone")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 703042815)!
            }
            
        }
        
    }()
    
    /// Adds a bone with the specified `path` and `weights`.
    public final func addBone (path: NodePath, weights: PackedFloat32Array) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_add_bone, UnsafeMutableRawPointer (mutating: handle), nil, &path.content, &weights.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &path.content) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &weights.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Polygon2D.method_add_bone, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_bone_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bone_count")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of bones in this ``Polygon2D``.
    public final func getBoneCount ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (Polygon2D.method_get_bone_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_bone_path: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bone_path")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 408788394)!
            }
            
        }
        
    }()
    
    /// Returns the path to the node associated with the specified bone.
    public final func getBonePath (index: Int32)-> NodePath {
        let _result: NodePath = NodePath ()
        #if true
        
        var copy_index: Int = Int (index)
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_get_bone_path, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_index)
        return _result
        #else
        
        var copy_index: Int = Int (index)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_index) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_get_bone_path, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_get_bone_weights: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_bone_weights")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1542882410)!
            }
            
        }
        
    }()
    
    /// Returns the weight values of the specified bone.
    public final func getBoneWeights (index: Int32)-> PackedFloat32Array {
        let _result: PackedFloat32Array = PackedFloat32Array ()
        #if true
        
        var copy_index: Int = Int (index)
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_get_bone_weights, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_index)
        return _result
        #else
        
        var copy_index: Int = Int (index)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_index) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_get_bone_weights, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_erase_bone: GDExtensionMethodBindPtr = {
        let methodName = StringName ("erase_bone")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    /// Removes the specified bone from this ``Polygon2D``.
    public final func eraseBone (index: Int32) {
        #if true
        
        var copy_index: Int = Int (index)
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_erase_bone, UnsafeMutableRawPointer (mutating: handle), nil, &copy_index)
        
        #else
        
        var copy_index: Int = Int (index)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_index) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_erase_bone, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_clear_bones: GDExtensionMethodBindPtr = {
        let methodName = StringName ("clear_bones")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// Removes all bones from this ``Polygon2D``.
    public final func clearBones () {
        gi.object_method_bind_ptrcall (Polygon2D.method_clear_bones, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_set_bone_path: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_bone_path")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2761262315)!
            }
            
        }
        
    }()
    
    /// Sets the path to the node associated with the specified bone.
    public final func setBonePath (index: Int32, path: NodePath) {
        #if true
        
        var copy_index: Int = Int (index)
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_bone_path, UnsafeMutableRawPointer (mutating: handle), nil, &copy_index, &path.content)
        
        #else
        
        var copy_index: Int = Int (index)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_index) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &path.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Polygon2D.method_set_bone_path, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_set_bone_weights: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_bone_weights")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1345852415)!
            }
            
        }
        
    }()
    
    /// Sets the weight values for the specified bone.
    public final func setBoneWeights (index: Int32, weights: PackedFloat32Array) {
        #if true
        
        var copy_index: Int = Int (index)
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_bone_weights, UnsafeMutableRawPointer (mutating: handle), nil, &copy_index, &weights.content)
        
        #else
        
        var copy_index: Int = Int (index)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_index) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &weights.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (Polygon2D.method_set_bone_weights, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_set_skeleton: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_skeleton")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1348162250)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_skeleton (_ skeleton: NodePath) {
        #if true
        
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_skeleton, UnsafeMutableRawPointer (mutating: handle), nil, &skeleton.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &skeleton.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_skeleton, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_skeleton: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_skeleton")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 4075236667)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_skeleton ()-> NodePath {
        let _result: NodePath = NodePath ()
        gi.object_method_bind_ptrcall (Polygon2D.method_get_skeleton, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_internal_vertex_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_internal_vertex_count")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_internal_vertex_count (_ internalVertexCount: Int32) {
        #if true
        
        var copy_internal_vertex_count: Int = Int (internalVertexCount)
        
        gi.object_method_bind_ptrcall_v (Polygon2D.method_set_internal_vertex_count, UnsafeMutableRawPointer (mutating: handle), nil, &copy_internal_vertex_count)
        
        #else
        
        var copy_internal_vertex_count: Int = Int (internalVertexCount)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_internal_vertex_count) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (Polygon2D.method_set_internal_vertex_count, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_internal_vertex_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_internal_vertex_count")
        return withUnsafePointer (to: &Polygon2D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_internal_vertex_count ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (Polygon2D.method_get_internal_vertex_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

