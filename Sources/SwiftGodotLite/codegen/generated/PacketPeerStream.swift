// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Wrapper to use a PacketPeer over a StreamPeer.
/// 
/// PacketStreamPeer provides a wrapper for working using packets over a stream. This allows for using packet based code with StreamPeers. PacketPeerStream implements a custom protocol over the StreamPeer, so the user should not read or write to the wrapped StreamPeer directly.
/// 
/// > Note: When exporting to Android, make sure to enable the `INTERNET` permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.
/// 
open class PacketPeerStream: PacketPeer {
    override open class var godotClassName: StringName { "PacketPeerStream" }
    
    /* Properties */
    
    final public var inputBufferMaxSize: Int32 {
        get {
            return get_input_buffer_max_size ()
        }
        
        set {
            set_input_buffer_max_size (newValue)
        }
        
    }
    
    final public var outputBufferMaxSize: Int32 {
        get {
            return get_output_buffer_max_size ()
        }
        
        set {
            set_output_buffer_max_size (newValue)
        }
        
    }
    
    /// The wrapped ``StreamPeer`` object.
    final public var streamPeer: StreamPeer? {
        get {
            return get_stream_peer ()
        }
        
        set {
            set_stream_peer (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_stream_peer: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_stream_peer")
        return withUnsafePointer (to: &PacketPeerStream.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3281897016)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_stream_peer (_ peer: StreamPeer?) {
        #if false
        
        var copy_peer_handle = peer?.handle
        
        gi.object_method_bind_ptrcall_v (PacketPeerStream.method_set_stream_peer, UnsafeMutableRawPointer (mutating: handle), nil, &copy_peer_handle)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: peer?.handle) { p0 in
        _args.append (peer == nil ? nil : p0)
        
            gi.object_method_bind_ptrcall (PacketPeerStream.method_set_stream_peer, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_stream_peer: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_stream_peer")
        return withUnsafePointer (to: &PacketPeerStream.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2741655269)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_stream_peer ()-> StreamPeer? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (PacketPeerStream.method_get_stream_peer, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_input_buffer_max_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_input_buffer_max_size")
        return withUnsafePointer (to: &PacketPeerStream.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_input_buffer_max_size (_ maxSizeBytes: Int32) {
        #if false
        
        var copy_max_size_bytes: Int = Int (maxSizeBytes)
        
        gi.object_method_bind_ptrcall_v (PacketPeerStream.method_set_input_buffer_max_size, UnsafeMutableRawPointer (mutating: handle), nil, &copy_max_size_bytes)
        
        #else
        
        var copy_max_size_bytes: Int = Int (maxSizeBytes)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_max_size_bytes) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PacketPeerStream.method_set_input_buffer_max_size, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_set_output_buffer_max_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_output_buffer_max_size")
        return withUnsafePointer (to: &PacketPeerStream.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_output_buffer_max_size (_ maxSizeBytes: Int32) {
        #if false
        
        var copy_max_size_bytes: Int = Int (maxSizeBytes)
        
        gi.object_method_bind_ptrcall_v (PacketPeerStream.method_set_output_buffer_max_size, UnsafeMutableRawPointer (mutating: handle), nil, &copy_max_size_bytes)
        
        #else
        
        var copy_max_size_bytes: Int = Int (maxSizeBytes)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_max_size_bytes) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PacketPeerStream.method_set_output_buffer_max_size, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_input_buffer_max_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_input_buffer_max_size")
        return withUnsafePointer (to: &PacketPeerStream.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_input_buffer_max_size ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (PacketPeerStream.method_get_input_buffer_max_size, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_output_buffer_max_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_output_buffer_max_size")
        return withUnsafePointer (to: &PacketPeerStream.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_output_buffer_max_size ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (PacketPeerStream.method_get_output_buffer_max_size, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

