// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class GLTFMesh: Resource {
    override open class var godotClassName: StringName { "GLTFMesh" }
    
    /* Properties */
    
    final public var mesh: ImporterMesh? {
        get {
            return get_mesh ()
        }
        
        set {
            set_mesh (newValue)
        }
        
    }
    
    final public var blendWeights: PackedFloat32Array {
        get {
            return get_blend_weights ()
        }
        
        set {
            set_blend_weights (newValue)
        }
        
    }
    
    final public var instanceMaterials: ObjectCollection<Material> {
        get {
            return get_instance_materials ()
        }
        
        set {
            set_instance_materials (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_get_mesh: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_mesh")
        return withUnsafePointer (to: &GLTFMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3754628756)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_mesh ()-> ImporterMesh? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (GLTFMesh.method_get_mesh, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_mesh: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_mesh")
        return withUnsafePointer (to: &GLTFMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2255166972)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_mesh (_ mesh: ImporterMesh?) {
        #if false
        
        var copy_mesh_handle = mesh?.handle
        
        gi.object_method_bind_ptrcall_v (GLTFMesh.method_set_mesh, UnsafeMutableRawPointer (mutating: handle), nil, &copy_mesh_handle)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: mesh?.handle) { p0 in
        _args.append (mesh == nil ? nil : p0)
        
            gi.object_method_bind_ptrcall (GLTFMesh.method_set_mesh, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_blend_weights: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_blend_weights")
        return withUnsafePointer (to: &GLTFMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2445143706)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_blend_weights ()-> PackedFloat32Array {
        let _result: PackedFloat32Array = PackedFloat32Array ()
        gi.object_method_bind_ptrcall (GLTFMesh.method_get_blend_weights, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_blend_weights: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_blend_weights")
        return withUnsafePointer (to: &GLTFMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2899603908)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_blend_weights (_ blendWeights: PackedFloat32Array) {
        #if false
        
        
        gi.object_method_bind_ptrcall_v (GLTFMesh.method_set_blend_weights, UnsafeMutableRawPointer (mutating: handle), nil, &blendWeights.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &blendWeights.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFMesh.method_set_blend_weights, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_instance_materials: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_instance_materials")
        return withUnsafePointer (to: &GLTFMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2915620761)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_instance_materials ()-> ObjectCollection<Material> {
        var _result: Int64 = 0
        gi.object_method_bind_ptrcall (GLTFMesh.method_get_instance_materials, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return ObjectCollection<Material>(content: _result)
    }
    
    fileprivate static var method_set_instance_materials: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_instance_materials")
        return withUnsafePointer (to: &GLTFMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 381264803)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_instance_materials (_ instanceMaterials: ObjectCollection<Material>) {
        #if false
        
        
        gi.object_method_bind_ptrcall_v (GLTFMesh.method_set_instance_materials, UnsafeMutableRawPointer (mutating: handle), nil, &instanceMaterials.array.content)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &instanceMaterials.array.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFMesh.method_set_instance_materials, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
}

