// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Represents a straight ribbon-shaped ``PrimitiveMesh`` with variable width.
/// 
/// ``RibbonTrailMesh`` represents a straight ribbon-shaped mesh with variable width. The ribbon is composed of a number of flat or cross-shaped sections, each with the same ``sectionLength`` and number of ``sectionSegments``. A ``curve`` is sampled along the total length of the ribbon, meaning that the curve determines the size of the ribbon along its length.
/// 
/// This primitive mesh is usually used for particle trails.
/// 
open class RibbonTrailMesh: PrimitiveMesh {
    override open class var godotClassName: StringName { "RibbonTrailMesh" }
    public enum Shape: Int64 {
        /// Gives the mesh a single flat face.
        case flat = 0 // SHAPE_FLAT
        /// Gives the mesh two perpendicular flat faces, making a cross shape.
        case cross = 1 // SHAPE_CROSS
    }
    
    
    /* Properties */
    
    /// Determines the shape of the ribbon.
    final public var shape: RibbonTrailMesh.Shape {
        get {
            return get_shape ()
        }
        
        set {
            set_shape (newValue)
        }
        
    }
    
    /// The baseline size of the ribbon. The size of a particular section segment is obtained by multiplying this size by the value of the ``curve`` at the given distance.
    final public var size: Double {
        get {
            return get_size ()
        }
        
        set {
            set_size (newValue)
        }
        
    }
    
    /// The total number of sections on the ribbon.
    final public var sections: Int32 {
        get {
            return get_sections ()
        }
        
        set {
            set_sections (newValue)
        }
        
    }
    
    /// The length of a section of the ribbon.
    final public var sectionLength: Double {
        get {
            return get_section_length ()
        }
        
        set {
            set_section_length (newValue)
        }
        
    }
    
    /// The number of segments in a section. The ``curve`` is sampled on each segment to determine its size. Higher values result in a more detailed ribbon at the cost of performance.
    final public var sectionSegments: Int32 {
        get {
            return get_section_segments ()
        }
        
        set {
            set_section_segments (newValue)
        }
        
    }
    
    /// Determines the size of the ribbon along its length. The size of a particular section segment is obtained by multiplying the baseline ``size`` by the value of this curve at the given distance. For values smaller than `0`, the faces will be inverted.
    final public var curve: Curve? {
        get {
            return get_curve ()
        }
        
        set {
            set_curve (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_size")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_size (_ size: Double) {
        #if false
        
        var copy_size = size
        
        gi.object_method_bind_ptrcall_v (RibbonTrailMesh.method_set_size, UnsafeMutableRawPointer (mutating: handle), nil, &copy_size)
        
        #else
        
        var copy_size = size
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_size) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (RibbonTrailMesh.method_set_size, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_size")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_size ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (RibbonTrailMesh.method_get_size, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sections: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_sections")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sections (_ sections: Int32) {
        #if false
        
        var copy_sections: Int = Int (sections)
        
        gi.object_method_bind_ptrcall_v (RibbonTrailMesh.method_set_sections, UnsafeMutableRawPointer (mutating: handle), nil, &copy_sections)
        
        #else
        
        var copy_sections: Int = Int (sections)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_sections) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (RibbonTrailMesh.method_set_sections, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_sections: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_sections")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sections ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (RibbonTrailMesh.method_get_sections, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_section_length: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_section_length")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_section_length (_ sectionLength: Double) {
        #if false
        
        var copy_section_length = sectionLength
        
        gi.object_method_bind_ptrcall_v (RibbonTrailMesh.method_set_section_length, UnsafeMutableRawPointer (mutating: handle), nil, &copy_section_length)
        
        #else
        
        var copy_section_length = sectionLength
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_section_length) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (RibbonTrailMesh.method_set_section_length, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_section_length: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_section_length")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_section_length ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (RibbonTrailMesh.method_get_section_length, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_section_segments: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_section_segments")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_section_segments (_ sectionSegments: Int32) {
        #if false
        
        var copy_section_segments: Int = Int (sectionSegments)
        
        gi.object_method_bind_ptrcall_v (RibbonTrailMesh.method_set_section_segments, UnsafeMutableRawPointer (mutating: handle), nil, &copy_section_segments)
        
        #else
        
        var copy_section_segments: Int = Int (sectionSegments)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_section_segments) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (RibbonTrailMesh.method_set_section_segments, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_section_segments: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_section_segments")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_section_segments ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (RibbonTrailMesh.method_get_section_segments, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_curve: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_curve")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 270443179)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_curve (_ curve: Curve?) {
        #if false
        
        var copy_curve_handle = curve?.handle
        
        gi.object_method_bind_ptrcall_v (RibbonTrailMesh.method_set_curve, UnsafeMutableRawPointer (mutating: handle), nil, &copy_curve_handle)
        
        #else
        
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: curve?.handle) { p0 in
        _args.append (curve == nil ? nil : p0)
        
            gi.object_method_bind_ptrcall (RibbonTrailMesh.method_set_curve, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_curve: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_curve")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2460114913)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_curve ()-> Curve? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall (RibbonTrailMesh.method_get_curve, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_shape: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_shape")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1684440262)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_shape (_ shape: RibbonTrailMesh.Shape) {
        #if false
        
        var copy_shape = Int64 (shape.rawValue)
        
        gi.object_method_bind_ptrcall_v (RibbonTrailMesh.method_set_shape, UnsafeMutableRawPointer (mutating: handle), nil, &copy_shape)
        
        #else
        
        var copy_shape = Int64 (shape.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_shape) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (RibbonTrailMesh.method_set_shape, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_shape: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_shape")
        return withUnsafePointer (to: &RibbonTrailMesh.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1317484155)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_shape ()-> RibbonTrailMesh.Shape {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (RibbonTrailMesh.method_get_shape, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return RibbonTrailMesh.Shape (rawValue: _result)!
    }
    
}

