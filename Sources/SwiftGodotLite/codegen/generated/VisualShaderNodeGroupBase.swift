// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Base class for a family of nodes with variable number of input and output ports within the visual shader graph.
/// 
/// Currently, has no direct usage, use the derived classes instead.
open class VisualShaderNodeGroupBase: VisualShaderNodeResizableBase {
    override open class var godotClassName: StringName { "VisualShaderNodeGroupBase" }
    /* Methods */
    fileprivate static var method_set_inputs: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_inputs")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 83702148)!
            }
            
        }
        
    }()
    
    /// Defines all input ports using a ``String`` formatted as a colon-separated list: `id,type,name;` (see ``addInputPort(id:type:name:)``).
    public final func setInputs (_ inputs: String) {
        #if false
        
        let gstr_inputs = GString (inputs)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_set_inputs, UnsafeMutableRawPointer (mutating: handle), nil, &gstr_inputs.content)
        
        #else
        
        let gstr_inputs = GString (inputs)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &gstr_inputs.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_set_inputs, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_inputs: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_inputs")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 201670096)!
            }
            
        }
        
    }()
    
    /// Returns a ``String`` description of the input ports as a colon-separated list using the format `id,type,name;` (see ``addInputPort(id:type:name:)``).
    public final func getInputs ()-> String {
        let _result = GString ()
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_get_inputs, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result.description
    }
    
    fileprivate static var method_set_outputs: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_outputs")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 83702148)!
            }
            
        }
        
    }()
    
    /// Defines all output ports using a ``String`` formatted as a colon-separated list: `id,type,name;` (see ``addOutputPort(id:type:name:)``).
    public final func setOutputs (_ outputs: String) {
        #if false
        
        let gstr_outputs = GString (outputs)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_set_outputs, UnsafeMutableRawPointer (mutating: handle), nil, &gstr_outputs.content)
        
        #else
        
        let gstr_outputs = GString (outputs)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &gstr_outputs.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_set_outputs, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_outputs: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_outputs")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 201670096)!
            }
            
        }
        
    }()
    
    /// Returns a ``String`` description of the output ports as a colon-separated list using the format `id,type,name;` (see ``addOutputPort(id:type:name:)``).
    public final func getOutputs ()-> String {
        let _result = GString ()
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_get_outputs, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result.description
    }
    
    fileprivate static var method_is_valid_port_name: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_valid_port_name")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3927539163)!
            }
            
        }
        
    }()
    
    /// Returns `true` if the specified port name does not override an existed port name and is valid within the shader.
    public final func isValidPortName (_ name: String)-> Bool {
        var _result: Bool = false
        #if false
        
        let gstr_name = GString (name)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_is_valid_port_name, UnsafeMutableRawPointer (mutating: handle), &_result, &gstr_name.content)
        return _result
        #else
        
        let gstr_name = GString (name)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &gstr_name.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_is_valid_port_name, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_add_input_port: GDExtensionMethodBindPtr = {
        let methodName = StringName ("add_input_port")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2285447957)!
            }
            
        }
        
    }()
    
    /// Adds an input port with the specified `type` (see ``VisualShaderNode.PortType``) and `name`.
    public final func addInputPort (id: Int32, type: Int32, name: String) {
        #if false
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        let gstr_name = GString (name)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_add_input_port, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id, &copy_type, &gstr_name.content)
        
        #else
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        let gstr_name = GString (name)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_type) { p1 in
                _args.append (p1)
                withUnsafePointer (to: &gstr_name.content) { p2 in
                    _args.append (p2)
        
                    gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_add_input_port, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
                }
            }
        }
        
        #endif
    }
    
    fileprivate static var method_remove_input_port: GDExtensionMethodBindPtr = {
        let methodName = StringName ("remove_input_port")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    /// Removes the specified input port.
    public final func removeInputPort (id: Int32) {
        #if false
        
        var copy_id: Int = Int (id)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_remove_input_port, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id)
        
        #else
        
        var copy_id: Int = Int (id)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_remove_input_port, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_input_port_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_input_port_count")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of input ports in use. Alternative for ``getFreeInputPortId()``.
    public final func getInputPortCount ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_get_input_port_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_has_input_port: GDExtensionMethodBindPtr = {
        let methodName = StringName ("has_input_port")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1116898809)!
            }
            
        }
        
    }()
    
    /// Returns `true` if the specified input port exists.
    public final func hasInputPort (id: Int32)-> Bool {
        var _result: Bool = false
        #if false
        
        var copy_id: Int = Int (id)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_has_input_port, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_id)
        return _result
        #else
        
        var copy_id: Int = Int (id)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_has_input_port, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_clear_input_ports: GDExtensionMethodBindPtr = {
        let methodName = StringName ("clear_input_ports")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// Removes all previously specified input ports.
    public final func clearInputPorts () {
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_clear_input_ports, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_add_output_port: GDExtensionMethodBindPtr = {
        let methodName = StringName ("add_output_port")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2285447957)!
            }
            
        }
        
    }()
    
    /// Adds an output port with the specified `type` (see ``VisualShaderNode.PortType``) and `name`.
    public final func addOutputPort (id: Int32, type: Int32, name: String) {
        #if false
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        let gstr_name = GString (name)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_add_output_port, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id, &copy_type, &gstr_name.content)
        
        #else
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        let gstr_name = GString (name)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_type) { p1 in
                _args.append (p1)
                withUnsafePointer (to: &gstr_name.content) { p2 in
                    _args.append (p2)
        
                    gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_add_output_port, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
                }
            }
        }
        
        #endif
    }
    
    fileprivate static var method_remove_output_port: GDExtensionMethodBindPtr = {
        let methodName = StringName ("remove_output_port")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    /// Removes the specified output port.
    public final func removeOutputPort (id: Int32) {
        #if false
        
        var copy_id: Int = Int (id)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_remove_output_port, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id)
        
        #else
        
        var copy_id: Int = Int (id)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_remove_output_port, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_output_port_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_output_port_count")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of output ports in use. Alternative for ``getFreeOutputPortId()``.
    public final func getOutputPortCount ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_get_output_port_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_has_output_port: GDExtensionMethodBindPtr = {
        let methodName = StringName ("has_output_port")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1116898809)!
            }
            
        }
        
    }()
    
    /// Returns `true` if the specified output port exists.
    public final func hasOutputPort (id: Int32)-> Bool {
        var _result: Bool = false
        #if false
        
        var copy_id: Int = Int (id)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_has_output_port, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_id)
        return _result
        #else
        
        var copy_id: Int = Int (id)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_has_output_port, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_clear_output_ports: GDExtensionMethodBindPtr = {
        let methodName = StringName ("clear_output_ports")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// Removes all previously specified output ports.
    public final func clearOutputPorts () {
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_clear_output_ports, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_set_input_port_name: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_input_port_name")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 501894301)!
            }
            
        }
        
    }()
    
    /// Renames the specified input port.
    public final func setInputPortName (id: Int32, name: String) {
        #if false
        
        var copy_id: Int = Int (id)
        let gstr_name = GString (name)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_set_input_port_name, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id, &gstr_name.content)
        
        #else
        
        var copy_id: Int = Int (id)
        let gstr_name = GString (name)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &gstr_name.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_set_input_port_name, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_set_input_port_type: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_input_port_type")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3937882851)!
            }
            
        }
        
    }()
    
    /// Sets the specified input port's type (see ``VisualShaderNode.PortType``).
    public final func setInputPortType (id: Int32, type: Int32) {
        #if false
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_set_input_port_type, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id, &copy_type)
        
        #else
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_type) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_set_input_port_type, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_set_output_port_name: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_output_port_name")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 501894301)!
            }
            
        }
        
    }()
    
    /// Renames the specified output port.
    public final func setOutputPortName (id: Int32, name: String) {
        #if false
        
        var copy_id: Int = Int (id)
        let gstr_name = GString (name)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_set_output_port_name, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id, &gstr_name.content)
        
        #else
        
        var copy_id: Int = Int (id)
        let gstr_name = GString (name)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &gstr_name.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_set_output_port_name, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_set_output_port_type: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_output_port_type")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3937882851)!
            }
            
        }
        
    }()
    
    /// Sets the specified output port's type (see ``VisualShaderNode.PortType``).
    public final func setOutputPortType (id: Int32, type: Int32) {
        #if false
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeGroupBase.method_set_output_port_type, UnsafeMutableRawPointer (mutating: handle), nil, &copy_id, &copy_type)
        
        #else
        
        var copy_id: Int = Int (id)
        var copy_type: Int = Int (type)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_id) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_type) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_set_output_port_type, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_free_input_port_id: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_free_input_port_id")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns a free input port ID which can be used in ``addInputPort(id:type:name:)``.
    public final func getFreeInputPortId ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_get_free_input_port_id, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_free_output_port_id: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_free_output_port_id")
        return withUnsafePointer (to: &VisualShaderNodeGroupBase.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns a free output port ID which can be used in ``addOutputPort(id:type:name:)``.
    public final func getFreeOutputPortId ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (VisualShaderNodeGroupBase.method_get_free_output_port_id, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

