// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Adds a panner audio effect to an audio bus. Pans sound left or right.
/// 
/// Determines how much of an audio signal is sent to the left and right buses.
open class AudioEffectPanner: AudioEffect {
    override open class var godotClassName: StringName { "AudioEffectPanner" }
    
    /* Properties */
    
    /// Pan position. Value can range from -1 (fully left) to 1 (fully right).
    final public var pan: Double {
        get {
            return get_pan ()
        }
        
        set {
            set_pan (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_pan: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_pan")
        return withUnsafePointer (to: &AudioEffectPanner.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_pan (_ cpanume: Double) {
        #if true
        
        var copy_cpanume = cpanume
        
        gi.object_method_bind_ptrcall_v (AudioEffectPanner.method_set_pan, UnsafeMutableRawPointer (mutating: handle), nil, &copy_cpanume)
        
        #else
        
        var copy_cpanume = cpanume
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_cpanume) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectPanner.method_set_pan, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_pan: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_pan")
        return withUnsafePointer (to: &AudioEffectPanner.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_pan ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectPanner.method_get_pan, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

