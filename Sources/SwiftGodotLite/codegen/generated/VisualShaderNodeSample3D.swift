// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A base node for nodes which samples 3D textures in the visual shader graph.
/// 
/// A virtual class, use the descendants instead.
open class VisualShaderNodeSample3D: VisualShaderNode {
    override open class var godotClassName: StringName { "VisualShaderNodeSample3D" }
    public enum Source: Int64 {
        /// Creates internal uniform and provides a way to assign it within node.
        case texture = 0 // SOURCE_TEXTURE
        /// Use the uniform texture from sampler port.
        case port = 1 // SOURCE_PORT
        /// Represents the size of the ``VisualShaderNodeSample3D/Source`` enum.
        case max = 2 // SOURCE_MAX
    }
    
    
    /* Properties */
    
    /// An input source type.
    final public var source: VisualShaderNodeSample3D.Source {
        get {
            return get_source ()
        }
        
        set {
            set_source (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_source: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_source")
        return withUnsafePointer (to: &VisualShaderNodeSample3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3315130991)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_source (_ value: VisualShaderNodeSample3D.Source) {
        #if false
        
        var copy_value = Int64 (value.rawValue)
        
        gi.object_method_bind_ptrcall_v (VisualShaderNodeSample3D.method_set_source, UnsafeMutableRawPointer (mutating: handle), nil, &copy_value)
        
        #else
        
        var copy_value = Int64 (value.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_value) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (VisualShaderNodeSample3D.method_set_source, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_source: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_source")
        return withUnsafePointer (to: &VisualShaderNodeSample3D.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1079494121)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_source ()-> VisualShaderNodeSample3D.Source {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (VisualShaderNodeSample3D.method_get_source, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return VisualShaderNodeSample3D.Source (rawValue: _result)!
    }
    
}

