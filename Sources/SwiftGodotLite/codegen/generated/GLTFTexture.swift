// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class GLTFTexture: Resource {
    override open class var godotClassName: StringName { "GLTFTexture" }
    
    /* Properties */
    
    /// The index of the image associated with this texture, see ``GLTFState/getImages()``. If -1, then this texture does not have an image assigned.
    final public var srcImage: Int32 {
        get {
            return get_src_image ()
        }
        
        set {
            set_src_image (newValue)
        }
        
    }
    
    /// ID of the texture sampler to use when sampling the image. If -1, then the default texture sampler is used (linear filtering, and repeat wrapping in both axes).
    final public var sampler: Int32 {
        get {
            return get_sampler ()
        }
        
        set {
            set_sampler (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_get_src_image: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_src_image")
        return withUnsafePointer (to: &GLTFTexture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_src_image ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (GLTFTexture.method_get_src_image, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_src_image: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_src_image")
        return withUnsafePointer (to: &GLTFTexture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_src_image (_ srcImage: Int32) {
        #if false
        
        var copy_src_image: Int = Int (srcImage)
        
        gi.object_method_bind_ptrcall_v (GLTFTexture.method_set_src_image, UnsafeMutableRawPointer (mutating: handle), nil, &copy_src_image)
        
        #else
        
        var copy_src_image: Int = Int (srcImage)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_src_image) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFTexture.method_set_src_image, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_sampler: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_sampler")
        return withUnsafePointer (to: &GLTFTexture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sampler ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (GLTFTexture.method_get_sampler, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sampler: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_sampler")
        return withUnsafePointer (to: &GLTFTexture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sampler (_ sampler: Int32) {
        #if false
        
        var copy_sampler: Int = Int (sampler)
        
        gi.object_method_bind_ptrcall_v (GLTFTexture.method_set_sampler, UnsafeMutableRawPointer (mutating: handle), nil, &copy_sampler)
        
        #else
        
        var copy_sampler: Int = Int (sampler)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_sampler) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFTexture.method_set_sampler, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
}

