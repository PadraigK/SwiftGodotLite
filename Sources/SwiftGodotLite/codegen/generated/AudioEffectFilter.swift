// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Adds a filter to the audio bus.
/// 
/// Allows frequencies other than the ``cutoffHz`` to pass.
open class AudioEffectFilter: AudioEffect {
    override open class var godotClassName: StringName { "AudioEffectFilter" }
    public enum FilterDB: Int64 {
        /// 
        case filter6db = 0 // FILTER_6DB
        /// 
        case filter12db = 1 // FILTER_12DB
        /// 
        case filter18db = 2 // FILTER_18DB
        /// 
        case filter24db = 3 // FILTER_24DB
    }
    
    
    /* Properties */
    
    /// Threshold frequency for the filter, in Hz.
    final public var cutoffHz: Double {
        get {
            return get_cutoff ()
        }
        
        set {
            set_cutoff (newValue)
        }
        
    }
    
    /// Amount of boost in the frequency range near the cutoff frequency.
    final public var resonance: Double {
        get {
            return get_resonance ()
        }
        
        set {
            set_resonance (newValue)
        }
        
    }
    
    /// Gain amount of the frequencies after the filter.
    final public var gain: Double {
        get {
            return get_gain ()
        }
        
        set {
            set_gain (newValue)
        }
        
    }
    
    final public var db: AudioEffectFilter.FilterDB {
        get {
            return get_db ()
        }
        
        set {
            set_db (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_cutoff: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_cutoff")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_cutoff (_ freq: Double) {
        #if false
        
        var copy_freq = freq
        
        gi.object_method_bind_ptrcall_v (AudioEffectFilter.method_set_cutoff, UnsafeMutableRawPointer (mutating: handle), nil, &copy_freq)
        
        #else
        
        var copy_freq = freq
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_freq) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectFilter.method_set_cutoff, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_cutoff: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_cutoff")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_cutoff ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectFilter.method_get_cutoff, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_resonance: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_resonance")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_resonance (_ amount: Double) {
        #if false
        
        var copy_amount = amount
        
        gi.object_method_bind_ptrcall_v (AudioEffectFilter.method_set_resonance, UnsafeMutableRawPointer (mutating: handle), nil, &copy_amount)
        
        #else
        
        var copy_amount = amount
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_amount) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectFilter.method_set_resonance, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_resonance: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_resonance")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_resonance ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectFilter.method_get_resonance, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_gain: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_gain")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_gain (_ amount: Double) {
        #if false
        
        var copy_amount = amount
        
        gi.object_method_bind_ptrcall_v (AudioEffectFilter.method_set_gain, UnsafeMutableRawPointer (mutating: handle), nil, &copy_amount)
        
        #else
        
        var copy_amount = amount
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_amount) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectFilter.method_set_gain, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_gain: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_gain")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_gain ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectFilter.method_get_gain, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_db")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 771740901)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_db (_ amount: AudioEffectFilter.FilterDB) {
        #if false
        
        var copy_amount = Int64 (amount.rawValue)
        
        gi.object_method_bind_ptrcall_v (AudioEffectFilter.method_set_db, UnsafeMutableRawPointer (mutating: handle), nil, &copy_amount)
        
        #else
        
        var copy_amount = Int64 (amount.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_amount) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectFilter.method_set_db, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_db")
        return withUnsafePointer (to: &AudioEffectFilter.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3981721890)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_db ()-> AudioEffectFilter.FilterDB {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (AudioEffectFilter.method_get_db, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return AudioEffectFilter.FilterDB (rawValue: _result)!
    }
    
}

