// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A horizontal menu bar that creates a ``MenuButton`` for each ``PopupMenu`` child.
/// 
/// A horizontal menu bar that creates a ``MenuButton`` for each ``PopupMenu`` child. New items are created by adding ``PopupMenu``s to this node.
open class MenuBar: Control {
    override open class var godotClassName: StringName { "MenuBar" }
    
    /* Properties */
    
    /// Flat ``MenuBar`` don't display item decoration.
    final public var flat: Bool {
        get {
            return is_flat ()
        }
        
        set {
            set_flat (newValue)
        }
        
    }
    
    /// Position in the global menu to insert first ``MenuBar`` item at.
    final public var startIndex: Int32 {
        get {
            return get_start_index ()
        }
        
        set {
            set_start_index (newValue)
        }
        
    }
    
    /// If `true`, when the cursor hovers above menu item, it will close the current ``PopupMenu`` and open the other one.
    final public var switchOnHover: Bool {
        get {
            return is_switch_on_hover ()
        }
        
        set {
            set_switch_on_hover (newValue)
        }
        
    }
    
    /// If `true`, ``MenuBar`` will use system global menu when supported.
    final public var preferGlobalMenu: Bool {
        get {
            return is_prefer_global_menu ()
        }
        
        set {
            set_prefer_global_menu (newValue)
        }
        
    }
    
    /// Base text writing direction.
    final public var textDirection: Control.TextDirection {
        get {
            return get_text_direction ()
        }
        
        set {
            set_text_direction (newValue)
        }
        
    }
    
    /// Language code used for line-breaking and text shaping algorithms, if left empty current locale is used instead.
    final public var language: String {
        get {
            return get_language ()
        }
        
        set {
            set_language (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_switch_on_hover: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_switch_on_hover")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_switch_on_hover (_ enable: Bool) {
        #if true
        
        var copy_enable = enable
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_switch_on_hover, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enable)
        
        #else
        
        var copy_enable = enable
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enable) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_switch_on_hover, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_is_switch_on_hover: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_switch_on_hover")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2240911060)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func is_switch_on_hover ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (MenuBar.method_is_switch_on_hover, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_disable_shortcuts: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_disable_shortcuts")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    /// If `true`, shortcuts are disabled and cannot be used to trigger the button.
    public final func setDisableShortcuts (disabled: Bool) {
        #if true
        
        var copy_disabled = disabled
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_disable_shortcuts, UnsafeMutableRawPointer (mutating: handle), nil, &copy_disabled)
        
        #else
        
        var copy_disabled = disabled
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_disabled) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_disable_shortcuts, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_set_prefer_global_menu: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_prefer_global_menu")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_prefer_global_menu (_ enabled: Bool) {
        #if true
        
        var copy_enabled = enabled
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_prefer_global_menu, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enabled)
        
        #else
        
        var copy_enabled = enabled
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enabled) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_prefer_global_menu, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_is_prefer_global_menu: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_prefer_global_menu")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func is_prefer_global_menu ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (MenuBar.method_is_prefer_global_menu, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_is_native_menu: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_native_menu")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    /// Returns `true`, if system global menu is supported and used by this ``MenuBar``.
    public final func isNativeMenu ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (MenuBar.method_is_native_menu, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_menu_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_menu_count")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns number of menu items.
    public final func getMenuCount ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (MenuBar.method_get_menu_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_text_direction: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_text_direction")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 119160795)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_text_direction (_ direction: Control.TextDirection) {
        #if true
        
        var copy_direction = Int64 (direction.rawValue)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_text_direction, UnsafeMutableRawPointer (mutating: handle), nil, &copy_direction)
        
        #else
        
        var copy_direction = Int64 (direction.rawValue)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_direction) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_text_direction, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_text_direction: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_text_direction")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 797257663)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_text_direction ()-> Control.TextDirection {
        var _result: Int64 = 0 // to avoid packed enums on the stack
        gi.object_method_bind_ptrcall (MenuBar.method_get_text_direction, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return Control.TextDirection (rawValue: _result)!
    }
    
    fileprivate static var method_set_language: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_language")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 83702148)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_language (_ language: String) {
        #if true
        
        let gstr_language = GString (language)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_language, UnsafeMutableRawPointer (mutating: handle), nil, &gstr_language.content)
        
        #else
        
        let gstr_language = GString (language)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &gstr_language.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_language, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_language: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_language")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 201670096)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_language ()-> String {
        let _result = GString ()
        gi.object_method_bind_ptrcall (MenuBar.method_get_language, UnsafeMutableRawPointer (mutating: handle), nil, &_result.content)
        return _result.description
    }
    
    fileprivate static var method_set_flat: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_flat")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_flat (_ enabled: Bool) {
        #if true
        
        var copy_enabled = enabled
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_flat, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enabled)
        
        #else
        
        var copy_enabled = enabled
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enabled) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_flat, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_is_flat: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_flat")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func is_flat ()-> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall (MenuBar.method_is_flat, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_start_index: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_start_index")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_start_index (_ enabled: Int32) {
        #if true
        
        var copy_enabled: Int = Int (enabled)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_start_index, UnsafeMutableRawPointer (mutating: handle), nil, &copy_enabled)
        
        #else
        
        var copy_enabled: Int = Int (enabled)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_enabled) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_set_start_index, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_start_index: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_start_index")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_start_index ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (MenuBar.method_get_start_index, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_menu_title: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_menu_title")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 501894301)!
            }
            
        }
        
    }()
    
    /// Sets menu item title.
    public final func setMenuTitle (menu: Int32, title: String) {
        #if true
        
        var copy_menu: Int = Int (menu)
        let gstr_title = GString (title)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_menu_title, UnsafeMutableRawPointer (mutating: handle), nil, &copy_menu, &gstr_title.content)
        
        #else
        
        var copy_menu: Int = Int (menu)
        let gstr_title = GString (title)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &gstr_title.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (MenuBar.method_set_menu_title, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_menu_title: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_menu_title")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 844755477)!
            }
            
        }
        
    }()
    
    /// Returns menu item title.
    public final func getMenuTitle (menu: Int32)-> String {
        let _result = GString ()
        #if true
        
        var copy_menu: Int = Int (menu)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_get_menu_title, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_menu)
        return _result.description
        #else
        
        var copy_menu: Int = Int (menu)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_get_menu_title, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
            return _result.description
        }
        
        #endif
    }
    
    fileprivate static var method_set_menu_tooltip: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_menu_tooltip")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 501894301)!
            }
            
        }
        
    }()
    
    /// Sets menu item tooltip.
    public final func setMenuTooltip (menu: Int32, tooltip: String) {
        #if true
        
        var copy_menu: Int = Int (menu)
        let gstr_tooltip = GString (tooltip)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_menu_tooltip, UnsafeMutableRawPointer (mutating: handle), nil, &copy_menu, &gstr_tooltip.content)
        
        #else
        
        var copy_menu: Int = Int (menu)
        let gstr_tooltip = GString (tooltip)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &gstr_tooltip.content) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (MenuBar.method_set_menu_tooltip, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_menu_tooltip: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_menu_tooltip")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 844755477)!
            }
            
        }
        
    }()
    
    /// Returns menu item tooltip.
    public final func getMenuTooltip (menu: Int32)-> String {
        let _result = GString ()
        #if true
        
        var copy_menu: Int = Int (menu)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_get_menu_tooltip, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_menu)
        return _result.description
        #else
        
        var copy_menu: Int = Int (menu)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_get_menu_tooltip, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
            return _result.description
        }
        
        #endif
    }
    
    fileprivate static var method_set_menu_disabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_menu_disabled")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 300928843)!
            }
            
        }
        
    }()
    
    /// If `true`, menu item is disabled.
    public final func setMenuDisabled (menu: Int32, disabled: Bool) {
        #if true
        
        var copy_menu: Int = Int (menu)
        var copy_disabled = disabled
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_menu_disabled, UnsafeMutableRawPointer (mutating: handle), nil, &copy_menu, &copy_disabled)
        
        #else
        
        var copy_menu: Int = Int (menu)
        var copy_disabled = disabled
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_disabled) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (MenuBar.method_set_menu_disabled, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_is_menu_disabled: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_menu_disabled")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1116898809)!
            }
            
        }
        
    }()
    
    /// Returns `true`, if menu item is disabled.
    public final func isMenuDisabled (menu: Int32)-> Bool {
        var _result: Bool = false
        #if true
        
        var copy_menu: Int = Int (menu)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_is_menu_disabled, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_menu)
        return _result
        #else
        
        var copy_menu: Int = Int (menu)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_is_menu_disabled, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_menu_hidden: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_menu_hidden")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 300928843)!
            }
            
        }
        
    }()
    
    /// If `true`, menu item is hidden.
    public final func setMenuHidden (menu: Int32, hidden: Bool) {
        #if true
        
        var copy_menu: Int = Int (menu)
        var copy_hidden = hidden
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_set_menu_hidden, UnsafeMutableRawPointer (mutating: handle), nil, &copy_menu, &copy_hidden)
        
        #else
        
        var copy_menu: Int = Int (menu)
        var copy_hidden = hidden
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_hidden) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (MenuBar.method_set_menu_hidden, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_is_menu_hidden: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_menu_hidden")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1116898809)!
            }
            
        }
        
    }()
    
    /// Returns `true`, if menu item is hidden.
    public final func isMenuHidden (menu: Int32)-> Bool {
        var _result: Bool = false
        #if true
        
        var copy_menu: Int = Int (menu)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_is_menu_hidden, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_menu)
        return _result
        #else
        
        var copy_menu: Int = Int (menu)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_is_menu_hidden, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_get_menu_popup: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_menu_popup")
        return withUnsafePointer (to: &MenuBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2100501353)!
            }
            
        }
        
    }()
    
    /// Returns ``PopupMenu`` associated with menu item.
    public final func getMenuPopup (menu: Int32)-> PopupMenu? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        #if true
        
        var copy_menu: Int = Int (menu)
        
        gi.object_method_bind_ptrcall_v (MenuBar.method_get_menu_popup, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_menu)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
        #else
        
        var copy_menu: Int = Int (menu)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_menu) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (MenuBar.method_get_menu_popup, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
        }
        
        #endif
    }
    
}

