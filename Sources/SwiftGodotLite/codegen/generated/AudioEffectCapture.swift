// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Captures audio from an audio bus in real-time.
/// 
/// AudioEffectCapture is an AudioEffect which copies all audio frames from the attached audio effect bus into its internal ring buffer.
/// 
/// Application code should consume these audio frames from this ring buffer using ``getBuffer(frames:)`` and process it as needed, for example to capture data from an ``AudioStreamMicrophone``, implement application-defined effects, or to transmit audio over the network. When capturing audio data from a microphone, the format of the samples will be stereo 32-bit floating point PCM.
/// 
/// > Note: ``ProjectSettings/audio/driver/enableInput`` must be `true` for audio input to work. See also that setting's description for caveats related to permissions and operating system privacy settings.
/// 
open class AudioEffectCapture: AudioEffect {
    override open class var godotClassName: StringName { "AudioEffectCapture" }
    
    /* Properties */
    
    /// Length of the internal ring buffer, in seconds. Setting the buffer length will have no effect if already initialized.
    final public var bufferLength: Double {
        get {
            return get_buffer_length ()
        }
        
        set {
            set_buffer_length (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_can_get_buffer: GDExtensionMethodBindPtr = {
        let methodName = StringName ("can_get_buffer")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1116898809)!
            }
            
        }
        
    }()
    
    /// Returns `true` if at least `frames` audio frames are available to read in the internal ring buffer.
    public final func canGetBuffer (frames: Int32)-> Bool {
        var _result: Bool = false
        #if true
        
        var copy_frames: Int = Int (frames)
        
        gi.object_method_bind_ptrcall_v (AudioEffectCapture.method_can_get_buffer, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_frames)
        return _result
        #else
        
        var copy_frames: Int = Int (frames)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_frames) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectCapture.method_can_get_buffer, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_get_buffer: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_buffer")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2649534757)!
            }
            
        }
        
    }()
    
    /// Gets the next `frames` audio samples from the internal ring buffer.
    /// 
    /// Returns a ``PackedVector2Array`` containing exactly `frames` audio samples if available, or an empty ``PackedVector2Array`` if insufficient data was available.
    /// 
    public final func getBuffer (frames: Int32)-> PackedVector2Array {
        let _result: PackedVector2Array = PackedVector2Array ()
        #if true
        
        var copy_frames: Int = Int (frames)
        
        gi.object_method_bind_ptrcall_v (AudioEffectCapture.method_get_buffer, UnsafeMutableRawPointer (mutating: handle), &_result.content, &copy_frames)
        return _result
        #else
        
        var copy_frames: Int = Int (frames)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_frames) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectCapture.method_get_buffer, UnsafeMutableRawPointer (mutating: handle), &_args, &_result.content)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_clear_buffer: GDExtensionMethodBindPtr = {
        let methodName = StringName ("clear_buffer")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3218959716)!
            }
            
        }
        
    }()
    
    /// Clears the internal ring buffer.
    public final func clearBuffer () {
        gi.object_method_bind_ptrcall (AudioEffectCapture.method_clear_buffer, UnsafeMutableRawPointer (mutating: handle), nil, nil)
    }
    
    fileprivate static var method_set_buffer_length: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_buffer_length")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_buffer_length (_ bufferLengthSeconds: Double) {
        #if true
        
        var copy_buffer_length_seconds = bufferLengthSeconds
        
        gi.object_method_bind_ptrcall_v (AudioEffectCapture.method_set_buffer_length, UnsafeMutableRawPointer (mutating: handle), nil, &copy_buffer_length_seconds)
        
        #else
        
        var copy_buffer_length_seconds = bufferLengthSeconds
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_buffer_length_seconds) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectCapture.method_set_buffer_length, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_buffer_length: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_buffer_length")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 191475506)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_buffer_length ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectCapture.method_get_buffer_length, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_frames_available: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_frames_available")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of frames available to read using ``getBuffer(frames:)``.
    public final func getFramesAvailable ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (AudioEffectCapture.method_get_frames_available, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_discarded_frames: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_discarded_frames")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of audio frames discarded from the audio bus due to full buffer.
    public final func getDiscardedFrames ()-> Int {
        var _result: Int = 0
        gi.object_method_bind_ptrcall (AudioEffectCapture.method_get_discarded_frames, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_buffer_length_frames: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_buffer_length_frames")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the total size of the internal ring buffer in frames.
    public final func getBufferLengthFrames ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (AudioEffectCapture.method_get_buffer_length_frames, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_get_pushed_frames: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_pushed_frames")
        return withUnsafePointer (to: &AudioEffectCapture.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the number of audio frames inserted from the audio bus.
    public final func getPushedFrames ()-> Int {
        var _result: Int = 0
        gi.object_method_bind_ptrcall (AudioEffectCapture.method_get_pushed_frames, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

