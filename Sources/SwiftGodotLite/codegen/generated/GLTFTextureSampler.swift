// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Represents a GLTF texture sampler
/// 
/// Represents a texture sampler as defined by the base GLTF spec. Texture samplers in GLTF specify how to sample data from the texture's base image, when rendering the texture on an object.
open class GLTFTextureSampler: Resource {
    override open class var godotClassName: StringName { "GLTFTextureSampler" }
    
    /* Properties */
    
    /// Texture's magnification filter, used when texture appears larger on screen than the source image.
    final public var magFilter: Int32 {
        get {
            return get_mag_filter ()
        }
        
        set {
            set_mag_filter (newValue)
        }
        
    }
    
    /// Texture's minification filter, used when the texture appears smaller on screen than the source image.
    final public var minFilter: Int32 {
        get {
            return get_min_filter ()
        }
        
        set {
            set_min_filter (newValue)
        }
        
    }
    
    /// Wrapping mode to use for S-axis (horizontal) texture coordinates.
    final public var wrapS: Int32 {
        get {
            return get_wrap_s ()
        }
        
        set {
            set_wrap_s (newValue)
        }
        
    }
    
    /// Wrapping mode to use for T-axis (vertical) texture coordinates.
    final public var wrapT: Int32 {
        get {
            return get_wrap_t ()
        }
        
        set {
            set_wrap_t (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_get_mag_filter: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_mag_filter")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_mag_filter ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (GLTFTextureSampler.method_get_mag_filter, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_mag_filter: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_mag_filter")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_mag_filter (_ filterMode: Int32) {
        #if true
        
        var copy_filter_mode: Int = Int (filterMode)
        
        gi.object_method_bind_ptrcall_v (GLTFTextureSampler.method_set_mag_filter, UnsafeMutableRawPointer (mutating: handle), nil, &copy_filter_mode)
        
        #else
        
        var copy_filter_mode: Int = Int (filterMode)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_filter_mode) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFTextureSampler.method_set_mag_filter, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_min_filter: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_min_filter")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_min_filter ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (GLTFTextureSampler.method_get_min_filter, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_min_filter: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_min_filter")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_min_filter (_ filterMode: Int32) {
        #if true
        
        var copy_filter_mode: Int = Int (filterMode)
        
        gi.object_method_bind_ptrcall_v (GLTFTextureSampler.method_set_min_filter, UnsafeMutableRawPointer (mutating: handle), nil, &copy_filter_mode)
        
        #else
        
        var copy_filter_mode: Int = Int (filterMode)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_filter_mode) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFTextureSampler.method_set_min_filter, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_wrap_s: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_wrap_s")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_wrap_s ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (GLTFTextureSampler.method_get_wrap_s, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_wrap_s: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_wrap_s")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_wrap_s (_ wrapMode: Int32) {
        #if true
        
        var copy_wrap_mode: Int = Int (wrapMode)
        
        gi.object_method_bind_ptrcall_v (GLTFTextureSampler.method_set_wrap_s, UnsafeMutableRawPointer (mutating: handle), nil, &copy_wrap_mode)
        
        #else
        
        var copy_wrap_mode: Int = Int (wrapMode)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_wrap_mode) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFTextureSampler.method_set_wrap_s, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_wrap_t: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_wrap_t")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_wrap_t ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (GLTFTextureSampler.method_get_wrap_t, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_wrap_t: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_wrap_t")
        return withUnsafePointer (to: &GLTFTextureSampler.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_wrap_t (_ wrapMode: Int32) {
        #if true
        
        var copy_wrap_mode: Int = Int (wrapMode)
        
        gi.object_method_bind_ptrcall_v (GLTFTextureSampler.method_set_wrap_t, UnsafeMutableRawPointer (mutating: handle), nil, &copy_wrap_mode)
        
        #else
        
        var copy_wrap_mode: Int = Int (wrapMode)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_wrap_mode) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (GLTFTextureSampler.method_set_wrap_t, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
}

