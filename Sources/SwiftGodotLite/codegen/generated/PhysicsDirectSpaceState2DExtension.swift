// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Provides virtual methods that can be overridden to create custom ``PhysicsDirectSpaceState2D`` implementations.
/// 
/// This class extends ``PhysicsDirectSpaceState2D`` by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.
/// 
/// Intended for use with GDExtension to create custom implementations of ``PhysicsDirectSpaceState2D``.
/// 
open class PhysicsDirectSpaceState2DExtension: PhysicsDirectSpaceState2D {
    override open class var godotClassName: StringName { "PhysicsDirectSpaceState2DExtension" }
    /* Methods */
    fileprivate static var method_is_body_excluded_from_query: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_body_excluded_from_query")
        return withUnsafePointer (to: &PhysicsDirectSpaceState2DExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 4155700596)!
            }
            
        }
        
    }()
    
    /// 
    public final func isBodyExcludedFromQuery (body: RID)-> Bool {
        var _result: Bool = false
        #if false
        
        
        gi.object_method_bind_ptrcall_v (PhysicsDirectSpaceState2DExtension.method_is_body_excluded_from_query, UnsafeMutableRawPointer (mutating: handle), &_result, &body.content)
        return _result
        #else
        
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &body.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PhysicsDirectSpaceState2DExtension.method_is_body_excluded_from_query, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
}

