// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// An internal class used by ``PackedDataContainer`` to pack nested arrays and dictionaries.
/// 
/// When packing nested containers using ``PackedDataContainer``, they are recursively packed into ``PackedDataContainerRef`` (only applies to ``GArray`` and ``GDictionary``). Their data can be retrieved the same way as from ``PackedDataContainer``.
/// 
open class PackedDataContainerRef: RefCounted {
    override open class var godotClassName: StringName { "PackedDataContainerRef" }
    /* Methods */
    fileprivate static var method_size: GDExtensionMethodBindPtr = {
        let methodName = StringName ("size")
        return withUnsafePointer (to: &PackedDataContainerRef.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    /// Returns the size of the packed container (see ``Array/size()`` and ``Dictionary/size()``).
    public final func size ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (PackedDataContainerRef.method_size, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

