// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Adds a chorus audio effect.
/// 
/// Adds a chorus audio effect. The effect applies a filter with voices to duplicate the audio source and manipulate it through the filter.
open class AudioEffectChorus: AudioEffect {
    override open class var godotClassName: StringName { "AudioEffectChorus" }
    
    /* Properties */
    
    /// The number of voices in the effect.
    final public var voiceCount: Int32 {
        get {
            return get_voice_count ()
        }
        
        set {
            set_voice_count (newValue)
        }
        
    }
    
    /// The effect's raw signal.
    final public var dry: Double {
        get {
            return get_dry ()
        }
        
        set {
            set_dry (newValue)
        }
        
    }
    
    /// The effect's processed signal.
    final public var wet: Double {
        get {
            return get_wet ()
        }
        
        set {
            set_wet (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_voice_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_count")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_voice_count (_ voices: Int32) {
        #if false
        
        var copy_voices: Int = Int (voices)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_count, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voices)
        
        #else
        
        var copy_voices: Int = Int (voices)
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voices) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_count, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_count: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_count")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_voice_count ()-> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_count, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_voice_delay_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_delay_ms")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceDelayMs (voiceIdx: Int32, delayMs: Double) {
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_delay_ms = delayMs
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_delay_ms, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voice_idx, &copy_delay_ms)
        
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_delay_ms = delayMs
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_delay_ms) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_delay_ms, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_delay_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_delay_ms")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceDelayMs (voiceIdx: Int32)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_get_voice_delay_ms, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_voice_idx)
        return _result
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_delay_ms, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_voice_rate_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_rate_hz")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceRateHz (voiceIdx: Int32, rateHz: Double) {
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_rate_hz = rateHz
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_rate_hz, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voice_idx, &copy_rate_hz)
        
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_rate_hz = rateHz
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_rate_hz) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_rate_hz, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_rate_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_rate_hz")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceRateHz (voiceIdx: Int32)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_get_voice_rate_hz, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_voice_idx)
        return _result
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_rate_hz, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_voice_depth_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_depth_ms")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceDepthMs (voiceIdx: Int32, depthMs: Double) {
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_depth_ms = depthMs
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_depth_ms, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voice_idx, &copy_depth_ms)
        
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_depth_ms = depthMs
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_depth_ms) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_depth_ms, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_depth_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_depth_ms")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceDepthMs (voiceIdx: Int32)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_get_voice_depth_ms, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_voice_idx)
        return _result
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_depth_ms, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_voice_level_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_level_db")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceLevelDb (voiceIdx: Int32, levelDb: Double) {
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_level_db = levelDb
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_level_db, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voice_idx, &copy_level_db)
        
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_level_db = levelDb
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_level_db) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_level_db, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_level_db: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_level_db")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceLevelDb (voiceIdx: Int32)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_get_voice_level_db, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_voice_idx)
        return _result
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_level_db, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_voice_cutoff_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_cutoff_hz")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceCutoffHz (voiceIdx: Int32, cutoffHz: Double) {
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_cutoff_hz = cutoffHz
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voice_idx, &copy_cutoff_hz)
        
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_cutoff_hz = cutoffHz
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_cutoff_hz) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_cutoff_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_cutoff_hz")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceCutoffHz (voiceIdx: Int32)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_get_voice_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_voice_idx)
        return _result
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_cutoff_hz, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_voice_pan: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_voice_pan")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoicePan (voiceIdx: Int32, pan: Double) {
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_pan = pan
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_voice_pan, UnsafeMutableRawPointer (mutating: handle), nil, &copy_voice_idx, &copy_pan)
        
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var copy_pan = pan
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
            withUnsafePointer (to: &copy_pan) { p1 in
                _args.append (p1)
        
                gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_voice_pan, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
            }
        }
        
        #endif
    }
    
    fileprivate static var method_get_voice_pan: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_voice_pan")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoicePan (voiceIdx: Int32)-> Double {
        var _result: Double = 0.0
        #if false
        
        var copy_voice_idx: Int = Int (voiceIdx)
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_get_voice_pan, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_voice_idx)
        return _result
        #else
        
        var copy_voice_idx: Int = Int (voiceIdx)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_voice_idx) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_voice_pan, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    fileprivate static var method_set_wet: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_wet")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_wet (_ amount: Double) {
        #if false
        
        var copy_amount = amount
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_wet, UnsafeMutableRawPointer (mutating: handle), nil, &copy_amount)
        
        #else
        
        var copy_amount = amount
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_amount) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_wet, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_wet: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_wet")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_wet ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_wet, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_dry: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_dry")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_dry (_ amount: Double) {
        #if false
        
        var copy_amount = amount
        
        gi.object_method_bind_ptrcall_v (AudioEffectChorus.method_set_dry, UnsafeMutableRawPointer (mutating: handle), nil, &copy_amount)
        
        #else
        
        var copy_amount = amount
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_amount) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (AudioEffectChorus.method_set_dry, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_dry: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_dry")
        return withUnsafePointer (to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_dry ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (AudioEffectChorus.method_get_dry, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
}

