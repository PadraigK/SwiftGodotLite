// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

open class AudioEffectSpectrumAnalyzerInstance: AudioEffectInstance {
    override open class var godotClassName: StringName { "AudioEffectSpectrumAnalyzerInstance" }
    public enum MagnitudeMode: Int64 {
        /// Use the average value as magnitude.
        case average = 0 // MAGNITUDE_AVERAGE
        /// Use the maximum value as magnitude.
        case max = 1 // MAGNITUDE_MAX
    }
    
    /* Methods */
    fileprivate static var method_get_magnitude_for_frequency_range: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_magnitude_for_frequency_range")
        return withUnsafePointer (to: &AudioEffectSpectrumAnalyzerInstance.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 797993915)!
            }
            
        }
        
    }()
    
    /// 
    public final func getMagnitudeForFrequencyRange (fromHz: Double, toHz: Double, mode: AudioEffectSpectrumAnalyzerInstance.MagnitudeMode = .max)-> Vector2 {
        var _result: Vector2 = Vector2 ()
        #if true
        
        var copy_from_hz = fromHz
        var copy_to_hz = toHz
        var copy_mode = Int64 (mode.rawValue)
        
        gi.object_method_bind_ptrcall_v (AudioEffectSpectrumAnalyzerInstance.method_get_magnitude_for_frequency_range, UnsafeMutableRawPointer (mutating: handle), &_result, &copy_from_hz, &copy_to_hz, &copy_mode)
        return _result
        #else
        
        var copy_from_hz = fromHz
        var copy_to_hz = toHz
        var copy_mode = Int64 (mode.rawValue)
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &copy_from_hz) { p0 in
            _args.append (p0)
            return withUnsafePointer (to: &copy_to_hz) { p1 in
                _args.append (p1)
                return withUnsafePointer (to: &copy_mode) { p2 in
                    _args.append (p2)
        
                    gi.object_method_bind_ptrcall (AudioEffectSpectrumAnalyzerInstance.method_get_magnitude_for_frequency_range, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
                    return _result
                }
            }
        }
        
        #endif
    }
    
}

