// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Abstract base class for scrollbars.
/// 
/// Abstract base class for scrollbars, typically used to navigate through content that extends beyond the visible area of a control. Scrollbars are ``Range``-based controls.
/// 
/// 
/// This object emits the following signals:
/// 
/// - ``scrolling``
open class ScrollBar: Range {
    override open class var godotClassName: StringName { "ScrollBar" }
    
    /* Properties */
    
    /// Overrides the step used when clicking increment and decrement buttons or when using arrow keys when the ``ScrollBar`` is focused.
    final public var customStep: Double {
        get {
            return get_custom_step ()
        }
        
        set {
            set_custom_step (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_custom_step: GDExtensionMethodBindPtr = {
        let methodName = StringName ("set_custom_step")
        return withUnsafePointer (to: &ScrollBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_custom_step (_ step: Double) {
        #if false
        
        var copy_step = step
        
        gi.object_method_bind_ptrcall_v (ScrollBar.method_set_custom_step, UnsafeMutableRawPointer (mutating: handle), nil, &copy_step)
        
        #else
        
        var copy_step = step
        var _args: [UnsafeRawPointer?] = []
        withUnsafePointer (to: &copy_step) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (ScrollBar.method_set_custom_step, UnsafeMutableRawPointer (mutating: handle), &_args, nil)
        }
        
        #endif
    }
    
    fileprivate static var method_get_custom_step: GDExtensionMethodBindPtr = {
        let methodName = StringName ("get_custom_step")
        return withUnsafePointer (to: &ScrollBar.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_custom_step ()-> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall (ScrollBar.method_get_custom_step, UnsafeMutableRawPointer (mutating: handle), nil, &_result)
        return _result
    }
    
    // Signals 
    /// Emitted when the scrollbar is being scrolled.
    ///
    /// To connect to this signal, reference this property and call the
    /// 
    /// `connect` method with the method you want to invoke
    /// 
    /// 
    /// 
    /// Example:
    /// ```swift
    /// obj.scrolling.connect {
    ///    print ("caught signal")
    /// }
    /// ```
    public var scrolling: SimpleSignal { SimpleSignal (target: self, signalName: "scrolling") }
    
}

