// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Provides virtual methods that can be overridden to create custom ``PhysicsDirectSpaceState3D`` implementations.
/// 
/// This class extends ``PhysicsDirectSpaceState3D`` by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.
/// 
/// Intended for use with GDExtension to create custom implementations of ``PhysicsDirectSpaceState3D``.
/// 
open class PhysicsDirectSpaceState3DExtension: PhysicsDirectSpaceState3D {
    override open class var godotClassName: StringName { "PhysicsDirectSpaceState3DExtension" }
    /* Methods */
    /// 
    @_documentation(visibility: public)
    open func _getClosestPointToObjectVolume (object: RID, point: Vector3)-> Vector3 {
        return Vector3 ()
    }
    
    fileprivate static var method_is_body_excluded_from_query: GDExtensionMethodBindPtr = {
        let methodName = StringName ("is_body_excluded_from_query")
        return withUnsafePointer (to: &PhysicsDirectSpaceState3DExtension.godotClassName.content) { classPtr in
            withUnsafePointer (to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind (classPtr, mnamePtr, 4155700596)!
            }
            
        }
        
    }()
    
    /// 
    public final func isBodyExcludedFromQuery (body: RID)-> Bool {
        var _result: Bool = false
        #if false
        
        
        gi.object_method_bind_ptrcall_v (PhysicsDirectSpaceState3DExtension.method_is_body_excluded_from_query, UnsafeMutableRawPointer (mutating: handle), &_result, &body.content)
        return _result
        #else
        
        var _args: [UnsafeRawPointer?] = []
        return withUnsafePointer (to: &body.content) { p0 in
            _args.append (p0)
        
            gi.object_method_bind_ptrcall (PhysicsDirectSpaceState3DExtension.method_is_body_excluded_from_query, UnsafeMutableRawPointer (mutating: handle), &_args, &_result)
            return _result
        }
        
        #endif
    }
    
    override class func getVirtualDispatcher (name: StringName) -> GDExtensionClassCallVirtual? {
        guard implementedOverrides().contains(name) else { return nil }
        switch name.description {
            case "_get_closest_point_to_object_volume":
                return _PhysicsDirectSpaceState3DExtension_proxy_get_closest_point_to_object_volume
            default:
                return super.getVirtualDispatcher (name: name)
        }
        
    }
    
}

// Support methods for proxies
func _PhysicsDirectSpaceState3DExtension_proxy_get_closest_point_to_object_volume (instance: UnsafeMutableRawPointer?, args: UnsafePointer<UnsafeRawPointer?>?, retPtr: UnsafeMutableRawPointer?) {
    guard let instance else { return }
    guard let args else { return }
    let swiftObject = Unmanaged<PhysicsDirectSpaceState3DExtension>.fromOpaque(instance).takeUnretainedValue()
    let ret = swiftObject._getClosestPointToObjectVolume (object: RID (content: args [0]!.assumingMemoryBound (to: Int64.self).pointee), point: args [1]!.assumingMemoryBound (to: Vector3.self).pointee)
    retPtr!.storeBytes (of: ret, as: Vector3.self)
}

