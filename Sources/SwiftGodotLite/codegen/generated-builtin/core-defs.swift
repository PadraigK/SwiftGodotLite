// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

public enum Side: Int64 {
    /// Left side, usually used for ``Control`` or ``StyleBox``-derived classes.
    case left = 0 // SIDE_LEFT
    /// Top side, usually used for ``Control`` or ``StyleBox``-derived classes.
    case top = 1 // SIDE_TOP
    /// Right side, usually used for ``Control`` or ``StyleBox``-derived classes.
    case right = 2 // SIDE_RIGHT
    /// Bottom side, usually used for ``Control`` or ``StyleBox``-derived classes.
    case bottom = 3 // SIDE_BOTTOM
}

public enum Corner: Int64 {
    /// Top-left corner.
    case topLeft = 0 // CORNER_TOP_LEFT
    /// Top-right corner.
    case topRight = 1 // CORNER_TOP_RIGHT
    /// Bottom-right corner.
    case bottomRight = 2 // CORNER_BOTTOM_RIGHT
    /// Bottom-left corner.
    case bottomLeft = 3 // CORNER_BOTTOM_LEFT
}

public enum Orientation: Int64 {
    /// General vertical alignment, usually used for ``Separator``, ``ScrollBar``, ``Slider``, etc.
    case vertical = 1 // VERTICAL
    /// General horizontal alignment, usually used for ``Separator``, ``ScrollBar``, ``Slider``, etc.
    case horizontal = 0 // HORIZONTAL
}

public enum ClockDirection: Int64 {
    /// Clockwise rotation. Used by some methods (e.g. ``Image/rotate90(direction:)``).
    case clockwise = 0 // CLOCKWISE
    /// Counter-clockwise rotation. Used by some methods (e.g. ``Image/rotate90(direction:)``).
    case counterclockwise = 1 // COUNTERCLOCKWISE
}

public enum HorizontalAlignment: Int64 {
    /// Horizontal left alignment, usually for text-derived classes.
    case left = 0 // HORIZONTAL_ALIGNMENT_LEFT
    /// Horizontal center alignment, usually for text-derived classes.
    case center = 1 // HORIZONTAL_ALIGNMENT_CENTER
    /// Horizontal right alignment, usually for text-derived classes.
    case right = 2 // HORIZONTAL_ALIGNMENT_RIGHT
    /// Expand row to fit width, usually for text-derived classes.
    case fill = 3 // HORIZONTAL_ALIGNMENT_FILL
}

public enum VerticalAlignment: Int64 {
    /// Vertical top alignment, usually for text-derived classes.
    case top = 0 // VERTICAL_ALIGNMENT_TOP
    /// Vertical center alignment, usually for text-derived classes.
    case center = 1 // VERTICAL_ALIGNMENT_CENTER
    /// Vertical bottom alignment, usually for text-derived classes.
    case bottom = 2 // VERTICAL_ALIGNMENT_BOTTOM
    /// Expand rows to fit height, usually for text-derived classes.
    case fill = 3 // VERTICAL_ALIGNMENT_FILL
}

public enum InlineAlignment: Int64 {
    /// Aligns the center of the inline object (e.g. image, table) to the position of the text specified by `INLINE_ALIGNMENT_TO_*` constant.
    case centerTo = 1 // INLINE_ALIGNMENT_CENTER_TO
    /// Aligns the baseline (user defined) of the inline object (e.g. image, table) to the position of the text specified by `INLINE_ALIGNMENT_TO_*` constant.
    case baselineTo = 3 // INLINE_ALIGNMENT_BASELINE_TO
    /// Aligns the bottom of the inline object (e.g. image, table) to the position of the text specified by `INLINE_ALIGNMENT_TO_*` constant.
    case bottomTo = 2 // INLINE_ALIGNMENT_BOTTOM_TO
    /// Aligns the position of the inline object (e.g. image, table) specified by `INLINE_ALIGNMENT_*_TO` constant to the center of the text.
    case toCenter = 4 // INLINE_ALIGNMENT_TO_CENTER
    /// Aligns the position of the inline object (e.g. image, table) specified by `INLINE_ALIGNMENT_*_TO` constant to the baseline of the text.
    case toBaseline = 8 // INLINE_ALIGNMENT_TO_BASELINE
    /// Aligns inline object (e.g. image, table) to the bottom of the text.
    case toBottom = 12 // INLINE_ALIGNMENT_TO_BOTTOM
    /// Aligns top of the inline object (e.g. image, table) to the top of the text. Equivalent to `INLINE_ALIGNMENT_TOP_TO | INLINE_ALIGNMENT_TO_TOP`.
    case top = 0 // INLINE_ALIGNMENT_TOP
    /// Aligns center of the inline object (e.g. image, table) to the center of the text. Equivalent to `INLINE_ALIGNMENT_CENTER_TO | INLINE_ALIGNMENT_TO_CENTER`.
    case center = 5 // INLINE_ALIGNMENT_CENTER
    /// Aligns bottom of the inline object (e.g. image, table) to the bottom of the text. Equivalent to `INLINE_ALIGNMENT_BOTTOM_TO | INLINE_ALIGNMENT_TO_BOTTOM`.
    case bottom = 14 // INLINE_ALIGNMENT_BOTTOM
}

public enum EulerOrder: Int64 {
    /// Specifies that Euler angles should be in XYZ order. When composing, the order is X, Y, Z. When decomposing, the order is reversed, first Z, then Y, and X last.
    case xyz = 0 // EULER_ORDER_XYZ
    /// Specifies that Euler angles should be in XZY order. When composing, the order is X, Z, Y. When decomposing, the order is reversed, first Y, then Z, and X last.
    case xzy = 1 // EULER_ORDER_XZY
    /// Specifies that Euler angles should be in YXZ order. When composing, the order is Y, X, Z. When decomposing, the order is reversed, first Z, then X, and Y last.
    case yxz = 2 // EULER_ORDER_YXZ
    /// Specifies that Euler angles should be in YZX order. When composing, the order is Y, Z, X. When decomposing, the order is reversed, first X, then Z, and Y last.
    case yzx = 3 // EULER_ORDER_YZX
    /// Specifies that Euler angles should be in ZXY order. When composing, the order is Z, X, Y. When decomposing, the order is reversed, first Y, then X, and Z last.
    case zxy = 4 // EULER_ORDER_ZXY
    /// Specifies that Euler angles should be in ZYX order. When composing, the order is Z, Y, X. When decomposing, the order is reversed, first X, then Y, and Z last.
    case zyx = 5 // EULER_ORDER_ZYX
}

public enum Key: Int64 {
    /// Enum value which doesn't correspond to any key. This is used to initialize ``Key`` properties with a generic state.
    case none = 0 // KEY_NONE
    /// Keycodes with this bit applied are non-printable.
    case special = 4194304 // KEY_SPECIAL
    /// Escape key.
    case escape = 4194305 // KEY_ESCAPE
    /// Tab key.
    case tab = 4194306 // KEY_TAB
    /// Shift + Tab key.
    case backtab = 4194307 // KEY_BACKTAB
    /// Backspace key.
    case backspace = 4194308 // KEY_BACKSPACE
    /// Return key (on the main keyboard).
    case enter = 4194309 // KEY_ENTER
    /// Enter key on the numeric keypad.
    case kpEnter = 4194310 // KEY_KP_ENTER
    /// Insert key.
    case insert = 4194311 // KEY_INSERT
    /// Delete key.
    case delete = 4194312 // KEY_DELETE
    /// Pause key.
    case pause = 4194313 // KEY_PAUSE
    /// Print Screen key.
    case print = 4194314 // KEY_PRINT
    /// System Request key.
    case sysreq = 4194315 // KEY_SYSREQ
    /// Clear key.
    case clear = 4194316 // KEY_CLEAR
    /// Home key.
    case home = 4194317 // KEY_HOME
    /// End key.
    case end = 4194318 // KEY_END
    /// Left arrow key.
    case left = 4194319 // KEY_LEFT
    /// Up arrow key.
    case up = 4194320 // KEY_UP
    /// Right arrow key.
    case right = 4194321 // KEY_RIGHT
    /// Down arrow key.
    case down = 4194322 // KEY_DOWN
    /// Page Up key.
    case pageup = 4194323 // KEY_PAGEUP
    /// Page Down key.
    case pagedown = 4194324 // KEY_PAGEDOWN
    /// Shift key.
    case shift = 4194325 // KEY_SHIFT
    /// Control key.
    case ctrl = 4194326 // KEY_CTRL
    /// Meta key.
    case meta = 4194327 // KEY_META
    /// Alt key.
    case alt = 4194328 // KEY_ALT
    /// Caps Lock key.
    case capslock = 4194329 // KEY_CAPSLOCK
    /// Num Lock key.
    case numlock = 4194330 // KEY_NUMLOCK
    /// Scroll Lock key.
    case scrolllock = 4194331 // KEY_SCROLLLOCK
    /// F1 key.
    case f1 = 4194332 // KEY_F1
    /// F2 key.
    case f2 = 4194333 // KEY_F2
    /// F3 key.
    case f3 = 4194334 // KEY_F3
    /// F4 key.
    case f4 = 4194335 // KEY_F4
    /// F5 key.
    case f5 = 4194336 // KEY_F5
    /// F6 key.
    case f6 = 4194337 // KEY_F6
    /// F7 key.
    case f7 = 4194338 // KEY_F7
    /// F8 key.
    case f8 = 4194339 // KEY_F8
    /// F9 key.
    case f9 = 4194340 // KEY_F9
    /// F10 key.
    case f10 = 4194341 // KEY_F10
    /// F11 key.
    case f11 = 4194342 // KEY_F11
    /// F12 key.
    case f12 = 4194343 // KEY_F12
    /// F13 key.
    case f13 = 4194344 // KEY_F13
    /// F14 key.
    case f14 = 4194345 // KEY_F14
    /// F15 key.
    case f15 = 4194346 // KEY_F15
    /// F16 key.
    case f16 = 4194347 // KEY_F16
    /// F17 key.
    case f17 = 4194348 // KEY_F17
    /// F18 key.
    case f18 = 4194349 // KEY_F18
    /// F19 key.
    case f19 = 4194350 // KEY_F19
    /// F20 key.
    case f20 = 4194351 // KEY_F20
    /// F21 key.
    case f21 = 4194352 // KEY_F21
    /// F22 key.
    case f22 = 4194353 // KEY_F22
    /// F23 key.
    case f23 = 4194354 // KEY_F23
    /// F24 key.
    case f24 = 4194355 // KEY_F24
    /// F25 key. Only supported on macOS and Linux due to a Windows limitation.
    case f25 = 4194356 // KEY_F25
    /// F26 key. Only supported on macOS and Linux due to a Windows limitation.
    case f26 = 4194357 // KEY_F26
    /// F27 key. Only supported on macOS and Linux due to a Windows limitation.
    case f27 = 4194358 // KEY_F27
    /// F28 key. Only supported on macOS and Linux due to a Windows limitation.
    case f28 = 4194359 // KEY_F28
    /// F29 key. Only supported on macOS and Linux due to a Windows limitation.
    case f29 = 4194360 // KEY_F29
    /// F30 key. Only supported on macOS and Linux due to a Windows limitation.
    case f30 = 4194361 // KEY_F30
    /// F31 key. Only supported on macOS and Linux due to a Windows limitation.
    case f31 = 4194362 // KEY_F31
    /// F32 key. Only supported on macOS and Linux due to a Windows limitation.
    case f32 = 4194363 // KEY_F32
    /// F33 key. Only supported on macOS and Linux due to a Windows limitation.
    case f33 = 4194364 // KEY_F33
    /// F34 key. Only supported on macOS and Linux due to a Windows limitation.
    case f34 = 4194365 // KEY_F34
    /// F35 key. Only supported on macOS and Linux due to a Windows limitation.
    case f35 = 4194366 // KEY_F35
    /// Multiply (*) key on the numeric keypad.
    case kpMultiply = 4194433 // KEY_KP_MULTIPLY
    /// Divide (/) key on the numeric keypad.
    case kpDivide = 4194434 // KEY_KP_DIVIDE
    /// Subtract (-) key on the numeric keypad.
    case kpSubtract = 4194435 // KEY_KP_SUBTRACT
    /// Period (.) key on the numeric keypad.
    case kpPeriod = 4194436 // KEY_KP_PERIOD
    /// Add (+) key on the numeric keypad.
    case kpAdd = 4194437 // KEY_KP_ADD
    /// Number 0 on the numeric keypad.
    case kp0 = 4194438 // KEY_KP_0
    /// Number 1 on the numeric keypad.
    case kp1 = 4194439 // KEY_KP_1
    /// Number 2 on the numeric keypad.
    case kp2 = 4194440 // KEY_KP_2
    /// Number 3 on the numeric keypad.
    case kp3 = 4194441 // KEY_KP_3
    /// Number 4 on the numeric keypad.
    case kp4 = 4194442 // KEY_KP_4
    /// Number 5 on the numeric keypad.
    case kp5 = 4194443 // KEY_KP_5
    /// Number 6 on the numeric keypad.
    case kp6 = 4194444 // KEY_KP_6
    /// Number 7 on the numeric keypad.
    case kp7 = 4194445 // KEY_KP_7
    /// Number 8 on the numeric keypad.
    case kp8 = 4194446 // KEY_KP_8
    /// Number 9 on the numeric keypad.
    case kp9 = 4194447 // KEY_KP_9
    /// Context menu key.
    case menu = 4194370 // KEY_MENU
    /// Hyper key. (On Linux/X11 only).
    case hyper = 4194371 // KEY_HYPER
    /// Help key.
    case help = 4194373 // KEY_HELP
    /// Media back key. Not to be confused with the Back button on an Android device.
    case back = 4194376 // KEY_BACK
    /// Media forward key.
    case forward = 4194377 // KEY_FORWARD
    /// Media stop key.
    case stop = 4194378 // KEY_STOP
    /// Media refresh key.
    case refresh = 4194379 // KEY_REFRESH
    /// Volume down key.
    case volumedown = 4194380 // KEY_VOLUMEDOWN
    /// Mute volume key.
    case volumemute = 4194381 // KEY_VOLUMEMUTE
    /// Volume up key.
    case volumeup = 4194382 // KEY_VOLUMEUP
    /// Media play key.
    case mediaplay = 4194388 // KEY_MEDIAPLAY
    /// Media stop key.
    case mediastop = 4194389 // KEY_MEDIASTOP
    /// Previous song key.
    case mediaprevious = 4194390 // KEY_MEDIAPREVIOUS
    /// Next song key.
    case medianext = 4194391 // KEY_MEDIANEXT
    /// Media record key.
    case mediarecord = 4194392 // KEY_MEDIARECORD
    /// Home page key.
    case homepage = 4194393 // KEY_HOMEPAGE
    /// Favorites key.
    case favorites = 4194394 // KEY_FAVORITES
    /// Search key.
    case search = 4194395 // KEY_SEARCH
    /// Standby key.
    case standby = 4194396 // KEY_STANDBY
    /// Open URL / Launch Browser key.
    case openurl = 4194397 // KEY_OPENURL
    /// Launch Mail key.
    case launchmail = 4194398 // KEY_LAUNCHMAIL
    /// Launch Media key.
    case launchmedia = 4194399 // KEY_LAUNCHMEDIA
    /// Launch Shortcut 0 key.
    case launch0 = 4194400 // KEY_LAUNCH0
    /// Launch Shortcut 1 key.
    case launch1 = 4194401 // KEY_LAUNCH1
    /// Launch Shortcut 2 key.
    case launch2 = 4194402 // KEY_LAUNCH2
    /// Launch Shortcut 3 key.
    case launch3 = 4194403 // KEY_LAUNCH3
    /// Launch Shortcut 4 key.
    case launch4 = 4194404 // KEY_LAUNCH4
    /// Launch Shortcut 5 key.
    case launch5 = 4194405 // KEY_LAUNCH5
    /// Launch Shortcut 6 key.
    case launch6 = 4194406 // KEY_LAUNCH6
    /// Launch Shortcut 7 key.
    case launch7 = 4194407 // KEY_LAUNCH7
    /// Launch Shortcut 8 key.
    case launch8 = 4194408 // KEY_LAUNCH8
    /// Launch Shortcut 9 key.
    case launch9 = 4194409 // KEY_LAUNCH9
    /// Launch Shortcut A key.
    case launcha = 4194410 // KEY_LAUNCHA
    /// Launch Shortcut B key.
    case launchb = 4194411 // KEY_LAUNCHB
    /// Launch Shortcut C key.
    case launchc = 4194412 // KEY_LAUNCHC
    /// Launch Shortcut D key.
    case launchd = 4194413 // KEY_LAUNCHD
    /// Launch Shortcut E key.
    case launche = 4194414 // KEY_LAUNCHE
    /// Launch Shortcut F key.
    case launchf = 4194415 // KEY_LAUNCHF
    /// "Globe" key on Mac / iPad keyboard.
    case globe = 4194416 // KEY_GLOBE
    /// "On-screen keyboard" key on iPad keyboard.
    case keyboard = 4194417 // KEY_KEYBOARD
    /// 英数 key on Mac keyboard.
    case jisEisu = 4194418 // KEY_JIS_EISU
    /// かな key on Mac keyboard.
    case jisKana = 4194419 // KEY_JIS_KANA
    /// Unknown key.
    case unknown = 8388607 // KEY_UNKNOWN
    /// Space key.
    case space = 32 // KEY_SPACE
    /// ! key.
    case exclam = 33 // KEY_EXCLAM
    /// " key.
    case quotedbl = 34 // KEY_QUOTEDBL
    /// # key.
    case numbersign = 35 // KEY_NUMBERSIGN
    /// $ key.
    case dollar = 36 // KEY_DOLLAR
    /// % key.
    case percent = 37 // KEY_PERCENT
    /// & key.
    case ampersand = 38 // KEY_AMPERSAND
    /// ' key.
    case apostrophe = 39 // KEY_APOSTROPHE
    /// ( key.
    case parenleft = 40 // KEY_PARENLEFT
    /// ) key.
    case parenright = 41 // KEY_PARENRIGHT
    /// * key.
    case asterisk = 42 // KEY_ASTERISK
    /// + key.
    case plus = 43 // KEY_PLUS
    /// , key.
    case comma = 44 // KEY_COMMA
    /// - key.
    case minus = 45 // KEY_MINUS
    /// . key.
    case period = 46 // KEY_PERIOD
    /// / key.
    case slash = 47 // KEY_SLASH
    /// Number 0 key.
    case key0 = 48 // KEY_0
    /// Number 1 key.
    case key1 = 49 // KEY_1
    /// Number 2 key.
    case key2 = 50 // KEY_2
    /// Number 3 key.
    case key3 = 51 // KEY_3
    /// Number 4 key.
    case key4 = 52 // KEY_4
    /// Number 5 key.
    case key5 = 53 // KEY_5
    /// Number 6 key.
    case key6 = 54 // KEY_6
    /// Number 7 key.
    case key7 = 55 // KEY_7
    /// Number 8 key.
    case key8 = 56 // KEY_8
    /// Number 9 key.
    case key9 = 57 // KEY_9
    /// : key.
    case colon = 58 // KEY_COLON
    /// ; key.
    case semicolon = 59 // KEY_SEMICOLON
    /// < key.
    case less = 60 // KEY_LESS
    /// = key.
    case equal = 61 // KEY_EQUAL
    /// > key.
    case greater = 62 // KEY_GREATER
    /// ? key.
    case question = 63 // KEY_QUESTION
    /// @ key.
    case at = 64 // KEY_AT
    /// A key.
    case a = 65 // KEY_A
    /// B key.
    case b = 66 // KEY_B
    /// C key.
    case c = 67 // KEY_C
    /// D key.
    case d = 68 // KEY_D
    /// E key.
    case e = 69 // KEY_E
    /// F key.
    case f = 70 // KEY_F
    /// G key.
    case g = 71 // KEY_G
    /// H key.
    case h = 72 // KEY_H
    /// I key.
    case i = 73 // KEY_I
    /// J key.
    case j = 74 // KEY_J
    /// K key.
    case k = 75 // KEY_K
    /// L key.
    case l = 76 // KEY_L
    /// M key.
    case m = 77 // KEY_M
    /// N key.
    case n = 78 // KEY_N
    /// O key.
    case o = 79 // KEY_O
    /// P key.
    case p = 80 // KEY_P
    /// Q key.
    case q = 81 // KEY_Q
    /// R key.
    case r = 82 // KEY_R
    /// S key.
    case s = 83 // KEY_S
    /// T key.
    case t = 84 // KEY_T
    /// U key.
    case u = 85 // KEY_U
    /// V key.
    case v = 86 // KEY_V
    /// W key.
    case w = 87 // KEY_W
    /// X key.
    case x = 88 // KEY_X
    /// Y key.
    case y = 89 // KEY_Y
    /// Z key.
    case z = 90 // KEY_Z
    /// [ key.
    case bracketleft = 91 // KEY_BRACKETLEFT
    /// \ key.
    case backslash = 92 // KEY_BACKSLASH
    /// ] key.
    case bracketright = 93 // KEY_BRACKETRIGHT
    /// ^ key.
    case asciicircum = 94 // KEY_ASCIICIRCUM
    /// _ key.
    case underscore = 95 // KEY_UNDERSCORE
    /// ` key.
    case quoteleft = 96 // KEY_QUOTELEFT
    /// { key.
    case braceleft = 123 // KEY_BRACELEFT
    /// | key.
    case bar = 124 // KEY_BAR
    /// } key.
    case braceright = 125 // KEY_BRACERIGHT
    /// ~ key.
    case asciitilde = 126 // KEY_ASCIITILDE
    /// ¥ key.
    case yen = 165 // KEY_YEN
    /// § key.
    case section = 167 // KEY_SECTION
}

public struct KeyModifierMask: OptionSet, CustomDebugStringConvertible {
    public let rawValue: Int64
    public init (rawValue: Int64) {
        self.rawValue = rawValue
    }
    
    /// Key Code mask.
    public static let codeMask = KeyModifierMask (rawValue: 8388607)
    /// Modifier key mask.
    public static let modifierMask = KeyModifierMask (rawValue: 532676608)
    /// Automatically remapped to ``Key/meta`` on macOS and ``Key/ctrl`` on other platforms, this mask is never set in the actual events, and should be used for key mapping only.
    public static let maskCmdOrCtrl = KeyModifierMask (rawValue: 16777216)
    /// Shift key mask.
    public static let maskShift = KeyModifierMask (rawValue: 33554432)
    /// Alt or Option (on macOS) key mask.
    public static let maskAlt = KeyModifierMask (rawValue: 67108864)
    /// Command (on macOS) or Meta/Windows key mask.
    public static let maskMeta = KeyModifierMask (rawValue: 134217728)
    /// Control key mask.
    public static let maskCtrl = KeyModifierMask (rawValue: 268435456)
    /// Keypad key mask.
    public static let maskKpad = KeyModifierMask (rawValue: 536870912)
    /// Group Switch key mask.
    public static let maskGroupSwitch = KeyModifierMask (rawValue: 1073741824)
    /// A textual representation of this instance, suitable for debugging
    public var debugDescription: String {
        var result = ""
        if self.contains (.codeMask) { result += "codeMask, " }
        if self.contains (.modifierMask) { result += "modifierMask, " }
        if self.contains (.maskCmdOrCtrl) { result += "maskCmdOrCtrl, " }
        if self.contains (.maskShift) { result += "maskShift, " }
        if self.contains (.maskAlt) { result += "maskAlt, " }
        if self.contains (.maskMeta) { result += "maskMeta, " }
        if self.contains (.maskCtrl) { result += "maskCtrl, " }
        if self.contains (.maskKpad) { result += "maskKpad, " }
        if self.contains (.maskGroupSwitch) { result += "maskGroupSwitch, " }
        if result.hasSuffix (", ") { result.removeLast (2) }
        return result
    }
    
}

public enum MouseButton: Int64 {
    /// Enum value which doesn't correspond to any mouse button. This is used to initialize ``MouseButton`` properties with a generic state.
    case none = 0 // MOUSE_BUTTON_NONE
    /// Primary mouse button, usually assigned to the left button.
    case left = 1 // MOUSE_BUTTON_LEFT
    /// Secondary mouse button, usually assigned to the right button.
    case right = 2 // MOUSE_BUTTON_RIGHT
    /// Middle mouse button.
    case middle = 3 // MOUSE_BUTTON_MIDDLE
    /// Mouse wheel scrolling up.
    case wheelUp = 4 // MOUSE_BUTTON_WHEEL_UP
    /// Mouse wheel scrolling down.
    case wheelDown = 5 // MOUSE_BUTTON_WHEEL_DOWN
    /// Mouse wheel left button (only present on some mice).
    case wheelLeft = 6 // MOUSE_BUTTON_WHEEL_LEFT
    /// Mouse wheel right button (only present on some mice).
    case wheelRight = 7 // MOUSE_BUTTON_WHEEL_RIGHT
    /// Extra mouse button 1. This is sometimes present, usually to the sides of the mouse.
    case xbutton1 = 8 // MOUSE_BUTTON_XBUTTON1
    /// Extra mouse button 2. This is sometimes present, usually to the sides of the mouse.
    case xbutton2 = 9 // MOUSE_BUTTON_XBUTTON2
}

public struct MouseButtonMask: OptionSet, CustomDebugStringConvertible {
    public let rawValue: Int64
    public init (rawValue: Int64) {
        self.rawValue = rawValue
    }
    
    /// Primary mouse button mask, usually for the left button.
    public static let left = MouseButtonMask (rawValue: 1)
    /// Secondary mouse button mask, usually for the right button.
    public static let right = MouseButtonMask (rawValue: 2)
    /// Middle mouse button mask.
    public static let middle = MouseButtonMask (rawValue: 4)
    /// Extra mouse button 1 mask.
    public static let mbXbutton1 = MouseButtonMask (rawValue: 128)
    /// Extra mouse button 2 mask.
    public static let mbXbutton2 = MouseButtonMask (rawValue: 256)
    /// A textual representation of this instance, suitable for debugging
    public var debugDescription: String {
        var result = ""
        if self.contains (.left) { result += "left, " }
        if self.contains (.right) { result += "right, " }
        if self.contains (.middle) { result += "middle, " }
        if self.contains (.mbXbutton1) { result += "mbXbutton1, " }
        if self.contains (.mbXbutton2) { result += "mbXbutton2, " }
        if result.hasSuffix (", ") { result.removeLast (2) }
        return result
    }
    
}

public enum JoyButton: Int64 {
    /// An invalid game controller button.
    case invalid = -1 // JOY_BUTTON_INVALID
    /// Game controller SDL button A. Corresponds to the bottom action button: Sony Cross, Xbox A, Nintendo B.
    case a = 0 // JOY_BUTTON_A
    /// Game controller SDL button B. Corresponds to the right action button: Sony Circle, Xbox B, Nintendo A.
    case b = 1 // JOY_BUTTON_B
    /// Game controller SDL button X. Corresponds to the left action button: Sony Square, Xbox X, Nintendo Y.
    case x = 2 // JOY_BUTTON_X
    /// Game controller SDL button Y. Corresponds to the top action button: Sony Triangle, Xbox Y, Nintendo X.
    case y = 3 // JOY_BUTTON_Y
    /// Game controller SDL back button. Corresponds to the Sony Select, Xbox Back, Nintendo - button.
    case back = 4 // JOY_BUTTON_BACK
    /// Game controller SDL guide button. Corresponds to the Sony PS, Xbox Home button.
    case guide = 5 // JOY_BUTTON_GUIDE
    /// Game controller SDL start button. Corresponds to the Sony Options, Xbox Menu, Nintendo + button.
    case start = 6 // JOY_BUTTON_START
    /// Game controller SDL left stick button. Corresponds to the Sony L3, Xbox L/LS button.
    case leftStick = 7 // JOY_BUTTON_LEFT_STICK
    /// Game controller SDL right stick button. Corresponds to the Sony R3, Xbox R/RS button.
    case rightStick = 8 // JOY_BUTTON_RIGHT_STICK
    /// Game controller SDL left shoulder button. Corresponds to the Sony L1, Xbox LB button.
    case leftShoulder = 9 // JOY_BUTTON_LEFT_SHOULDER
    /// Game controller SDL right shoulder button. Corresponds to the Sony R1, Xbox RB button.
    case rightShoulder = 10 // JOY_BUTTON_RIGHT_SHOULDER
    /// Game controller D-pad up button.
    case dpadUp = 11 // JOY_BUTTON_DPAD_UP
    /// Game controller D-pad down button.
    case dpadDown = 12 // JOY_BUTTON_DPAD_DOWN
    /// Game controller D-pad left button.
    case dpadLeft = 13 // JOY_BUTTON_DPAD_LEFT
    /// Game controller D-pad right button.
    case dpadRight = 14 // JOY_BUTTON_DPAD_RIGHT
    /// Game controller SDL miscellaneous button. Corresponds to Xbox share button, PS5 microphone button, Nintendo Switch capture button.
    case misc1 = 15 // JOY_BUTTON_MISC1
    /// Game controller SDL paddle 1 button.
    case paddle1 = 16 // JOY_BUTTON_PADDLE1
    /// Game controller SDL paddle 2 button.
    case paddle2 = 17 // JOY_BUTTON_PADDLE2
    /// Game controller SDL paddle 3 button.
    case paddle3 = 18 // JOY_BUTTON_PADDLE3
    /// Game controller SDL paddle 4 button.
    case paddle4 = 19 // JOY_BUTTON_PADDLE4
    /// Game controller SDL touchpad button.
    case touchpad = 20 // JOY_BUTTON_TOUCHPAD
    /// The number of SDL game controller buttons.
    case sdlMax = 21 // JOY_BUTTON_SDL_MAX
    /// The maximum number of game controller buttons supported by the engine. The actual limit may be lower on specific platforms:
    /// 
    /// - **Android:** Up to 36 buttons.
    /// 
    /// - **Linux:** Up to 80 buttons.
    /// 
    /// - **Windows** and **macOS:** Up to 128 buttons.
    /// 
    case max = 128 // JOY_BUTTON_MAX
}

public enum JoyAxis: Int64 {
    /// An invalid game controller axis.
    case invalid = -1 // JOY_AXIS_INVALID
    /// Game controller left joystick x-axis.
    case leftX = 0 // JOY_AXIS_LEFT_X
    /// Game controller left joystick y-axis.
    case leftY = 1 // JOY_AXIS_LEFT_Y
    /// Game controller right joystick x-axis.
    case rightX = 2 // JOY_AXIS_RIGHT_X
    /// Game controller right joystick y-axis.
    case rightY = 3 // JOY_AXIS_RIGHT_Y
    /// Game controller left trigger axis.
    case triggerLeft = 4 // JOY_AXIS_TRIGGER_LEFT
    /// Game controller right trigger axis.
    case triggerRight = 5 // JOY_AXIS_TRIGGER_RIGHT
    /// The number of SDL game controller axes.
    case sdlMax = 6 // JOY_AXIS_SDL_MAX
    /// The maximum number of game controller axes: OpenVR supports up to 5 Joysticks making a total of 10 axes.
    case max = 10 // JOY_AXIS_MAX
}

public enum MIDIMessage: Int64 {
    /// Enum value which doesn't correspond to any MIDI message. This is used to initialize ``MIDIMessage`` properties with a generic state.
    case none = 0 // MIDI_MESSAGE_NONE
    /// MIDI note OFF message. Not all MIDI devices send this event; some send ``MIDIMessage/noteOn`` with zero velocity instead. See the documentation of ``InputEventMIDI`` for information of how to use MIDI inputs.
    case noteOff = 8 // MIDI_MESSAGE_NOTE_OFF
    /// MIDI note ON message. Some MIDI devices send this event with velocity zero instead of ``MIDIMessage/noteOff``, but implementations vary. See the documentation of ``InputEventMIDI`` for information of how to use MIDI inputs.
    case noteOn = 9 // MIDI_MESSAGE_NOTE_ON
    /// MIDI aftertouch message. This message is most often sent by pressing down on the key after it "bottoms out".
    case aftertouch = 10 // MIDI_MESSAGE_AFTERTOUCH
    /// MIDI control change message. This message is sent when a controller value changes. Controllers include devices such as pedals and levers.
    case controlChange = 11 // MIDI_MESSAGE_CONTROL_CHANGE
    /// MIDI program change message. This message sent when the program patch number changes.
    case programChange = 12 // MIDI_MESSAGE_PROGRAM_CHANGE
    /// MIDI channel pressure message. This message is most often sent by pressing down on the key after it "bottoms out". This message is different from polyphonic after-touch as it indicates the highest pressure across all keys.
    case channelPressure = 13 // MIDI_MESSAGE_CHANNEL_PRESSURE
    /// MIDI pitch bend message. This message is sent to indicate a change in the pitch bender (wheel or lever, typically).
    case pitchBend = 14 // MIDI_MESSAGE_PITCH_BEND
    /// MIDI system exclusive message. This has behavior exclusive to the device you're receiving input from. Getting this data is not implemented in Godot.
    case systemExclusive = 240 // MIDI_MESSAGE_SYSTEM_EXCLUSIVE
    /// MIDI quarter frame message. Contains timing information that is used to synchronize MIDI devices. Getting this data is not implemented in Godot.
    case quarterFrame = 241 // MIDI_MESSAGE_QUARTER_FRAME
    /// MIDI song position pointer message. Gives the number of 16th notes since the start of the song. Getting this data is not implemented in Godot.
    case songPositionPointer = 242 // MIDI_MESSAGE_SONG_POSITION_POINTER
    /// MIDI song select message. Specifies which sequence or song is to be played. Getting this data is not implemented in Godot.
    case songSelect = 243 // MIDI_MESSAGE_SONG_SELECT
    /// MIDI tune request message. Upon receiving a tune request, all analog synthesizers should tune their oscillators.
    case tuneRequest = 246 // MIDI_MESSAGE_TUNE_REQUEST
    /// MIDI timing clock message. Sent 24 times per quarter note when synchronization is required.
    case timingClock = 248 // MIDI_MESSAGE_TIMING_CLOCK
    /// MIDI start message. Start the current sequence playing. This message will be followed with Timing Clocks.
    case start = 250 // MIDI_MESSAGE_START
    /// MIDI continue message. Continue at the point the sequence was stopped.
    case `continue` = 251 // MIDI_MESSAGE_CONTINUE
    /// MIDI stop message. Stop the current sequence.
    case stop = 252 // MIDI_MESSAGE_STOP
    /// MIDI active sensing message. This message is intended to be sent repeatedly to tell the receiver that a connection is alive.
    case activeSensing = 254 // MIDI_MESSAGE_ACTIVE_SENSING
    /// MIDI system reset message. Reset all receivers in the system to power-up status. It should not be sent on power-up itself.
    case systemReset = 255 // MIDI_MESSAGE_SYSTEM_RESET
}

public enum GodotError: Int64 {
    /// Methods that return ``GodotError`` return ``GodotError/ok`` when no error occurred.
    /// 
    /// Since ``GodotError/ok`` has value 0, and all other error constants are positive integers, it can also be used in boolean checks.
    /// 
    /// **Example:**
    /// 
    /// > Note: Many functions do not return an error code, but will print error messages to standard output.
    /// 
    case ok = 0 // OK
    /// Generic error.
    case failed = 1 // FAILED
    /// Unavailable error.
    case errUnavailable = 2 // ERR_UNAVAILABLE
    /// Unconfigured error.
    case errUnconfigured = 3 // ERR_UNCONFIGURED
    /// Unauthorized error.
    case errUnauthorized = 4 // ERR_UNAUTHORIZED
    /// Parameter range error.
    case errParameterRangeError = 5 // ERR_PARAMETER_RANGE_ERROR
    /// Out of memory (OOM) error.
    case errOutOfMemory = 6 // ERR_OUT_OF_MEMORY
    /// File: Not found error.
    case errFileNotFound = 7 // ERR_FILE_NOT_FOUND
    /// File: Bad drive error.
    case errFileBadDrive = 8 // ERR_FILE_BAD_DRIVE
    /// File: Bad path error.
    case errFileBadPath = 9 // ERR_FILE_BAD_PATH
    /// File: No permission error.
    case errFileNoPermission = 10 // ERR_FILE_NO_PERMISSION
    /// File: Already in use error.
    case errFileAlreadyInUse = 11 // ERR_FILE_ALREADY_IN_USE
    /// File: Can't open error.
    case errFileCantOpen = 12 // ERR_FILE_CANT_OPEN
    /// File: Can't write error.
    case errFileCantWrite = 13 // ERR_FILE_CANT_WRITE
    /// File: Can't read error.
    case errFileCantRead = 14 // ERR_FILE_CANT_READ
    /// File: Unrecognized error.
    case errFileUnrecognized = 15 // ERR_FILE_UNRECOGNIZED
    /// File: Corrupt error.
    case errFileCorrupt = 16 // ERR_FILE_CORRUPT
    /// File: Missing dependencies error.
    case errFileMissingDependencies = 17 // ERR_FILE_MISSING_DEPENDENCIES
    /// File: End of file (EOF) error.
    case errFileEof = 18 // ERR_FILE_EOF
    /// Can't open error.
    case errCantOpen = 19 // ERR_CANT_OPEN
    /// Can't create error.
    case errCantCreate = 20 // ERR_CANT_CREATE
    /// Query failed error.
    case errQueryFailed = 21 // ERR_QUERY_FAILED
    /// Already in use error.
    case errAlreadyInUse = 22 // ERR_ALREADY_IN_USE
    /// Locked error.
    case errLocked = 23 // ERR_LOCKED
    /// Timeout error.
    case errTimeout = 24 // ERR_TIMEOUT
    /// Can't connect error.
    case errCantConnect = 25 // ERR_CANT_CONNECT
    /// Can't resolve error.
    case errCantResolve = 26 // ERR_CANT_RESOLVE
    /// Connection error.
    case errConnectionError = 27 // ERR_CONNECTION_ERROR
    /// Can't acquire resource error.
    case errCantAcquireResource = 28 // ERR_CANT_ACQUIRE_RESOURCE
    /// Can't fork process error.
    case errCantFork = 29 // ERR_CANT_FORK
    /// Invalid data error.
    case errInvalidData = 30 // ERR_INVALID_DATA
    /// Invalid parameter error.
    case errInvalidParameter = 31 // ERR_INVALID_PARAMETER
    /// Already exists error.
    case errAlreadyExists = 32 // ERR_ALREADY_EXISTS
    /// Does not exist error.
    case errDoesNotExist = 33 // ERR_DOES_NOT_EXIST
    /// Database: Read error.
    case errDatabaseCantRead = 34 // ERR_DATABASE_CANT_READ
    /// Database: Write error.
    case errDatabaseCantWrite = 35 // ERR_DATABASE_CANT_WRITE
    /// Compilation failed error.
    case errCompilationFailed = 36 // ERR_COMPILATION_FAILED
    /// Method not found error.
    case errMethodNotFound = 37 // ERR_METHOD_NOT_FOUND
    /// Linking failed error.
    case errLinkFailed = 38 // ERR_LINK_FAILED
    /// Script failed error.
    case errScriptFailed = 39 // ERR_SCRIPT_FAILED
    /// Cycling link (import cycle) error.
    case errCyclicLink = 40 // ERR_CYCLIC_LINK
    /// Invalid declaration error.
    case errInvalidDeclaration = 41 // ERR_INVALID_DECLARATION
    /// Duplicate symbol error.
    case errDuplicateSymbol = 42 // ERR_DUPLICATE_SYMBOL
    /// Parse error.
    case errParseError = 43 // ERR_PARSE_ERROR
    /// Busy error.
    case errBusy = 44 // ERR_BUSY
    /// Skip error.
    case errSkip = 45 // ERR_SKIP
    /// Help error. Used internally when passing `--version` or `--help` as executable options.
    case errHelp = 46 // ERR_HELP
    /// Bug error, caused by an implementation issue in the method.
    /// 
    /// > Note: If a built-in method returns this code, please open an issue on [url=https://github.com/godotengine/godot/issues]the GitHub Issue Tracker[/url].
    /// 
    case errBug = 47 // ERR_BUG
    /// Printer on fire error (This is an easter egg, no built-in methods return this error code).
    case errPrinterOnFire = 48 // ERR_PRINTER_ON_FIRE
}

public enum PropertyHint: Int64 {
    /// The property has no hint for the editor.
    case none = 0 // PROPERTY_HINT_NONE
    /// Hints that an integer or float property should be within a range specified via the hint string `"min,max"` or `"min,max,step"`. The hint string can optionally include `"or_greater"` and/or `"or_less"` to allow manual input going respectively above the max or below the min values.
    /// 
    /// **Example:** `"-360,360,1,or_greater,or_less"`.
    /// 
    /// Additionally, other keywords can be included: `"exp"` for exponential range editing, `"radians_as_degrees"` for editing radian angles in degrees (the range values are also in degrees), `"degrees"` to hint at an angle and `"hide_slider"` to hide the slider.
    /// 
    case range = 1 // PROPERTY_HINT_RANGE
    /// Hints that an integer or ``String`` property is an enumerated value to pick in a list specified via a hint string.
    /// 
    /// The hint string is a comma separated list of names such as `"Hello,Something,Else"`. Whitespaces are **not** removed from either end of a name. For integer properties, the first name in the list has value 0, the next 1, and so on. Explicit values can also be specified by appending `:integer` to the name, e.g. `"Zero,One,Three:3,Four,Six:6"`.
    /// 
    case `enum` = 2 // PROPERTY_HINT_ENUM
    /// Hints that a ``String`` property can be an enumerated value to pick in a list specified via a hint string such as `"Hello,Something,Else"`.
    /// 
    /// Unlike ``PropertyHint/`enum```, a property with this hint still accepts arbitrary values and can be empty. The list of values serves to suggest possible values.
    /// 
    case enumSuggestion = 3 // PROPERTY_HINT_ENUM_SUGGESTION
    /// Hints that a float property should be edited via an exponential easing function. The hint string can include `"attenuation"` to flip the curve horizontally and/or `"positive_only"` to exclude in/out easing and limit values to be greater than or equal to zero.
    case expEasing = 4 // PROPERTY_HINT_EXP_EASING
    /// Hints that a vector property should allow its components to be linked. For example, this allows ``Vector2/x`` and ``Vector2/y`` to be edited together.
    case link = 5 // PROPERTY_HINT_LINK
    /// Hints that an integer property is a bitmask with named bit flags.
    /// 
    /// The hint string is a comma separated list of names such as `"Bit0,Bit1,Bit2,Bit3"`. Whitespaces are **not** removed from either end of a name. The first name in the list has value 1, the next 2, then 4, 8, 16 and so on. Explicit values can also be specified by appending `:integer` to the name, e.g. `"A:4,B:8,C:16"`. You can also combine several flags (`"A:4,B:8,AB:12,C:16"`).
    /// 
    /// > Note: A flag value must be at least `1` and at most `2 ** 32 - 1`.
    /// 
    /// > Note: Unlike ``PropertyHint/`enum```, the previous explicit value is not taken into account. For the hint `"A:16,B,C"`, A is 16, B is 2, C is 4.
    /// 
    case flags = 6 // PROPERTY_HINT_FLAGS
    /// Hints that an integer property is a bitmask using the optionally named 2D render layers.
    case layers2dRender = 7 // PROPERTY_HINT_LAYERS_2D_RENDER
    /// Hints that an integer property is a bitmask using the optionally named 2D physics layers.
    case layers2dPhysics = 8 // PROPERTY_HINT_LAYERS_2D_PHYSICS
    /// Hints that an integer property is a bitmask using the optionally named 2D navigation layers.
    case layers2dNavigation = 9 // PROPERTY_HINT_LAYERS_2D_NAVIGATION
    /// Hints that an integer property is a bitmask using the optionally named 3D render layers.
    case layers3dRender = 10 // PROPERTY_HINT_LAYERS_3D_RENDER
    /// Hints that an integer property is a bitmask using the optionally named 3D physics layers.
    case layers3dPhysics = 11 // PROPERTY_HINT_LAYERS_3D_PHYSICS
    /// Hints that an integer property is a bitmask using the optionally named 3D navigation layers.
    case layers3dNavigation = 12 // PROPERTY_HINT_LAYERS_3D_NAVIGATION
    /// Hints that an integer property is a bitmask using the optionally named avoidance layers.
    case layersAvoidance = 37 // PROPERTY_HINT_LAYERS_AVOIDANCE
    /// Hints that a ``String`` property is a path to a file. Editing it will show a file dialog for picking the path. The hint string can be a set of filters with wildcards like `"*.png,*.jpg"`.
    case file = 13 // PROPERTY_HINT_FILE
    /// Hints that a ``String`` property is a path to a directory. Editing it will show a file dialog for picking the path.
    case dir = 14 // PROPERTY_HINT_DIR
    /// Hints that a ``String`` property is an absolute path to a file outside the project folder. Editing it will show a file dialog for picking the path. The hint string can be a set of filters with wildcards, like `"*.png,*.jpg"`.
    case globalFile = 15 // PROPERTY_HINT_GLOBAL_FILE
    /// Hints that a ``String`` property is an absolute path to a directory outside the project folder. Editing it will show a file dialog for picking the path.
    case globalDir = 16 // PROPERTY_HINT_GLOBAL_DIR
    /// Hints that a property is an instance of a ``Resource``-derived type, optionally specified via the hint string (e.g. `"Texture2D"`). Editing it will show a popup menu of valid resource types to instantiate.
    case resourceType = 17 // PROPERTY_HINT_RESOURCE_TYPE
    /// Hints that a ``String`` property is text with line breaks. Editing it will show a text input field where line breaks can be typed.
    case multilineText = 18 // PROPERTY_HINT_MULTILINE_TEXT
    /// Hints that a ``String`` property is an ``Expression``.
    case expression = 19 // PROPERTY_HINT_EXPRESSION
    /// Hints that a ``String`` property should show a placeholder text on its input field, if empty. The hint string is the placeholder text to use.
    case placeholderText = 20 // PROPERTY_HINT_PLACEHOLDER_TEXT
    /// Hints that a ``Color`` property should be edited without affecting its transparency (``Color/a`` is not editable).
    case colorNoAlpha = 21 // PROPERTY_HINT_COLOR_NO_ALPHA
    /// Hints that the property's value is an object encoded as object ID, with its type specified in the hint string. Used by the debugger.
    case objectId = 22 // PROPERTY_HINT_OBJECT_ID
    /// If a property is ``String``, hints that the property represents a particular type (class). This allows to select a type from the create dialog. The property will store the selected type as a string.
    /// 
    /// If a property is ``GArray``, hints the editor how to show elements. The `hint_string` must encode nested types using `":"` and `"/"`.
    /// 
    /// Examples:
    /// 
    /// > Note: The trailing colon is required for properly detecting built-in types.
    /// 
    case typeString = 23 // PROPERTY_HINT_TYPE_STRING
    /// _Deprecated._ This hint is not used anywhere and will be removed in the future.
    case nodePathToEditedNode = 24 // PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE
    /// Hints that an object is too big to be sent via the debugger.
    case objectTooBig = 25 // PROPERTY_HINT_OBJECT_TOO_BIG
    /// Hints that the hint string specifies valid node types for property of type ``NodePath``.
    case nodePathValidTypes = 26 // PROPERTY_HINT_NODE_PATH_VALID_TYPES
    /// Hints that a ``String`` property is a path to a file. Editing it will show a file dialog for picking the path for the file to be saved at. The dialog has access to the project's directory. The hint string can be a set of filters with wildcards like `"*.png,*.jpg"`. See also ``FileDialog/filters``.
    case saveFile = 27 // PROPERTY_HINT_SAVE_FILE
    /// Hints that a ``String`` property is a path to a file. Editing it will show a file dialog for picking the path for the file to be saved at. The dialog has access to the entire filesystem. The hint string can be a set of filters with wildcards like `"*.png,*.jpg"`. See also ``FileDialog/filters``.
    case globalSaveFile = 28 // PROPERTY_HINT_GLOBAL_SAVE_FILE
    /// Hints that an integer property is an object ID.
    /// 
    /// _Deprecated._ This hint is not used anywhere and will be removed in the future.
    /// 
    case intIsObjectid = 29 // PROPERTY_HINT_INT_IS_OBJECTID
    /// Hints that an integer property is a pointer. Used by GDExtension.
    case intIsPointer = 30 // PROPERTY_HINT_INT_IS_POINTER
    /// Hints that a property is an ``GArray`` with the stored type specified in the hint string.
    case arrayType = 31 // PROPERTY_HINT_ARRAY_TYPE
    /// Hints that a string property is a locale code. Editing it will show a locale dialog for picking language and country.
    case localeId = 32 // PROPERTY_HINT_LOCALE_ID
    /// Hints that a dictionary property is string translation map. Dictionary keys are locale codes and, values are translated strings.
    case localizableString = 33 // PROPERTY_HINT_LOCALIZABLE_STRING
    /// Hints that a property is an instance of a ``Node``-derived type, optionally specified via the hint string (e.g. `"Node2D"`). Editing it will show a dialog for picking a node from the scene.
    case nodeType = 34 // PROPERTY_HINT_NODE_TYPE
    /// Hints that a quaternion property should disable the temporary euler editor.
    case hideQuaternionEdit = 35 // PROPERTY_HINT_HIDE_QUATERNION_EDIT
    /// Hints that a string property is a password, and every character is replaced with the secret character.
    case password = 36 // PROPERTY_HINT_PASSWORD
    /// Represents the size of the ``PropertyHint`` enum.
    case max = 38 // PROPERTY_HINT_MAX
}

public struct PropertyUsageFlags: OptionSet, CustomDebugStringConvertible {
    public let rawValue: Int64
    public init (rawValue: Int64) {
        self.rawValue = rawValue
    }
    
    /// The property is serialized and saved in the scene file (default).
    public static let storage = PropertyUsageFlags (rawValue: 2)
    /// The property is shown in the ``EditorInspector`` (default).
    public static let editor = PropertyUsageFlags (rawValue: 4)
    /// The property is excluded from the class reference.
    public static let `internal` = PropertyUsageFlags (rawValue: 8)
    /// The property can be checked in the ``EditorInspector``.
    public static let checkable = PropertyUsageFlags (rawValue: 16)
    /// The property is checked in the ``EditorInspector``.
    public static let checked = PropertyUsageFlags (rawValue: 32)
    /// Used to group properties together in the editor. See ``EditorInspector``.
    public static let group = PropertyUsageFlags (rawValue: 64)
    /// Used to categorize properties together in the editor.
    public static let category = PropertyUsageFlags (rawValue: 128)
    /// Used to group properties together in the editor in a subgroup (under a group). See ``EditorInspector``.
    public static let subgroup = PropertyUsageFlags (rawValue: 256)
    /// The property is a bitfield, i.e. it contains multiple flags represented as bits.
    public static let classIsBitfield = PropertyUsageFlags (rawValue: 512)
    /// The property does not save its state in ``PackedScene``.
    public static let noInstanceState = PropertyUsageFlags (rawValue: 1024)
    /// Editing the property prompts the user for restarting the editor.
    public static let restartIfChanged = PropertyUsageFlags (rawValue: 2048)
    /// The property is a script variable which should be serialized and saved in the scene file.
    public static let scriptVariable = PropertyUsageFlags (rawValue: 4096)
    /// The property value of type ``Object`` will be stored even if its value is `null`.
    public static let storeIfNull = PropertyUsageFlags (rawValue: 8192)
    /// If this property is modified, all inspector fields will be refreshed.
    public static let updateAllIfModified = PropertyUsageFlags (rawValue: 16384)
    /// Signifies a default value from a placeholder script instance.
    /// 
    /// _Deprecated._ This hint is not used anywhere and will be removed in the future.
    /// 
    public static let scriptDefaultValue = PropertyUsageFlags (rawValue: 32768)
    /// The property is an enum, i.e. it only takes named integer constants from its associated enumeration.
    public static let classIsEnum = PropertyUsageFlags (rawValue: 65536)
    /// If property has `nil` as default value, its type will be ``Variant``.
    public static let nilIsVariant = PropertyUsageFlags (rawValue: 131072)
    /// The property is an array.
    public static let array = PropertyUsageFlags (rawValue: 262144)
    /// When duplicating a resource with ``Resource/duplicate(subresources:)``, and this flag is set on a property of that resource, the property should always be duplicated, regardless of the `subresources` bool parameter.
    public static let alwaysDuplicate = PropertyUsageFlags (rawValue: 524288)
    /// When duplicating a resource with ``Resource/duplicate(subresources:)``, and this flag is set on a property of that resource, the property should never be duplicated, regardless of the `subresources` bool parameter.
    public static let neverDuplicate = PropertyUsageFlags (rawValue: 1048576)
    /// The property is only shown in the editor if modern renderers are supported (the Compatibility rendering method is excluded).
    public static let highEndGfx = PropertyUsageFlags (rawValue: 2097152)
    /// The ``NodePath`` property will always be relative to the scene's root. Mostly useful for local resources.
    public static let nodePathFromSceneRoot = PropertyUsageFlags (rawValue: 4194304)
    /// Use when a resource is created on the fly, i.e. the getter will always return a different instance. ``ResourceSaver`` needs this information to properly save such resources.
    public static let resourceNotPersistent = PropertyUsageFlags (rawValue: 8388608)
    /// Inserting an animation key frame of this property will automatically increment the value, allowing to easily keyframe multiple values in a row.
    public static let keyingIncrements = PropertyUsageFlags (rawValue: 16777216)
    /// When loading, the resource for this property can be set at the end of loading.
    /// 
    /// _Deprecated._ This hint is not used anywhere and will be removed in the future.
    /// 
    public static let deferredSetResource = PropertyUsageFlags (rawValue: 33554432)
    /// When this property is a ``Resource`` and base object is a ``Node``, a resource instance will be automatically created whenever the node is created in the editor.
    public static let editorInstantiateObject = PropertyUsageFlags (rawValue: 67108864)
    /// The property is considered a basic setting and will appear even when advanced mode is disabled. Used for project settings.
    public static let editorBasicSetting = PropertyUsageFlags (rawValue: 134217728)
    /// The property is read-only in the ``EditorInspector``.
    public static let readOnly = PropertyUsageFlags (rawValue: 268435456)
    /// An export preset property with this flag contains confidential information and is stored separately from the rest of the export preset configuration.
    public static let secret = PropertyUsageFlags (rawValue: 536870912)
    /// Default usage (storage and editor).
    public static let `default` = PropertyUsageFlags (rawValue: 6)
    /// Default usage but without showing the property in the editor (storage).
    public static let noEditor = PropertyUsageFlags (rawValue: 2)
    /// A textual representation of this instance, suitable for debugging
    public var debugDescription: String {
        var result = ""
        if self.contains (.storage) { result += "storage, " }
        if self.contains (.editor) { result += "editor, " }
        if self.contains (.`internal`) { result += "`internal`, " }
        if self.contains (.checkable) { result += "checkable, " }
        if self.contains (.checked) { result += "checked, " }
        if self.contains (.group) { result += "group, " }
        if self.contains (.category) { result += "category, " }
        if self.contains (.subgroup) { result += "subgroup, " }
        if self.contains (.classIsBitfield) { result += "classIsBitfield, " }
        if self.contains (.noInstanceState) { result += "noInstanceState, " }
        if self.contains (.restartIfChanged) { result += "restartIfChanged, " }
        if self.contains (.scriptVariable) { result += "scriptVariable, " }
        if self.contains (.storeIfNull) { result += "storeIfNull, " }
        if self.contains (.updateAllIfModified) { result += "updateAllIfModified, " }
        if self.contains (.scriptDefaultValue) { result += "scriptDefaultValue, " }
        if self.contains (.classIsEnum) { result += "classIsEnum, " }
        if self.contains (.nilIsVariant) { result += "nilIsVariant, " }
        if self.contains (.array) { result += "array, " }
        if self.contains (.alwaysDuplicate) { result += "alwaysDuplicate, " }
        if self.contains (.neverDuplicate) { result += "neverDuplicate, " }
        if self.contains (.highEndGfx) { result += "highEndGfx, " }
        if self.contains (.nodePathFromSceneRoot) { result += "nodePathFromSceneRoot, " }
        if self.contains (.resourceNotPersistent) { result += "resourceNotPersistent, " }
        if self.contains (.keyingIncrements) { result += "keyingIncrements, " }
        if self.contains (.deferredSetResource) { result += "deferredSetResource, " }
        if self.contains (.editorInstantiateObject) { result += "editorInstantiateObject, " }
        if self.contains (.editorBasicSetting) { result += "editorBasicSetting, " }
        if self.contains (.readOnly) { result += "readOnly, " }
        if self.contains (.secret) { result += "secret, " }
        if self.contains (.`default`) { result += "`default`, " }
        if self.contains (.noEditor) { result += "noEditor, " }
        if result.hasSuffix (", ") { result.removeLast (2) }
        return result
    }
    
}

public struct MethodFlags: OptionSet, CustomDebugStringConvertible {
    public let rawValue: Int64
    public init (rawValue: Int64) {
        self.rawValue = rawValue
    }
    
    /// Flag for a normal method.
    public static let normal = MethodFlags (rawValue: 1)
    /// Flag for an editor method.
    public static let editor = MethodFlags (rawValue: 2)
    /// Flag for a constant method.
    public static let const = MethodFlags (rawValue: 4)
    /// Flag for a virtual method.
    public static let virtual = MethodFlags (rawValue: 8)
    /// Flag for a method with a variable number of arguments.
    public static let vararg = MethodFlags (rawValue: 16)
    /// Flag for a static method.
    public static let `static` = MethodFlags (rawValue: 32)
    /// Used internally. Allows to not dump core virtual methods (such as ``Object/_notification()``) to the JSON API.
    public static let objectCore = MethodFlags (rawValue: 64)
    /// Default method flags (normal).
    public static let `default` = MethodFlags (rawValue: 1)
    /// A textual representation of this instance, suitable for debugging
    public var debugDescription: String {
        var result = ""
        if self.contains (.normal) { result += "normal, " }
        if self.contains (.editor) { result += "editor, " }
        if self.contains (.const) { result += "const, " }
        if self.contains (.virtual) { result += "virtual, " }
        if self.contains (.vararg) { result += "vararg, " }
        if self.contains (.`static`) { result += "`static`, " }
        if self.contains (.objectCore) { result += "objectCore, " }
        if self.contains (.`default`) { result += "`default`, " }
        if result.hasSuffix (", ") { result.removeLast (2) }
        return result
    }
    
}

extension Variant {
    public enum GType: Int64 {
        /// Variable is `null`.
        case `nil` = 0 // TYPE_NIL
        /// Variable is of type [bool].
        case bool = 1 // TYPE_BOOL
        /// Variable is of type integer.
        case int = 2 // TYPE_INT
        /// Variable is of type float.
        case float = 3 // TYPE_FLOAT
        /// Variable is of type ``String``.
        case string = 4 // TYPE_STRING
        /// Variable is of type ``Vector2``.
        case vector2 = 5 // TYPE_VECTOR2
        /// Variable is of type ``Vector2i``.
        case vector2i = 6 // TYPE_VECTOR2I
        /// Variable is of type ``Rect2``.
        case rect2 = 7 // TYPE_RECT2
        /// Variable is of type ``Rect2i``.
        case rect2i = 8 // TYPE_RECT2I
        /// Variable is of type ``Vector3``.
        case vector3 = 9 // TYPE_VECTOR3
        /// Variable is of type ``Vector3i``.
        case vector3i = 10 // TYPE_VECTOR3I
        /// Variable is of type ``Transform2D``.
        case transform2d = 11 // TYPE_TRANSFORM2D
        /// Variable is of type ``Vector4``.
        case vector4 = 12 // TYPE_VECTOR4
        /// Variable is of type ``Vector4i``.
        case vector4i = 13 // TYPE_VECTOR4I
        /// Variable is of type ``Plane``.
        case plane = 14 // TYPE_PLANE
        /// Variable is of type ``Quaternion``.
        case quaternion = 15 // TYPE_QUATERNION
        /// Variable is of type ``AABB``.
        case aabb = 16 // TYPE_AABB
        /// Variable is of type ``Basis``.
        case basis = 17 // TYPE_BASIS
        /// Variable is of type ``Transform3D``.
        case transform3d = 18 // TYPE_TRANSFORM3D
        /// Variable is of type ``Projection``.
        case projection = 19 // TYPE_PROJECTION
        /// Variable is of type ``Color``.
        case color = 20 // TYPE_COLOR
        /// Variable is of type ``StringName``.
        case stringName = 21 // TYPE_STRING_NAME
        /// Variable is of type ``NodePath``.
        case nodePath = 22 // TYPE_NODE_PATH
        /// Variable is of type ``RID``.
        case rid = 23 // TYPE_RID
        /// Variable is of type ``Object``.
        case object = 24 // TYPE_OBJECT
        /// Variable is of type ``Callable``.
        case callable = 25 // TYPE_CALLABLE
        /// Variable is of type ``Signal``.
        case signal = 26 // TYPE_SIGNAL
        /// Variable is of type ``GDictionary``.
        case dictionary = 27 // TYPE_DICTIONARY
        /// Variable is of type ``GArray``.
        case array = 28 // TYPE_ARRAY
        /// Variable is of type ``PackedByteArray``.
        case packedByteArray = 29 // TYPE_PACKED_BYTE_ARRAY
        /// Variable is of type ``PackedInt32Array``.
        case packedInt32Array = 30 // TYPE_PACKED_INT32_ARRAY
        /// Variable is of type ``PackedInt64Array``.
        case packedInt64Array = 31 // TYPE_PACKED_INT64_ARRAY
        /// Variable is of type ``PackedFloat32Array``.
        case packedFloat32Array = 32 // TYPE_PACKED_FLOAT32_ARRAY
        /// Variable is of type ``PackedFloat64Array``.
        case packedFloat64Array = 33 // TYPE_PACKED_FLOAT64_ARRAY
        /// Variable is of type ``PackedStringArray``.
        case packedStringArray = 34 // TYPE_PACKED_STRING_ARRAY
        /// Variable is of type ``PackedVector2Array``.
        case packedVector2Array = 35 // TYPE_PACKED_VECTOR2_ARRAY
        /// Variable is of type ``PackedVector3Array``.
        case packedVector3Array = 36 // TYPE_PACKED_VECTOR3_ARRAY
        /// Variable is of type ``PackedColorArray``.
        case packedColorArray = 37 // TYPE_PACKED_COLOR_ARRAY
        /// Represents the size of the ``Variant.GType`` enum.
        case max = 38 // TYPE_MAX
    }
    
}

extension Variant {
    public enum Operator: Int64 {
        /// Equality operator (`==`).
        case equal = 0 // OP_EQUAL
        /// Inequality operator (`!=`).
        case notEqual = 1 // OP_NOT_EQUAL
        /// Less than operator (`<`).
        case less = 2 // OP_LESS
        /// Less than or equal operator (`<=`).
        case lessEqual = 3 // OP_LESS_EQUAL
        /// Greater than operator (`>`).
        case greater = 4 // OP_GREATER
        /// Greater than or equal operator (`>=`).
        case greaterEqual = 5 // OP_GREATER_EQUAL
        /// Addition operator (`+`).
        case add = 6 // OP_ADD
        /// Subtraction operator (`-`).
        case subtract = 7 // OP_SUBTRACT
        /// Multiplication operator (`*`).
        case multiply = 8 // OP_MULTIPLY
        /// Division operator (`/`).
        case divide = 9 // OP_DIVIDE
        /// Unary negation operator (`-`).
        case negate = 10 // OP_NEGATE
        /// Unary plus operator (`+`).
        case positive = 11 // OP_POSITIVE
        /// Remainder/modulo operator (`%`).
        case module = 12 // OP_MODULE
        /// Power operator (`**`).
        case power = 13 // OP_POWER
        /// Left shift operator (`<<`).
        case shiftLeft = 14 // OP_SHIFT_LEFT
        /// Right shift operator (`>>`).
        case shiftRight = 15 // OP_SHIFT_RIGHT
        /// Bitwise AND operator (`&`).
        case bitAnd = 16 // OP_BIT_AND
        /// Bitwise OR operator (`|`).
        case bitOr = 17 // OP_BIT_OR
        /// Bitwise XOR operator (`^`).
        case bitXor = 18 // OP_BIT_XOR
        /// Bitwise NOT operator (`~`).
        case bitNegate = 19 // OP_BIT_NEGATE
        /// Logical AND operator (`and` or `&&`).
        case and = 20 // OP_AND
        /// Logical OR operator (`or` or `||`).
        case or = 21 // OP_OR
        /// Logical XOR operator (not implemented in GDScript).
        case xor = 22 // OP_XOR
        /// Logical NOT operator (`not` or `!`).
        case not = 23 // OP_NOT
        /// Logical IN operator (`in`).
        case `in` = 24 // OP_IN
        /// Represents the size of the ``Variant.Operator`` enum.
        case max = 25 // OP_MAX
    }
    
}

var godotFrameworkCtors = [
    "AESContext": AESContext.self, //(nativeHandle:),
    "AStar2D": AStar2D.self, //(nativeHandle:),
    "AStar3D": AStar3D.self, //(nativeHandle:),
    "AStarGrid2D": AStarGrid2D.self, //(nativeHandle:),
    "AcceptDialog": AcceptDialog.self, //(nativeHandle:),
    "AnimatableBody2D": AnimatableBody2D.self, //(nativeHandle:),
    "AnimatableBody3D": AnimatableBody3D.self, //(nativeHandle:),
    "AnimatedSprite2D": AnimatedSprite2D.self, //(nativeHandle:),
    "AnimatedSprite3D": AnimatedSprite3D.self, //(nativeHandle:),
    "AnimatedTexture": AnimatedTexture.self, //(nativeHandle:),
    "Animation": Animation.self, //(nativeHandle:),
    "AnimationLibrary": AnimationLibrary.self, //(nativeHandle:),
    "AnimationMixer": AnimationMixer.self, //(nativeHandle:),
    "AnimationNode": AnimationNode.self, //(nativeHandle:),
    "AnimationNodeAdd2": AnimationNodeAdd2.self, //(nativeHandle:),
    "AnimationNodeAdd3": AnimationNodeAdd3.self, //(nativeHandle:),
    "AnimationNodeAnimation": AnimationNodeAnimation.self, //(nativeHandle:),
    "AnimationNodeBlend2": AnimationNodeBlend2.self, //(nativeHandle:),
    "AnimationNodeBlend3": AnimationNodeBlend3.self, //(nativeHandle:),
    "AnimationNodeBlendSpace1D": AnimationNodeBlendSpace1D.self, //(nativeHandle:),
    "AnimationNodeBlendSpace2D": AnimationNodeBlendSpace2D.self, //(nativeHandle:),
    "AnimationNodeBlendTree": AnimationNodeBlendTree.self, //(nativeHandle:),
    "AnimationNodeOneShot": AnimationNodeOneShot.self, //(nativeHandle:),
    "AnimationNodeOutput": AnimationNodeOutput.self, //(nativeHandle:),
    "AnimationNodeStateMachine": AnimationNodeStateMachine.self, //(nativeHandle:),
    "AnimationNodeStateMachinePlayback": AnimationNodeStateMachinePlayback.self, //(nativeHandle:),
    "AnimationNodeStateMachineTransition": AnimationNodeStateMachineTransition.self, //(nativeHandle:),
    "AnimationNodeSub2": AnimationNodeSub2.self, //(nativeHandle:),
    "AnimationNodeSync": AnimationNodeSync.self, //(nativeHandle:),
    "AnimationNodeTimeScale": AnimationNodeTimeScale.self, //(nativeHandle:),
    "AnimationNodeTimeSeek": AnimationNodeTimeSeek.self, //(nativeHandle:),
    "AnimationNodeTransition": AnimationNodeTransition.self, //(nativeHandle:),
    "AnimationPlayer": AnimationPlayer.self, //(nativeHandle:),
    "AnimationRootNode": AnimationRootNode.self, //(nativeHandle:),
    "AnimationTree": AnimationTree.self, //(nativeHandle:),
    "Area2D": Area2D.self, //(nativeHandle:),
    "Area3D": Area3D.self, //(nativeHandle:),
    "ArrayMesh": ArrayMesh.self, //(nativeHandle:),
    "ArrayOccluder3D": ArrayOccluder3D.self, //(nativeHandle:),
    "AspectRatioContainer": AspectRatioContainer.self, //(nativeHandle:),
    "AtlasTexture": AtlasTexture.self, //(nativeHandle:),
    "AudioBusLayout": AudioBusLayout.self, //(nativeHandle:),
    "AudioEffect": AudioEffect.self, //(nativeHandle:),
    "AudioEffectAmplify": AudioEffectAmplify.self, //(nativeHandle:),
    "AudioEffectBandLimitFilter": AudioEffectBandLimitFilter.self, //(nativeHandle:),
    "AudioEffectBandPassFilter": AudioEffectBandPassFilter.self, //(nativeHandle:),
    "AudioEffectCapture": AudioEffectCapture.self, //(nativeHandle:),
    "AudioEffectChorus": AudioEffectChorus.self, //(nativeHandle:),
    "AudioEffectCompressor": AudioEffectCompressor.self, //(nativeHandle:),
    "AudioEffectDelay": AudioEffectDelay.self, //(nativeHandle:),
    "AudioEffectDistortion": AudioEffectDistortion.self, //(nativeHandle:),
    "AudioEffectEQ": AudioEffectEQ.self, //(nativeHandle:),
    "AudioEffectEQ10": AudioEffectEQ10.self, //(nativeHandle:),
    "AudioEffectEQ21": AudioEffectEQ21.self, //(nativeHandle:),
    "AudioEffectEQ6": AudioEffectEQ6.self, //(nativeHandle:),
    "AudioEffectFilter": AudioEffectFilter.self, //(nativeHandle:),
    "AudioEffectHighPassFilter": AudioEffectHighPassFilter.self, //(nativeHandle:),
    "AudioEffectHighShelfFilter": AudioEffectHighShelfFilter.self, //(nativeHandle:),
    "AudioEffectInstance": AudioEffectInstance.self, //(nativeHandle:),
    "AudioEffectLimiter": AudioEffectLimiter.self, //(nativeHandle:),
    "AudioEffectLowPassFilter": AudioEffectLowPassFilter.self, //(nativeHandle:),
    "AudioEffectLowShelfFilter": AudioEffectLowShelfFilter.self, //(nativeHandle:),
    "AudioEffectNotchFilter": AudioEffectNotchFilter.self, //(nativeHandle:),
    "AudioEffectPanner": AudioEffectPanner.self, //(nativeHandle:),
    "AudioEffectPhaser": AudioEffectPhaser.self, //(nativeHandle:),
    "AudioEffectPitchShift": AudioEffectPitchShift.self, //(nativeHandle:),
    "AudioEffectRecord": AudioEffectRecord.self, //(nativeHandle:),
    "AudioEffectReverb": AudioEffectReverb.self, //(nativeHandle:),
    "AudioEffectSpectrumAnalyzer": AudioEffectSpectrumAnalyzer.self, //(nativeHandle:),
    "AudioEffectSpectrumAnalyzerInstance": AudioEffectSpectrumAnalyzerInstance.self, //(nativeHandle:),
    "AudioEffectStereoEnhance": AudioEffectStereoEnhance.self, //(nativeHandle:),
    "AudioListener2D": AudioListener2D.self, //(nativeHandle:),
    "AudioListener3D": AudioListener3D.self, //(nativeHandle:),
    "AudioServer": AudioServer.self, //(nativeHandle:),
    "AudioStream": AudioStream.self, //(nativeHandle:),
    "AudioStreamGenerator": AudioStreamGenerator.self, //(nativeHandle:),
    "AudioStreamGeneratorPlayback": AudioStreamGeneratorPlayback.self, //(nativeHandle:),
    "AudioStreamMP3": AudioStreamMP3.self, //(nativeHandle:),
    "AudioStreamMicrophone": AudioStreamMicrophone.self, //(nativeHandle:),
    "AudioStreamOggVorbis": AudioStreamOggVorbis.self, //(nativeHandle:),
    "AudioStreamPlayback": AudioStreamPlayback.self, //(nativeHandle:),
    "AudioStreamPlaybackOggVorbis": AudioStreamPlaybackOggVorbis.self, //(nativeHandle:),
    "AudioStreamPlaybackPolyphonic": AudioStreamPlaybackPolyphonic.self, //(nativeHandle:),
    "AudioStreamPlaybackResampled": AudioStreamPlaybackResampled.self, //(nativeHandle:),
    "AudioStreamPlayer": AudioStreamPlayer.self, //(nativeHandle:),
    "AudioStreamPlayer2D": AudioStreamPlayer2D.self, //(nativeHandle:),
    "AudioStreamPlayer3D": AudioStreamPlayer3D.self, //(nativeHandle:),
    "AudioStreamPolyphonic": AudioStreamPolyphonic.self, //(nativeHandle:),
    "AudioStreamRandomizer": AudioStreamRandomizer.self, //(nativeHandle:),
    "AudioStreamWAV": AudioStreamWAV.self, //(nativeHandle:),
    "BackBufferCopy": BackBufferCopy.self, //(nativeHandle:),
    "BaseButton": BaseButton.self, //(nativeHandle:),
    "BaseMaterial3D": BaseMaterial3D.self, //(nativeHandle:),
    "BitMap": BitMap.self, //(nativeHandle:),
    "Bone2D": Bone2D.self, //(nativeHandle:),
    "BoneAttachment3D": BoneAttachment3D.self, //(nativeHandle:),
    "BoneMap": BoneMap.self, //(nativeHandle:),
    "BoxContainer": BoxContainer.self, //(nativeHandle:),
    "BoxMesh": BoxMesh.self, //(nativeHandle:),
    "BoxOccluder3D": BoxOccluder3D.self, //(nativeHandle:),
    "BoxShape3D": BoxShape3D.self, //(nativeHandle:),
    "Button": Button.self, //(nativeHandle:),
    "ButtonGroup": ButtonGroup.self, //(nativeHandle:),
    "CPUParticles2D": CPUParticles2D.self, //(nativeHandle:),
    "CPUParticles3D": CPUParticles3D.self, //(nativeHandle:),
    "CSGBox3D": CSGBox3D.self, //(nativeHandle:),
    "CSGCombiner3D": CSGCombiner3D.self, //(nativeHandle:),
    "CSGCylinder3D": CSGCylinder3D.self, //(nativeHandle:),
    "CSGMesh3D": CSGMesh3D.self, //(nativeHandle:),
    "CSGPolygon3D": CSGPolygon3D.self, //(nativeHandle:),
    "CSGPrimitive3D": CSGPrimitive3D.self, //(nativeHandle:),
    "CSGShape3D": CSGShape3D.self, //(nativeHandle:),
    "CSGSphere3D": CSGSphere3D.self, //(nativeHandle:),
    "CSGTorus3D": CSGTorus3D.self, //(nativeHandle:),
    "CallbackTweener": CallbackTweener.self, //(nativeHandle:),
    "Camera2D": Camera2D.self, //(nativeHandle:),
    "Camera3D": Camera3D.self, //(nativeHandle:),
    "CameraAttributes": CameraAttributes.self, //(nativeHandle:),
    "CameraAttributesPhysical": CameraAttributesPhysical.self, //(nativeHandle:),
    "CameraAttributesPractical": CameraAttributesPractical.self, //(nativeHandle:),
    "CameraFeed": CameraFeed.self, //(nativeHandle:),
    "CameraServer": CameraServer.self, //(nativeHandle:),
    "CameraTexture": CameraTexture.self, //(nativeHandle:),
    "CanvasGroup": CanvasGroup.self, //(nativeHandle:),
    "CanvasItem": CanvasItem.self, //(nativeHandle:),
    "CanvasItemMaterial": CanvasItemMaterial.self, //(nativeHandle:),
    "CanvasLayer": CanvasLayer.self, //(nativeHandle:),
    "CanvasModulate": CanvasModulate.self, //(nativeHandle:),
    "CanvasTexture": CanvasTexture.self, //(nativeHandle:),
    "CapsuleMesh": CapsuleMesh.self, //(nativeHandle:),
    "CapsuleShape2D": CapsuleShape2D.self, //(nativeHandle:),
    "CapsuleShape3D": CapsuleShape3D.self, //(nativeHandle:),
    "CenterContainer": CenterContainer.self, //(nativeHandle:),
    "CharFXTransform": CharFXTransform.self, //(nativeHandle:),
    "CharacterBody2D": CharacterBody2D.self, //(nativeHandle:),
    "CharacterBody3D": CharacterBody3D.self, //(nativeHandle:),
    "CheckBox": CheckBox.self, //(nativeHandle:),
    "CheckButton": CheckButton.self, //(nativeHandle:),
    "CircleShape2D": CircleShape2D.self, //(nativeHandle:),
    "ClassDB": ClassDB.self, //(nativeHandle:),
    "CodeEdit": CodeEdit.self, //(nativeHandle:),
    "CodeHighlighter": CodeHighlighter.self, //(nativeHandle:),
    "CollisionObject2D": CollisionObject2D.self, //(nativeHandle:),
    "CollisionObject3D": CollisionObject3D.self, //(nativeHandle:),
    "CollisionPolygon2D": CollisionPolygon2D.self, //(nativeHandle:),
    "CollisionPolygon3D": CollisionPolygon3D.self, //(nativeHandle:),
    "CollisionShape2D": CollisionShape2D.self, //(nativeHandle:),
    "CollisionShape3D": CollisionShape3D.self, //(nativeHandle:),
    "ColorPicker": ColorPicker.self, //(nativeHandle:),
    "ColorPickerButton": ColorPickerButton.self, //(nativeHandle:),
    "ColorRect": ColorRect.self, //(nativeHandle:),
    "CompressedCubemap": CompressedCubemap.self, //(nativeHandle:),
    "CompressedCubemapArray": CompressedCubemapArray.self, //(nativeHandle:),
    "CompressedTexture2D": CompressedTexture2D.self, //(nativeHandle:),
    "CompressedTexture2DArray": CompressedTexture2DArray.self, //(nativeHandle:),
    "CompressedTexture3D": CompressedTexture3D.self, //(nativeHandle:),
    "CompressedTextureLayered": CompressedTextureLayered.self, //(nativeHandle:),
    "ConcavePolygonShape2D": ConcavePolygonShape2D.self, //(nativeHandle:),
    "ConcavePolygonShape3D": ConcavePolygonShape3D.self, //(nativeHandle:),
    "ConeTwistJoint3D": ConeTwistJoint3D.self, //(nativeHandle:),
    "ConfigFile": ConfigFile.self, //(nativeHandle:),
    "ConfirmationDialog": ConfirmationDialog.self, //(nativeHandle:),
    "Container": Container.self, //(nativeHandle:),
    "Control": Control.self, //(nativeHandle:),
    "ConvexPolygonShape2D": ConvexPolygonShape2D.self, //(nativeHandle:),
    "ConvexPolygonShape3D": ConvexPolygonShape3D.self, //(nativeHandle:),
    "Crypto": Crypto.self, //(nativeHandle:),
    "CryptoKey": CryptoKey.self, //(nativeHandle:),
    "Cubemap": Cubemap.self, //(nativeHandle:),
    "CubemapArray": CubemapArray.self, //(nativeHandle:),
    "Curve": Curve.self, //(nativeHandle:),
    "Curve2D": Curve2D.self, //(nativeHandle:),
    "Curve3D": Curve3D.self, //(nativeHandle:),
    "CurveTexture": CurveTexture.self, //(nativeHandle:),
    "CurveXYZTexture": CurveXYZTexture.self, //(nativeHandle:),
    "CylinderMesh": CylinderMesh.self, //(nativeHandle:),
    "CylinderShape3D": CylinderShape3D.self, //(nativeHandle:),
    "DTLSServer": DTLSServer.self, //(nativeHandle:),
    "DampedSpringJoint2D": DampedSpringJoint2D.self, //(nativeHandle:),
    "Decal": Decal.self, //(nativeHandle:),
    "DirAccess": DirAccess.self, //(nativeHandle:),
    "DirectionalLight2D": DirectionalLight2D.self, //(nativeHandle:),
    "DirectionalLight3D": DirectionalLight3D.self, //(nativeHandle:),
    "DisplayServer": DisplayServer.self, //(nativeHandle:),
    "ENetConnection": ENetConnection.self, //(nativeHandle:),
    "ENetMultiplayerPeer": ENetMultiplayerPeer.self, //(nativeHandle:),
    "ENetPacketPeer": ENetPacketPeer.self, //(nativeHandle:),
    "EditorCommandPalette": EditorCommandPalette.self, //(nativeHandle:),
    "EditorDebuggerPlugin": EditorDebuggerPlugin.self, //(nativeHandle:),
    "EditorDebuggerSession": EditorDebuggerSession.self, //(nativeHandle:),
    "EditorExportPlatform": EditorExportPlatform.self, //(nativeHandle:),
    "EditorExportPlatformAndroid": EditorExportPlatformAndroid.self, //(nativeHandle:),
    "EditorExportPlatformIOS": EditorExportPlatformIOS.self, //(nativeHandle:),
    "EditorExportPlatformLinuxBSD": EditorExportPlatformLinuxBSD.self, //(nativeHandle:),
    "EditorExportPlatformMacOS": EditorExportPlatformMacOS.self, //(nativeHandle:),
    "EditorExportPlatformPC": EditorExportPlatformPC.self, //(nativeHandle:),
    "EditorExportPlatformWeb": EditorExportPlatformWeb.self, //(nativeHandle:),
    "EditorExportPlatformWindows": EditorExportPlatformWindows.self, //(nativeHandle:),
    "EditorExportPlugin": EditorExportPlugin.self, //(nativeHandle:),
    "EditorFeatureProfile": EditorFeatureProfile.self, //(nativeHandle:),
    "EditorFileDialog": EditorFileDialog.self, //(nativeHandle:),
    "EditorFileSystem": EditorFileSystem.self, //(nativeHandle:),
    "EditorFileSystemDirectory": EditorFileSystemDirectory.self, //(nativeHandle:),
    "EditorFileSystemImportFormatSupportQuery": EditorFileSystemImportFormatSupportQuery.self, //(nativeHandle:),
    "EditorImportPlugin": EditorImportPlugin.self, //(nativeHandle:),
    "EditorInspector": EditorInspector.self, //(nativeHandle:),
    "EditorInspectorPlugin": EditorInspectorPlugin.self, //(nativeHandle:),
    "EditorInterface": EditorInterface.self, //(nativeHandle:),
    "EditorNode3DGizmo": EditorNode3DGizmo.self, //(nativeHandle:),
    "EditorNode3DGizmoPlugin": EditorNode3DGizmoPlugin.self, //(nativeHandle:),
    "EditorPaths": EditorPaths.self, //(nativeHandle:),
    "EditorPlugin": EditorPlugin.self, //(nativeHandle:),
    "EditorProperty": EditorProperty.self, //(nativeHandle:),
    "EditorResourceConversionPlugin": EditorResourceConversionPlugin.self, //(nativeHandle:),
    "EditorResourcePicker": EditorResourcePicker.self, //(nativeHandle:),
    "EditorResourcePreview": EditorResourcePreview.self, //(nativeHandle:),
    "EditorResourcePreviewGenerator": EditorResourcePreviewGenerator.self, //(nativeHandle:),
    "EditorResourceTooltipPlugin": EditorResourceTooltipPlugin.self, //(nativeHandle:),
    "EditorSceneFormatImporter": EditorSceneFormatImporter.self, //(nativeHandle:),
    "EditorSceneFormatImporterBlend": EditorSceneFormatImporterBlend.self, //(nativeHandle:),
    "EditorSceneFormatImporterFBX": EditorSceneFormatImporterFBX.self, //(nativeHandle:),
    "EditorSceneFormatImporterGLTF": EditorSceneFormatImporterGLTF.self, //(nativeHandle:),
    "EditorScenePostImport": EditorScenePostImport.self, //(nativeHandle:),
    "EditorScenePostImportPlugin": EditorScenePostImportPlugin.self, //(nativeHandle:),
    "EditorScript": EditorScript.self, //(nativeHandle:),
    "EditorScriptPicker": EditorScriptPicker.self, //(nativeHandle:),
    "EditorSelection": EditorSelection.self, //(nativeHandle:),
    "EditorSettings": EditorSettings.self, //(nativeHandle:),
    "EditorSpinSlider": EditorSpinSlider.self, //(nativeHandle:),
    "EditorSyntaxHighlighter": EditorSyntaxHighlighter.self, //(nativeHandle:),
    "EditorTranslationParserPlugin": EditorTranslationParserPlugin.self, //(nativeHandle:),
    "EditorUndoRedoManager": EditorUndoRedoManager.self, //(nativeHandle:),
    "EditorVCSInterface": EditorVCSInterface.self, //(nativeHandle:),
    "EncodedObjectAsID": EncodedObjectAsID.self, //(nativeHandle:),
    "Engine": Engine.self, //(nativeHandle:),
    "EngineDebugger": EngineDebugger.self, //(nativeHandle:),
    "EngineProfiler": EngineProfiler.self, //(nativeHandle:),
    "Environment": Environment.self, //(nativeHandle:),
    "Expression": Expression.self, //(nativeHandle:),
    "FastNoiseLite": FastNoiseLite.self, //(nativeHandle:),
    "FileAccess": FileAccess.self, //(nativeHandle:),
    "FileDialog": FileDialog.self, //(nativeHandle:),
    "FileSystemDock": FileSystemDock.self, //(nativeHandle:),
    "FlowContainer": FlowContainer.self, //(nativeHandle:),
    "FogMaterial": FogMaterial.self, //(nativeHandle:),
    "FogVolume": FogVolume.self, //(nativeHandle:),
    "Font": Font.self, //(nativeHandle:),
    "FontFile": FontFile.self, //(nativeHandle:),
    "FontVariation": FontVariation.self, //(nativeHandle:),
    "GDExtension": GDExtension.self, //(nativeHandle:),
    "GDExtensionManager": GDExtensionManager.self, //(nativeHandle:),
    "GDScript": GDScript.self, //(nativeHandle:),
    "GLTFAccessor": GLTFAccessor.self, //(nativeHandle:),
    "GLTFAnimation": GLTFAnimation.self, //(nativeHandle:),
    "GLTFBufferView": GLTFBufferView.self, //(nativeHandle:),
    "GLTFCamera": GLTFCamera.self, //(nativeHandle:),
    "GLTFDocument": GLTFDocument.self, //(nativeHandle:),
    "GLTFDocumentExtension": GLTFDocumentExtension.self, //(nativeHandle:),
    "GLTFDocumentExtensionConvertImporterMesh": GLTFDocumentExtensionConvertImporterMesh.self, //(nativeHandle:),
    "GLTFLight": GLTFLight.self, //(nativeHandle:),
    "GLTFMesh": GLTFMesh.self, //(nativeHandle:),
    "GLTFNode": GLTFNode.self, //(nativeHandle:),
    "GLTFPhysicsBody": GLTFPhysicsBody.self, //(nativeHandle:),
    "GLTFPhysicsShape": GLTFPhysicsShape.self, //(nativeHandle:),
    "GLTFSkeleton": GLTFSkeleton.self, //(nativeHandle:),
    "GLTFSkin": GLTFSkin.self, //(nativeHandle:),
    "GLTFSpecGloss": GLTFSpecGloss.self, //(nativeHandle:),
    "GLTFState": GLTFState.self, //(nativeHandle:),
    "GLTFTexture": GLTFTexture.self, //(nativeHandle:),
    "GLTFTextureSampler": GLTFTextureSampler.self, //(nativeHandle:),
    "GPUParticles2D": GPUParticles2D.self, //(nativeHandle:),
    "GPUParticles3D": GPUParticles3D.self, //(nativeHandle:),
    "GPUParticlesAttractor3D": GPUParticlesAttractor3D.self, //(nativeHandle:),
    "GPUParticlesAttractorBox3D": GPUParticlesAttractorBox3D.self, //(nativeHandle:),
    "GPUParticlesAttractorSphere3D": GPUParticlesAttractorSphere3D.self, //(nativeHandle:),
    "GPUParticlesAttractorVectorField3D": GPUParticlesAttractorVectorField3D.self, //(nativeHandle:),
    "GPUParticlesCollision3D": GPUParticlesCollision3D.self, //(nativeHandle:),
    "GPUParticlesCollisionBox3D": GPUParticlesCollisionBox3D.self, //(nativeHandle:),
    "GPUParticlesCollisionHeightField3D": GPUParticlesCollisionHeightField3D.self, //(nativeHandle:),
    "GPUParticlesCollisionSDF3D": GPUParticlesCollisionSDF3D.self, //(nativeHandle:),
    "GPUParticlesCollisionSphere3D": GPUParticlesCollisionSphere3D.self, //(nativeHandle:),
    "Generic6DOFJoint3D": Generic6DOFJoint3D.self, //(nativeHandle:),
    "Geometry2D": Geometry2D.self, //(nativeHandle:),
    "Geometry3D": Geometry3D.self, //(nativeHandle:),
    "GeometryInstance3D": GeometryInstance3D.self, //(nativeHandle:),
    "Gradient": Gradient.self, //(nativeHandle:),
    "GradientTexture1D": GradientTexture1D.self, //(nativeHandle:),
    "GradientTexture2D": GradientTexture2D.self, //(nativeHandle:),
    "GraphEdit": GraphEdit.self, //(nativeHandle:),
    "GraphElement": GraphElement.self, //(nativeHandle:),
    "GraphNode": GraphNode.self, //(nativeHandle:),
    "GridContainer": GridContainer.self, //(nativeHandle:),
    "GridMap": GridMap.self, //(nativeHandle:),
    "GrooveJoint2D": GrooveJoint2D.self, //(nativeHandle:),
    "HBoxContainer": HBoxContainer.self, //(nativeHandle:),
    "HFlowContainer": HFlowContainer.self, //(nativeHandle:),
    "HMACContext": HMACContext.self, //(nativeHandle:),
    "HScrollBar": HScrollBar.self, //(nativeHandle:),
    "HSeparator": HSeparator.self, //(nativeHandle:),
    "HSlider": HSlider.self, //(nativeHandle:),
    "HSplitContainer": HSplitContainer.self, //(nativeHandle:),
    "HTTPClient": HTTPClient.self, //(nativeHandle:),
    "HTTPRequest": HTTPRequest.self, //(nativeHandle:),
    "HashingContext": HashingContext.self, //(nativeHandle:),
    "HeightMapShape3D": HeightMapShape3D.self, //(nativeHandle:),
    "HingeJoint3D": HingeJoint3D.self, //(nativeHandle:),
    "IP": IP.self, //(nativeHandle:),
    "Image": Image.self, //(nativeHandle:),
    "ImageFormatLoader": ImageFormatLoader.self, //(nativeHandle:),
    "ImageFormatLoaderExtension": ImageFormatLoaderExtension.self, //(nativeHandle:),
    "ImageTexture": ImageTexture.self, //(nativeHandle:),
    "ImageTexture3D": ImageTexture3D.self, //(nativeHandle:),
    "ImageTextureLayered": ImageTextureLayered.self, //(nativeHandle:),
    "ImmediateMesh": ImmediateMesh.self, //(nativeHandle:),
    "ImporterMesh": ImporterMesh.self, //(nativeHandle:),
    "ImporterMeshInstance3D": ImporterMeshInstance3D.self, //(nativeHandle:),
    "Input": Input.self, //(nativeHandle:),
    "InputEvent": InputEvent.self, //(nativeHandle:),
    "InputEventAction": InputEventAction.self, //(nativeHandle:),
    "InputEventFromWindow": InputEventFromWindow.self, //(nativeHandle:),
    "InputEventGesture": InputEventGesture.self, //(nativeHandle:),
    "InputEventJoypadButton": InputEventJoypadButton.self, //(nativeHandle:),
    "InputEventJoypadMotion": InputEventJoypadMotion.self, //(nativeHandle:),
    "InputEventKey": InputEventKey.self, //(nativeHandle:),
    "InputEventMIDI": InputEventMIDI.self, //(nativeHandle:),
    "InputEventMagnifyGesture": InputEventMagnifyGesture.self, //(nativeHandle:),
    "InputEventMouse": InputEventMouse.self, //(nativeHandle:),
    "InputEventMouseButton": InputEventMouseButton.self, //(nativeHandle:),
    "InputEventMouseMotion": InputEventMouseMotion.self, //(nativeHandle:),
    "InputEventPanGesture": InputEventPanGesture.self, //(nativeHandle:),
    "InputEventScreenDrag": InputEventScreenDrag.self, //(nativeHandle:),
    "InputEventScreenTouch": InputEventScreenTouch.self, //(nativeHandle:),
    "InputEventShortcut": InputEventShortcut.self, //(nativeHandle:),
    "InputEventWithModifiers": InputEventWithModifiers.self, //(nativeHandle:),
    "InputMap": InputMap.self, //(nativeHandle:),
    "InstancePlaceholder": InstancePlaceholder.self, //(nativeHandle:),
    "IntervalTweener": IntervalTweener.self, //(nativeHandle:),
    "ItemList": ItemList.self, //(nativeHandle:),
    "JNISingleton": JNISingleton.self, //(nativeHandle:),
    "JSON": JSON.self, //(nativeHandle:),
    "JSONRPC": JSONRPC.self, //(nativeHandle:),
    "JavaClass": JavaClass.self, //(nativeHandle:),
    "JavaClassWrapper": JavaClassWrapper.self, //(nativeHandle:),
    "JavaScriptBridge": JavaScriptBridge.self, //(nativeHandle:),
    "JavaScriptObject": JavaScriptObject.self, //(nativeHandle:),
    "Joint2D": Joint2D.self, //(nativeHandle:),
    "Joint3D": Joint3D.self, //(nativeHandle:),
    "KinematicCollision2D": KinematicCollision2D.self, //(nativeHandle:),
    "KinematicCollision3D": KinematicCollision3D.self, //(nativeHandle:),
    "Label": Label.self, //(nativeHandle:),
    "Label3D": Label3D.self, //(nativeHandle:),
    "LabelSettings": LabelSettings.self, //(nativeHandle:),
    "Light2D": Light2D.self, //(nativeHandle:),
    "Light3D": Light3D.self, //(nativeHandle:),
    "LightOccluder2D": LightOccluder2D.self, //(nativeHandle:),
    "LightmapGI": LightmapGI.self, //(nativeHandle:),
    "LightmapGIData": LightmapGIData.self, //(nativeHandle:),
    "LightmapProbe": LightmapProbe.self, //(nativeHandle:),
    "Lightmapper": Lightmapper.self, //(nativeHandle:),
    "LightmapperRD": LightmapperRD.self, //(nativeHandle:),
    "Line2D": Line2D.self, //(nativeHandle:),
    "LineEdit": LineEdit.self, //(nativeHandle:),
    "LinkButton": LinkButton.self, //(nativeHandle:),
    "MainLoop": MainLoop.self, //(nativeHandle:),
    "MarginContainer": MarginContainer.self, //(nativeHandle:),
    "Marker2D": Marker2D.self, //(nativeHandle:),
    "Marker3D": Marker3D.self, //(nativeHandle:),
    "Marshalls": Marshalls.self, //(nativeHandle:),
    "Material": Material.self, //(nativeHandle:),
    "MenuBar": MenuBar.self, //(nativeHandle:),
    "MenuButton": MenuButton.self, //(nativeHandle:),
    "Mesh": Mesh.self, //(nativeHandle:),
    "MeshConvexDecompositionSettings": MeshConvexDecompositionSettings.self, //(nativeHandle:),
    "MeshDataTool": MeshDataTool.self, //(nativeHandle:),
    "MeshInstance2D": MeshInstance2D.self, //(nativeHandle:),
    "MeshInstance3D": MeshInstance3D.self, //(nativeHandle:),
    "MeshLibrary": MeshLibrary.self, //(nativeHandle:),
    "MeshTexture": MeshTexture.self, //(nativeHandle:),
    "MethodTweener": MethodTweener.self, //(nativeHandle:),
    "MissingNode": MissingNode.self, //(nativeHandle:),
    "MissingResource": MissingResource.self, //(nativeHandle:),
    "MobileVRInterface": MobileVRInterface.self, //(nativeHandle:),
    "MovieWriter": MovieWriter.self, //(nativeHandle:),
    "MultiMesh": MultiMesh.self, //(nativeHandle:),
    "MultiMeshInstance2D": MultiMeshInstance2D.self, //(nativeHandle:),
    "MultiMeshInstance3D": MultiMeshInstance3D.self, //(nativeHandle:),
    "MultiplayerAPI": MultiplayerAPI.self, //(nativeHandle:),
    "MultiplayerAPIExtension": MultiplayerAPIExtension.self, //(nativeHandle:),
    "MultiplayerPeer": MultiplayerPeer.self, //(nativeHandle:),
    "MultiplayerPeerExtension": MultiplayerPeerExtension.self, //(nativeHandle:),
    "MultiplayerSpawner": MultiplayerSpawner.self, //(nativeHandle:),
    "MultiplayerSynchronizer": MultiplayerSynchronizer.self, //(nativeHandle:),
    "Mutex": Mutex.self, //(nativeHandle:),
    "NavigationAgent2D": NavigationAgent2D.self, //(nativeHandle:),
    "NavigationAgent3D": NavigationAgent3D.self, //(nativeHandle:),
    "NavigationLink2D": NavigationLink2D.self, //(nativeHandle:),
    "NavigationLink3D": NavigationLink3D.self, //(nativeHandle:),
    "NavigationMesh": NavigationMesh.self, //(nativeHandle:),
    "NavigationMeshGenerator": NavigationMeshGenerator.self, //(nativeHandle:),
    "NavigationMeshSourceGeometryData2D": NavigationMeshSourceGeometryData2D.self, //(nativeHandle:),
    "NavigationMeshSourceGeometryData3D": NavigationMeshSourceGeometryData3D.self, //(nativeHandle:),
    "NavigationObstacle2D": NavigationObstacle2D.self, //(nativeHandle:),
    "NavigationObstacle3D": NavigationObstacle3D.self, //(nativeHandle:),
    "NavigationPathQueryParameters2D": NavigationPathQueryParameters2D.self, //(nativeHandle:),
    "NavigationPathQueryParameters3D": NavigationPathQueryParameters3D.self, //(nativeHandle:),
    "NavigationPathQueryResult2D": NavigationPathQueryResult2D.self, //(nativeHandle:),
    "NavigationPathQueryResult3D": NavigationPathQueryResult3D.self, //(nativeHandle:),
    "NavigationPolygon": NavigationPolygon.self, //(nativeHandle:),
    "NavigationRegion2D": NavigationRegion2D.self, //(nativeHandle:),
    "NavigationRegion3D": NavigationRegion3D.self, //(nativeHandle:),
    "NavigationServer2D": NavigationServer2D.self, //(nativeHandle:),
    "NavigationServer3D": NavigationServer3D.self, //(nativeHandle:),
    "NinePatchRect": NinePatchRect.self, //(nativeHandle:),
    "Node": Node.self, //(nativeHandle:),
    "Node2D": Node2D.self, //(nativeHandle:),
    "Node3D": Node3D.self, //(nativeHandle:),
    "Node3DGizmo": Node3DGizmo.self, //(nativeHandle:),
    "Noise": Noise.self, //(nativeHandle:),
    "NoiseTexture2D": NoiseTexture2D.self, //(nativeHandle:),
    "NoiseTexture3D": NoiseTexture3D.self, //(nativeHandle:),
    "ORMMaterial3D": ORMMaterial3D.self, //(nativeHandle:),
    "OS": OS.self, //(nativeHandle:),
    "Object": Object.self, //(nativeHandle:),
    "Occluder3D": Occluder3D.self, //(nativeHandle:),
    "OccluderInstance3D": OccluderInstance3D.self, //(nativeHandle:),
    "OccluderPolygon2D": OccluderPolygon2D.self, //(nativeHandle:),
    "OfflineMultiplayerPeer": OfflineMultiplayerPeer.self, //(nativeHandle:),
    "OggPacketSequence": OggPacketSequence.self, //(nativeHandle:),
    "OggPacketSequencePlayback": OggPacketSequencePlayback.self, //(nativeHandle:),
    "OmniLight3D": OmniLight3D.self, //(nativeHandle:),
    "OpenXRAPIExtension": OpenXRAPIExtension.self, //(nativeHandle:),
    "OpenXRAction": OpenXRAction.self, //(nativeHandle:),
    "OpenXRActionMap": OpenXRActionMap.self, //(nativeHandle:),
    "OpenXRActionSet": OpenXRActionSet.self, //(nativeHandle:),
    "OpenXRExtensionWrapperExtension": OpenXRExtensionWrapperExtension.self, //(nativeHandle:),
    "OpenXRHand": OpenXRHand.self, //(nativeHandle:),
    "OpenXRIPBinding": OpenXRIPBinding.self, //(nativeHandle:),
    "OpenXRInteractionProfile": OpenXRInteractionProfile.self, //(nativeHandle:),
    "OpenXRInteractionProfileMetadata": OpenXRInteractionProfileMetadata.self, //(nativeHandle:),
    "OpenXRInterface": OpenXRInterface.self, //(nativeHandle:),
    "OptimizedTranslation": OptimizedTranslation.self, //(nativeHandle:),
    "OptionButton": OptionButton.self, //(nativeHandle:),
    "PCKPacker": PCKPacker.self, //(nativeHandle:),
    "PackedDataContainer": PackedDataContainer.self, //(nativeHandle:),
    "PackedDataContainerRef": PackedDataContainerRef.self, //(nativeHandle:),
    "PackedScene": PackedScene.self, //(nativeHandle:),
    "PacketPeer": PacketPeer.self, //(nativeHandle:),
    "PacketPeerDTLS": PacketPeerDTLS.self, //(nativeHandle:),
    "PacketPeerExtension": PacketPeerExtension.self, //(nativeHandle:),
    "PacketPeerStream": PacketPeerStream.self, //(nativeHandle:),
    "PacketPeerUDP": PacketPeerUDP.self, //(nativeHandle:),
    "Panel": Panel.self, //(nativeHandle:),
    "PanelContainer": PanelContainer.self, //(nativeHandle:),
    "PanoramaSkyMaterial": PanoramaSkyMaterial.self, //(nativeHandle:),
    "ParallaxBackground": ParallaxBackground.self, //(nativeHandle:),
    "ParallaxLayer": ParallaxLayer.self, //(nativeHandle:),
    "ParticleProcessMaterial": ParticleProcessMaterial.self, //(nativeHandle:),
    "Path2D": Path2D.self, //(nativeHandle:),
    "Path3D": Path3D.self, //(nativeHandle:),
    "PathFollow2D": PathFollow2D.self, //(nativeHandle:),
    "PathFollow3D": PathFollow3D.self, //(nativeHandle:),
    "Performance": Performance.self, //(nativeHandle:),
    "PhysicalBone2D": PhysicalBone2D.self, //(nativeHandle:),
    "PhysicalBone3D": PhysicalBone3D.self, //(nativeHandle:),
    "PhysicalSkyMaterial": PhysicalSkyMaterial.self, //(nativeHandle:),
    "PhysicsBody2D": PhysicsBody2D.self, //(nativeHandle:),
    "PhysicsBody3D": PhysicsBody3D.self, //(nativeHandle:),
    "PhysicsDirectBodyState2D": PhysicsDirectBodyState2D.self, //(nativeHandle:),
    "PhysicsDirectBodyState2DExtension": PhysicsDirectBodyState2DExtension.self, //(nativeHandle:),
    "PhysicsDirectBodyState3D": PhysicsDirectBodyState3D.self, //(nativeHandle:),
    "PhysicsDirectBodyState3DExtension": PhysicsDirectBodyState3DExtension.self, //(nativeHandle:),
    "PhysicsDirectSpaceState2D": PhysicsDirectSpaceState2D.self, //(nativeHandle:),
    "PhysicsDirectSpaceState2DExtension": PhysicsDirectSpaceState2DExtension.self, //(nativeHandle:),
    "PhysicsDirectSpaceState3D": PhysicsDirectSpaceState3D.self, //(nativeHandle:),
    "PhysicsDirectSpaceState3DExtension": PhysicsDirectSpaceState3DExtension.self, //(nativeHandle:),
    "PhysicsMaterial": PhysicsMaterial.self, //(nativeHandle:),
    "PhysicsPointQueryParameters2D": PhysicsPointQueryParameters2D.self, //(nativeHandle:),
    "PhysicsPointQueryParameters3D": PhysicsPointQueryParameters3D.self, //(nativeHandle:),
    "PhysicsRayQueryParameters2D": PhysicsRayQueryParameters2D.self, //(nativeHandle:),
    "PhysicsRayQueryParameters3D": PhysicsRayQueryParameters3D.self, //(nativeHandle:),
    "PhysicsServer2D": PhysicsServer2D.self, //(nativeHandle:),
    "PhysicsServer2DExtension": PhysicsServer2DExtension.self, //(nativeHandle:),
    "PhysicsServer2DManager": PhysicsServer2DManager.self, //(nativeHandle:),
    "PhysicsServer3D": PhysicsServer3D.self, //(nativeHandle:),
    "PhysicsServer3DExtension": PhysicsServer3DExtension.self, //(nativeHandle:),
    "PhysicsServer3DManager": PhysicsServer3DManager.self, //(nativeHandle:),
    "PhysicsServer3DRenderingServerHandler": PhysicsServer3DRenderingServerHandler.self, //(nativeHandle:),
    "PhysicsShapeQueryParameters2D": PhysicsShapeQueryParameters2D.self, //(nativeHandle:),
    "PhysicsShapeQueryParameters3D": PhysicsShapeQueryParameters3D.self, //(nativeHandle:),
    "PhysicsTestMotionParameters2D": PhysicsTestMotionParameters2D.self, //(nativeHandle:),
    "PhysicsTestMotionParameters3D": PhysicsTestMotionParameters3D.self, //(nativeHandle:),
    "PhysicsTestMotionResult2D": PhysicsTestMotionResult2D.self, //(nativeHandle:),
    "PhysicsTestMotionResult3D": PhysicsTestMotionResult3D.self, //(nativeHandle:),
    "PinJoint2D": PinJoint2D.self, //(nativeHandle:),
    "PinJoint3D": PinJoint3D.self, //(nativeHandle:),
    "PlaceholderCubemap": PlaceholderCubemap.self, //(nativeHandle:),
    "PlaceholderCubemapArray": PlaceholderCubemapArray.self, //(nativeHandle:),
    "PlaceholderMaterial": PlaceholderMaterial.self, //(nativeHandle:),
    "PlaceholderMesh": PlaceholderMesh.self, //(nativeHandle:),
    "PlaceholderTexture2D": PlaceholderTexture2D.self, //(nativeHandle:),
    "PlaceholderTexture2DArray": PlaceholderTexture2DArray.self, //(nativeHandle:),
    "PlaceholderTexture3D": PlaceholderTexture3D.self, //(nativeHandle:),
    "PlaceholderTextureLayered": PlaceholderTextureLayered.self, //(nativeHandle:),
    "PlaneMesh": PlaneMesh.self, //(nativeHandle:),
    "PointLight2D": PointLight2D.self, //(nativeHandle:),
    "PointMesh": PointMesh.self, //(nativeHandle:),
    "Polygon2D": Polygon2D.self, //(nativeHandle:),
    "PolygonOccluder3D": PolygonOccluder3D.self, //(nativeHandle:),
    "PolygonPathFinder": PolygonPathFinder.self, //(nativeHandle:),
    "Popup": Popup.self, //(nativeHandle:),
    "PopupMenu": PopupMenu.self, //(nativeHandle:),
    "PopupPanel": PopupPanel.self, //(nativeHandle:),
    "PortableCompressedTexture2D": PortableCompressedTexture2D.self, //(nativeHandle:),
    "PrimitiveMesh": PrimitiveMesh.self, //(nativeHandle:),
    "PrismMesh": PrismMesh.self, //(nativeHandle:),
    "ProceduralSkyMaterial": ProceduralSkyMaterial.self, //(nativeHandle:),
    "ProgressBar": ProgressBar.self, //(nativeHandle:),
    "ProjectSettings": ProjectSettings.self, //(nativeHandle:),
    "PropertyTweener": PropertyTweener.self, //(nativeHandle:),
    "QuadMesh": QuadMesh.self, //(nativeHandle:),
    "QuadOccluder3D": QuadOccluder3D.self, //(nativeHandle:),
    "RDAttachmentFormat": RDAttachmentFormat.self, //(nativeHandle:),
    "RDFramebufferPass": RDFramebufferPass.self, //(nativeHandle:),
    "RDPipelineColorBlendState": RDPipelineColorBlendState.self, //(nativeHandle:),
    "RDPipelineColorBlendStateAttachment": RDPipelineColorBlendStateAttachment.self, //(nativeHandle:),
    "RDPipelineDepthStencilState": RDPipelineDepthStencilState.self, //(nativeHandle:),
    "RDPipelineMultisampleState": RDPipelineMultisampleState.self, //(nativeHandle:),
    "RDPipelineRasterizationState": RDPipelineRasterizationState.self, //(nativeHandle:),
    "RDPipelineSpecializationConstant": RDPipelineSpecializationConstant.self, //(nativeHandle:),
    "RDSamplerState": RDSamplerState.self, //(nativeHandle:),
    "RDShaderFile": RDShaderFile.self, //(nativeHandle:),
    "RDShaderSPIRV": RDShaderSPIRV.self, //(nativeHandle:),
    "RDShaderSource": RDShaderSource.self, //(nativeHandle:),
    "RDTextureFormat": RDTextureFormat.self, //(nativeHandle:),
    "RDTextureView": RDTextureView.self, //(nativeHandle:),
    "RDUniform": RDUniform.self, //(nativeHandle:),
    "RDVertexAttribute": RDVertexAttribute.self, //(nativeHandle:),
    "RandomNumberGenerator": RandomNumberGenerator.self, //(nativeHandle:),
    "Range": Range.self, //(nativeHandle:),
    "RayCast2D": RayCast2D.self, //(nativeHandle:),
    "RayCast3D": RayCast3D.self, //(nativeHandle:),
    "RectangleShape2D": RectangleShape2D.self, //(nativeHandle:),
    "RefCounted": RefCounted.self, //(nativeHandle:),
    "ReferenceRect": ReferenceRect.self, //(nativeHandle:),
    "ReflectionProbe": ReflectionProbe.self, //(nativeHandle:),
    "RegEx": RegEx.self, //(nativeHandle:),
    "RegExMatch": RegExMatch.self, //(nativeHandle:),
    "RemoteTransform2D": RemoteTransform2D.self, //(nativeHandle:),
    "RemoteTransform3D": RemoteTransform3D.self, //(nativeHandle:),
    "RenderSceneBuffers": RenderSceneBuffers.self, //(nativeHandle:),
    "RenderSceneBuffersConfiguration": RenderSceneBuffersConfiguration.self, //(nativeHandle:),
    "RenderSceneBuffersExtension": RenderSceneBuffersExtension.self, //(nativeHandle:),
    "RenderSceneBuffersRD": RenderSceneBuffersRD.self, //(nativeHandle:),
    "RenderingDevice": RenderingDevice.self, //(nativeHandle:),
    "RenderingServer": RenderingServer.self, //(nativeHandle:),
    "Resource": Resource.self, //(nativeHandle:),
    "ResourceFormatLoader": ResourceFormatLoader.self, //(nativeHandle:),
    "ResourceFormatSaver": ResourceFormatSaver.self, //(nativeHandle:),
    "ResourceImporter": ResourceImporter.self, //(nativeHandle:),
    "ResourceImporterBMFont": ResourceImporterBMFont.self, //(nativeHandle:),
    "ResourceImporterBitMap": ResourceImporterBitMap.self, //(nativeHandle:),
    "ResourceImporterCSVTranslation": ResourceImporterCSVTranslation.self, //(nativeHandle:),
    "ResourceImporterDynamicFont": ResourceImporterDynamicFont.self, //(nativeHandle:),
    "ResourceImporterImage": ResourceImporterImage.self, //(nativeHandle:),
    "ResourceImporterImageFont": ResourceImporterImageFont.self, //(nativeHandle:),
    "ResourceImporterLayeredTexture": ResourceImporterLayeredTexture.self, //(nativeHandle:),
    "ResourceImporterMP3": ResourceImporterMP3.self, //(nativeHandle:),
    "ResourceImporterOBJ": ResourceImporterOBJ.self, //(nativeHandle:),
    "ResourceImporterOggVorbis": ResourceImporterOggVorbis.self, //(nativeHandle:),
    "ResourceImporterScene": ResourceImporterScene.self, //(nativeHandle:),
    "ResourceImporterShaderFile": ResourceImporterShaderFile.self, //(nativeHandle:),
    "ResourceImporterTexture": ResourceImporterTexture.self, //(nativeHandle:),
    "ResourceImporterTextureAtlas": ResourceImporterTextureAtlas.self, //(nativeHandle:),
    "ResourceImporterWAV": ResourceImporterWAV.self, //(nativeHandle:),
    "ResourceLoader": ResourceLoader.self, //(nativeHandle:),
    "ResourcePreloader": ResourcePreloader.self, //(nativeHandle:),
    "ResourceSaver": ResourceSaver.self, //(nativeHandle:),
    "ResourceUID": ResourceUID.self, //(nativeHandle:),
    "RibbonTrailMesh": RibbonTrailMesh.self, //(nativeHandle:),
    "RichTextEffect": RichTextEffect.self, //(nativeHandle:),
    "RichTextLabel": RichTextLabel.self, //(nativeHandle:),
    "RigidBody2D": RigidBody2D.self, //(nativeHandle:),
    "RigidBody3D": RigidBody3D.self, //(nativeHandle:),
    "RootMotionView": RootMotionView.self, //(nativeHandle:),
    "SceneMultiplayer": SceneMultiplayer.self, //(nativeHandle:),
    "SceneReplicationConfig": SceneReplicationConfig.self, //(nativeHandle:),
    "SceneState": SceneState.self, //(nativeHandle:),
    "SceneTree": SceneTree.self, //(nativeHandle:),
    "SceneTreeTimer": SceneTreeTimer.self, //(nativeHandle:),
    "Script": Script.self, //(nativeHandle:),
    "ScriptCreateDialog": ScriptCreateDialog.self, //(nativeHandle:),
    "ScriptEditor": ScriptEditor.self, //(nativeHandle:),
    "ScriptEditorBase": ScriptEditorBase.self, //(nativeHandle:),
    "ScriptExtension": ScriptExtension.self, //(nativeHandle:),
    "ScriptLanguage": ScriptLanguage.self, //(nativeHandle:),
    "ScriptLanguageExtension": ScriptLanguageExtension.self, //(nativeHandle:),
    "ScrollBar": ScrollBar.self, //(nativeHandle:),
    "ScrollContainer": ScrollContainer.self, //(nativeHandle:),
    "SegmentShape2D": SegmentShape2D.self, //(nativeHandle:),
    "Semaphore": Semaphore.self, //(nativeHandle:),
    "SeparationRayShape2D": SeparationRayShape2D.self, //(nativeHandle:),
    "SeparationRayShape3D": SeparationRayShape3D.self, //(nativeHandle:),
    "Separator": Separator.self, //(nativeHandle:),
    "Shader": Shader.self, //(nativeHandle:),
    "ShaderGlobalsOverride": ShaderGlobalsOverride.self, //(nativeHandle:),
    "ShaderInclude": ShaderInclude.self, //(nativeHandle:),
    "ShaderMaterial": ShaderMaterial.self, //(nativeHandle:),
    "Shape2D": Shape2D.self, //(nativeHandle:),
    "Shape3D": Shape3D.self, //(nativeHandle:),
    "ShapeCast2D": ShapeCast2D.self, //(nativeHandle:),
    "ShapeCast3D": ShapeCast3D.self, //(nativeHandle:),
    "Shortcut": Shortcut.self, //(nativeHandle:),
    "Skeleton2D": Skeleton2D.self, //(nativeHandle:),
    "Skeleton3D": Skeleton3D.self, //(nativeHandle:),
    "SkeletonIK3D": SkeletonIK3D.self, //(nativeHandle:),
    "SkeletonModification2D": SkeletonModification2D.self, //(nativeHandle:),
    "SkeletonModification2DCCDIK": SkeletonModification2DCCDIK.self, //(nativeHandle:),
    "SkeletonModification2DFABRIK": SkeletonModification2DFABRIK.self, //(nativeHandle:),
    "SkeletonModification2DJiggle": SkeletonModification2DJiggle.self, //(nativeHandle:),
    "SkeletonModification2DLookAt": SkeletonModification2DLookAt.self, //(nativeHandle:),
    "SkeletonModification2DPhysicalBones": SkeletonModification2DPhysicalBones.self, //(nativeHandle:),
    "SkeletonModification2DStackHolder": SkeletonModification2DStackHolder.self, //(nativeHandle:),
    "SkeletonModification2DTwoBoneIK": SkeletonModification2DTwoBoneIK.self, //(nativeHandle:),
    "SkeletonModificationStack2D": SkeletonModificationStack2D.self, //(nativeHandle:),
    "SkeletonProfile": SkeletonProfile.self, //(nativeHandle:),
    "SkeletonProfileHumanoid": SkeletonProfileHumanoid.self, //(nativeHandle:),
    "Skin": Skin.self, //(nativeHandle:),
    "SkinReference": SkinReference.self, //(nativeHandle:),
    "Sky": Sky.self, //(nativeHandle:),
    "Slider": Slider.self, //(nativeHandle:),
    "SliderJoint3D": SliderJoint3D.self, //(nativeHandle:),
    "SoftBody3D": SoftBody3D.self, //(nativeHandle:),
    "SphereMesh": SphereMesh.self, //(nativeHandle:),
    "SphereOccluder3D": SphereOccluder3D.self, //(nativeHandle:),
    "SphereShape3D": SphereShape3D.self, //(nativeHandle:),
    "SpinBox": SpinBox.self, //(nativeHandle:),
    "SplitContainer": SplitContainer.self, //(nativeHandle:),
    "SpotLight3D": SpotLight3D.self, //(nativeHandle:),
    "SpringArm3D": SpringArm3D.self, //(nativeHandle:),
    "Sprite2D": Sprite2D.self, //(nativeHandle:),
    "Sprite3D": Sprite3D.self, //(nativeHandle:),
    "SpriteBase3D": SpriteBase3D.self, //(nativeHandle:),
    "SpriteFrames": SpriteFrames.self, //(nativeHandle:),
    "StandardMaterial3D": StandardMaterial3D.self, //(nativeHandle:),
    "StaticBody2D": StaticBody2D.self, //(nativeHandle:),
    "StaticBody3D": StaticBody3D.self, //(nativeHandle:),
    "StreamPeer": StreamPeer.self, //(nativeHandle:),
    "StreamPeerBuffer": StreamPeerBuffer.self, //(nativeHandle:),
    "StreamPeerExtension": StreamPeerExtension.self, //(nativeHandle:),
    "StreamPeerGZIP": StreamPeerGZIP.self, //(nativeHandle:),
    "StreamPeerTCP": StreamPeerTCP.self, //(nativeHandle:),
    "StreamPeerTLS": StreamPeerTLS.self, //(nativeHandle:),
    "StyleBox": StyleBox.self, //(nativeHandle:),
    "StyleBoxEmpty": StyleBoxEmpty.self, //(nativeHandle:),
    "StyleBoxFlat": StyleBoxFlat.self, //(nativeHandle:),
    "StyleBoxLine": StyleBoxLine.self, //(nativeHandle:),
    "StyleBoxTexture": StyleBoxTexture.self, //(nativeHandle:),
    "SubViewport": SubViewport.self, //(nativeHandle:),
    "SubViewportContainer": SubViewportContainer.self, //(nativeHandle:),
    "SurfaceTool": SurfaceTool.self, //(nativeHandle:),
    "SyntaxHighlighter": SyntaxHighlighter.self, //(nativeHandle:),
    "SystemFont": SystemFont.self, //(nativeHandle:),
    "TCPServer": TCPServer.self, //(nativeHandle:),
    "TLSOptions": TLSOptions.self, //(nativeHandle:),
    "TabBar": TabBar.self, //(nativeHandle:),
    "TabContainer": TabContainer.self, //(nativeHandle:),
    "TextEdit": TextEdit.self, //(nativeHandle:),
    "TextLine": TextLine.self, //(nativeHandle:),
    "TextMesh": TextMesh.self, //(nativeHandle:),
    "TextParagraph": TextParagraph.self, //(nativeHandle:),
    "TextServer": TextServer.self, //(nativeHandle:),
    "TextServerAdvanced": TextServerAdvanced.self, //(nativeHandle:),
    "TextServerDummy": TextServerDummy.self, //(nativeHandle:),
    "TextServerExtension": TextServerExtension.self, //(nativeHandle:),
    "TextServerManager": TextServerManager.self, //(nativeHandle:),
    "Texture": Texture.self, //(nativeHandle:),
    "Texture2D": Texture2D.self, //(nativeHandle:),
    "Texture2DArray": Texture2DArray.self, //(nativeHandle:),
    "Texture2DArrayRD": Texture2DArrayRD.self, //(nativeHandle:),
    "Texture2DRD": Texture2DRD.self, //(nativeHandle:),
    "Texture3D": Texture3D.self, //(nativeHandle:),
    "Texture3DRD": Texture3DRD.self, //(nativeHandle:),
    "TextureButton": TextureButton.self, //(nativeHandle:),
    "TextureCubemapArrayRD": TextureCubemapArrayRD.self, //(nativeHandle:),
    "TextureCubemapRD": TextureCubemapRD.self, //(nativeHandle:),
    "TextureLayered": TextureLayered.self, //(nativeHandle:),
    "TextureLayeredRD": TextureLayeredRD.self, //(nativeHandle:),
    "TextureProgressBar": TextureProgressBar.self, //(nativeHandle:),
    "TextureRect": TextureRect.self, //(nativeHandle:),
    "Theme": Theme.self, //(nativeHandle:),
    "ThemeDB": ThemeDB.self, //(nativeHandle:),
    "Thread": Thread.self, //(nativeHandle:),
    "TileData": TileData.self, //(nativeHandle:),
    "TileMap": TileMap.self, //(nativeHandle:),
    "TileMapPattern": TileMapPattern.self, //(nativeHandle:),
    "TileSet": TileSet.self, //(nativeHandle:),
    "TileSetAtlasSource": TileSetAtlasSource.self, //(nativeHandle:),
    "TileSetScenesCollectionSource": TileSetScenesCollectionSource.self, //(nativeHandle:),
    "TileSetSource": TileSetSource.self, //(nativeHandle:),
    "Time": Time.self, //(nativeHandle:),
    "Timer": Timer.self, //(nativeHandle:),
    "TorusMesh": TorusMesh.self, //(nativeHandle:),
    "TouchScreenButton": TouchScreenButton.self, //(nativeHandle:),
    "Translation": Translation.self, //(nativeHandle:),
    "TranslationServer": TranslationServer.self, //(nativeHandle:),
    "Tree": Tree.self, //(nativeHandle:),
    "TreeItem": TreeItem.self, //(nativeHandle:),
    "TriangleMesh": TriangleMesh.self, //(nativeHandle:),
    "TubeTrailMesh": TubeTrailMesh.self, //(nativeHandle:),
    "Tween": Tween.self, //(nativeHandle:),
    "Tweener": Tweener.self, //(nativeHandle:),
    "UDPServer": UDPServer.self, //(nativeHandle:),
    "UPNP": UPNP.self, //(nativeHandle:),
    "UPNPDevice": UPNPDevice.self, //(nativeHandle:),
    "UndoRedo": UndoRedo.self, //(nativeHandle:),
    "VBoxContainer": VBoxContainer.self, //(nativeHandle:),
    "VFlowContainer": VFlowContainer.self, //(nativeHandle:),
    "VScrollBar": VScrollBar.self, //(nativeHandle:),
    "VSeparator": VSeparator.self, //(nativeHandle:),
    "VSlider": VSlider.self, //(nativeHandle:),
    "VSplitContainer": VSplitContainer.self, //(nativeHandle:),
    "VehicleBody3D": VehicleBody3D.self, //(nativeHandle:),
    "VehicleWheel3D": VehicleWheel3D.self, //(nativeHandle:),
    "VideoStream": VideoStream.self, //(nativeHandle:),
    "VideoStreamPlayback": VideoStreamPlayback.self, //(nativeHandle:),
    "VideoStreamPlayer": VideoStreamPlayer.self, //(nativeHandle:),
    "VideoStreamTheora": VideoStreamTheora.self, //(nativeHandle:),
    "Viewport": Viewport.self, //(nativeHandle:),
    "ViewportTexture": ViewportTexture.self, //(nativeHandle:),
    "VisibleOnScreenEnabler2D": VisibleOnScreenEnabler2D.self, //(nativeHandle:),
    "VisibleOnScreenEnabler3D": VisibleOnScreenEnabler3D.self, //(nativeHandle:),
    "VisibleOnScreenNotifier2D": VisibleOnScreenNotifier2D.self, //(nativeHandle:),
    "VisibleOnScreenNotifier3D": VisibleOnScreenNotifier3D.self, //(nativeHandle:),
    "VisualInstance3D": VisualInstance3D.self, //(nativeHandle:),
    "VisualShader": VisualShader.self, //(nativeHandle:),
    "VisualShaderNode": VisualShaderNode.self, //(nativeHandle:),
    "VisualShaderNodeBillboard": VisualShaderNodeBillboard.self, //(nativeHandle:),
    "VisualShaderNodeBooleanConstant": VisualShaderNodeBooleanConstant.self, //(nativeHandle:),
    "VisualShaderNodeBooleanParameter": VisualShaderNodeBooleanParameter.self, //(nativeHandle:),
    "VisualShaderNodeClamp": VisualShaderNodeClamp.self, //(nativeHandle:),
    "VisualShaderNodeColorConstant": VisualShaderNodeColorConstant.self, //(nativeHandle:),
    "VisualShaderNodeColorFunc": VisualShaderNodeColorFunc.self, //(nativeHandle:),
    "VisualShaderNodeColorOp": VisualShaderNodeColorOp.self, //(nativeHandle:),
    "VisualShaderNodeColorParameter": VisualShaderNodeColorParameter.self, //(nativeHandle:),
    "VisualShaderNodeComment": VisualShaderNodeComment.self, //(nativeHandle:),
    "VisualShaderNodeCompare": VisualShaderNodeCompare.self, //(nativeHandle:),
    "VisualShaderNodeConstant": VisualShaderNodeConstant.self, //(nativeHandle:),
    "VisualShaderNodeCubemap": VisualShaderNodeCubemap.self, //(nativeHandle:),
    "VisualShaderNodeCubemapParameter": VisualShaderNodeCubemapParameter.self, //(nativeHandle:),
    "VisualShaderNodeCurveTexture": VisualShaderNodeCurveTexture.self, //(nativeHandle:),
    "VisualShaderNodeCurveXYZTexture": VisualShaderNodeCurveXYZTexture.self, //(nativeHandle:),
    "VisualShaderNodeCustom": VisualShaderNodeCustom.self, //(nativeHandle:),
    "VisualShaderNodeDerivativeFunc": VisualShaderNodeDerivativeFunc.self, //(nativeHandle:),
    "VisualShaderNodeDeterminant": VisualShaderNodeDeterminant.self, //(nativeHandle:),
    "VisualShaderNodeDistanceFade": VisualShaderNodeDistanceFade.self, //(nativeHandle:),
    "VisualShaderNodeDotProduct": VisualShaderNodeDotProduct.self, //(nativeHandle:),
    "VisualShaderNodeExpression": VisualShaderNodeExpression.self, //(nativeHandle:),
    "VisualShaderNodeFaceForward": VisualShaderNodeFaceForward.self, //(nativeHandle:),
    "VisualShaderNodeFloatConstant": VisualShaderNodeFloatConstant.self, //(nativeHandle:),
    "VisualShaderNodeFloatFunc": VisualShaderNodeFloatFunc.self, //(nativeHandle:),
    "VisualShaderNodeFloatOp": VisualShaderNodeFloatOp.self, //(nativeHandle:),
    "VisualShaderNodeFloatParameter": VisualShaderNodeFloatParameter.self, //(nativeHandle:),
    "VisualShaderNodeFresnel": VisualShaderNodeFresnel.self, //(nativeHandle:),
    "VisualShaderNodeGlobalExpression": VisualShaderNodeGlobalExpression.self, //(nativeHandle:),
    "VisualShaderNodeGroupBase": VisualShaderNodeGroupBase.self, //(nativeHandle:),
    "VisualShaderNodeIf": VisualShaderNodeIf.self, //(nativeHandle:),
    "VisualShaderNodeInput": VisualShaderNodeInput.self, //(nativeHandle:),
    "VisualShaderNodeIntConstant": VisualShaderNodeIntConstant.self, //(nativeHandle:),
    "VisualShaderNodeIntFunc": VisualShaderNodeIntFunc.self, //(nativeHandle:),
    "VisualShaderNodeIntOp": VisualShaderNodeIntOp.self, //(nativeHandle:),
    "VisualShaderNodeIntParameter": VisualShaderNodeIntParameter.self, //(nativeHandle:),
    "VisualShaderNodeIs": VisualShaderNodeIs.self, //(nativeHandle:),
    "VisualShaderNodeLinearSceneDepth": VisualShaderNodeLinearSceneDepth.self, //(nativeHandle:),
    "VisualShaderNodeMix": VisualShaderNodeMix.self, //(nativeHandle:),
    "VisualShaderNodeMultiplyAdd": VisualShaderNodeMultiplyAdd.self, //(nativeHandle:),
    "VisualShaderNodeOuterProduct": VisualShaderNodeOuterProduct.self, //(nativeHandle:),
    "VisualShaderNodeOutput": VisualShaderNodeOutput.self, //(nativeHandle:),
    "VisualShaderNodeParameter": VisualShaderNodeParameter.self, //(nativeHandle:),
    "VisualShaderNodeParameterRef": VisualShaderNodeParameterRef.self, //(nativeHandle:),
    "VisualShaderNodeParticleAccelerator": VisualShaderNodeParticleAccelerator.self, //(nativeHandle:),
    "VisualShaderNodeParticleBoxEmitter": VisualShaderNodeParticleBoxEmitter.self, //(nativeHandle:),
    "VisualShaderNodeParticleConeVelocity": VisualShaderNodeParticleConeVelocity.self, //(nativeHandle:),
    "VisualShaderNodeParticleEmit": VisualShaderNodeParticleEmit.self, //(nativeHandle:),
    "VisualShaderNodeParticleEmitter": VisualShaderNodeParticleEmitter.self, //(nativeHandle:),
    "VisualShaderNodeParticleMeshEmitter": VisualShaderNodeParticleMeshEmitter.self, //(nativeHandle:),
    "VisualShaderNodeParticleMultiplyByAxisAngle": VisualShaderNodeParticleMultiplyByAxisAngle.self, //(nativeHandle:),
    "VisualShaderNodeParticleOutput": VisualShaderNodeParticleOutput.self, //(nativeHandle:),
    "VisualShaderNodeParticleRandomness": VisualShaderNodeParticleRandomness.self, //(nativeHandle:),
    "VisualShaderNodeParticleRingEmitter": VisualShaderNodeParticleRingEmitter.self, //(nativeHandle:),
    "VisualShaderNodeParticleSphereEmitter": VisualShaderNodeParticleSphereEmitter.self, //(nativeHandle:),
    "VisualShaderNodeProximityFade": VisualShaderNodeProximityFade.self, //(nativeHandle:),
    "VisualShaderNodeRandomRange": VisualShaderNodeRandomRange.self, //(nativeHandle:),
    "VisualShaderNodeRemap": VisualShaderNodeRemap.self, //(nativeHandle:),
    "VisualShaderNodeResizableBase": VisualShaderNodeResizableBase.self, //(nativeHandle:),
    "VisualShaderNodeRotationByAxis": VisualShaderNodeRotationByAxis.self, //(nativeHandle:),
    "VisualShaderNodeSDFRaymarch": VisualShaderNodeSDFRaymarch.self, //(nativeHandle:),
    "VisualShaderNodeSDFToScreenUV": VisualShaderNodeSDFToScreenUV.self, //(nativeHandle:),
    "VisualShaderNodeSample3D": VisualShaderNodeSample3D.self, //(nativeHandle:),
    "VisualShaderNodeScreenNormalWorldSpace": VisualShaderNodeScreenNormalWorldSpace.self, //(nativeHandle:),
    "VisualShaderNodeScreenUVToSDF": VisualShaderNodeScreenUVToSDF.self, //(nativeHandle:),
    "VisualShaderNodeSmoothStep": VisualShaderNodeSmoothStep.self, //(nativeHandle:),
    "VisualShaderNodeStep": VisualShaderNodeStep.self, //(nativeHandle:),
    "VisualShaderNodeSwitch": VisualShaderNodeSwitch.self, //(nativeHandle:),
    "VisualShaderNodeTexture": VisualShaderNodeTexture.self, //(nativeHandle:),
    "VisualShaderNodeTexture2DArray": VisualShaderNodeTexture2DArray.self, //(nativeHandle:),
    "VisualShaderNodeTexture2DArrayParameter": VisualShaderNodeTexture2DArrayParameter.self, //(nativeHandle:),
    "VisualShaderNodeTexture2DParameter": VisualShaderNodeTexture2DParameter.self, //(nativeHandle:),
    "VisualShaderNodeTexture3D": VisualShaderNodeTexture3D.self, //(nativeHandle:),
    "VisualShaderNodeTexture3DParameter": VisualShaderNodeTexture3DParameter.self, //(nativeHandle:),
    "VisualShaderNodeTextureParameter": VisualShaderNodeTextureParameter.self, //(nativeHandle:),
    "VisualShaderNodeTextureParameterTriplanar": VisualShaderNodeTextureParameterTriplanar.self, //(nativeHandle:),
    "VisualShaderNodeTextureSDF": VisualShaderNodeTextureSDF.self, //(nativeHandle:),
    "VisualShaderNodeTextureSDFNormal": VisualShaderNodeTextureSDFNormal.self, //(nativeHandle:),
    "VisualShaderNodeTransformCompose": VisualShaderNodeTransformCompose.self, //(nativeHandle:),
    "VisualShaderNodeTransformConstant": VisualShaderNodeTransformConstant.self, //(nativeHandle:),
    "VisualShaderNodeTransformDecompose": VisualShaderNodeTransformDecompose.self, //(nativeHandle:),
    "VisualShaderNodeTransformFunc": VisualShaderNodeTransformFunc.self, //(nativeHandle:),
    "VisualShaderNodeTransformOp": VisualShaderNodeTransformOp.self, //(nativeHandle:),
    "VisualShaderNodeTransformParameter": VisualShaderNodeTransformParameter.self, //(nativeHandle:),
    "VisualShaderNodeTransformVecMult": VisualShaderNodeTransformVecMult.self, //(nativeHandle:),
    "VisualShaderNodeUIntConstant": VisualShaderNodeUIntConstant.self, //(nativeHandle:),
    "VisualShaderNodeUIntFunc": VisualShaderNodeUIntFunc.self, //(nativeHandle:),
    "VisualShaderNodeUIntOp": VisualShaderNodeUIntOp.self, //(nativeHandle:),
    "VisualShaderNodeUIntParameter": VisualShaderNodeUIntParameter.self, //(nativeHandle:),
    "VisualShaderNodeUVFunc": VisualShaderNodeUVFunc.self, //(nativeHandle:),
    "VisualShaderNodeUVPolarCoord": VisualShaderNodeUVPolarCoord.self, //(nativeHandle:),
    "VisualShaderNodeVarying": VisualShaderNodeVarying.self, //(nativeHandle:),
    "VisualShaderNodeVaryingGetter": VisualShaderNodeVaryingGetter.self, //(nativeHandle:),
    "VisualShaderNodeVaryingSetter": VisualShaderNodeVaryingSetter.self, //(nativeHandle:),
    "VisualShaderNodeVec2Constant": VisualShaderNodeVec2Constant.self, //(nativeHandle:),
    "VisualShaderNodeVec2Parameter": VisualShaderNodeVec2Parameter.self, //(nativeHandle:),
    "VisualShaderNodeVec3Constant": VisualShaderNodeVec3Constant.self, //(nativeHandle:),
    "VisualShaderNodeVec3Parameter": VisualShaderNodeVec3Parameter.self, //(nativeHandle:),
    "VisualShaderNodeVec4Constant": VisualShaderNodeVec4Constant.self, //(nativeHandle:),
    "VisualShaderNodeVec4Parameter": VisualShaderNodeVec4Parameter.self, //(nativeHandle:),
    "VisualShaderNodeVectorBase": VisualShaderNodeVectorBase.self, //(nativeHandle:),
    "VisualShaderNodeVectorCompose": VisualShaderNodeVectorCompose.self, //(nativeHandle:),
    "VisualShaderNodeVectorDecompose": VisualShaderNodeVectorDecompose.self, //(nativeHandle:),
    "VisualShaderNodeVectorDistance": VisualShaderNodeVectorDistance.self, //(nativeHandle:),
    "VisualShaderNodeVectorFunc": VisualShaderNodeVectorFunc.self, //(nativeHandle:),
    "VisualShaderNodeVectorLen": VisualShaderNodeVectorLen.self, //(nativeHandle:),
    "VisualShaderNodeVectorOp": VisualShaderNodeVectorOp.self, //(nativeHandle:),
    "VisualShaderNodeVectorRefract": VisualShaderNodeVectorRefract.self, //(nativeHandle:),
    "VisualShaderNodeWorldPositionFromDepth": VisualShaderNodeWorldPositionFromDepth.self, //(nativeHandle:),
    "VoxelGI": VoxelGI.self, //(nativeHandle:),
    "VoxelGIData": VoxelGIData.self, //(nativeHandle:),
    "WeakRef": WeakRef.self, //(nativeHandle:),
    "WebRTCDataChannel": WebRTCDataChannel.self, //(nativeHandle:),
    "WebRTCDataChannelExtension": WebRTCDataChannelExtension.self, //(nativeHandle:),
    "WebRTCMultiplayerPeer": WebRTCMultiplayerPeer.self, //(nativeHandle:),
    "WebRTCPeerConnection": WebRTCPeerConnection.self, //(nativeHandle:),
    "WebRTCPeerConnectionExtension": WebRTCPeerConnectionExtension.self, //(nativeHandle:),
    "WebSocketMultiplayerPeer": WebSocketMultiplayerPeer.self, //(nativeHandle:),
    "WebSocketPeer": WebSocketPeer.self, //(nativeHandle:),
    "WebXRInterface": WebXRInterface.self, //(nativeHandle:),
    "Window": Window.self, //(nativeHandle:),
    "WorkerThreadPool": WorkerThreadPool.self, //(nativeHandle:),
    "World2D": World2D.self, //(nativeHandle:),
    "World3D": World3D.self, //(nativeHandle:),
    "WorldBoundaryShape2D": WorldBoundaryShape2D.self, //(nativeHandle:),
    "WorldBoundaryShape3D": WorldBoundaryShape3D.self, //(nativeHandle:),
    "WorldEnvironment": WorldEnvironment.self, //(nativeHandle:),
    "X509Certificate": X509Certificate.self, //(nativeHandle:),
    "XMLParser": XMLParser.self, //(nativeHandle:),
    "XRAnchor3D": XRAnchor3D.self, //(nativeHandle:),
    "XRCamera3D": XRCamera3D.self, //(nativeHandle:),
    "XRController3D": XRController3D.self, //(nativeHandle:),
    "XRInterface": XRInterface.self, //(nativeHandle:),
    "XRInterfaceExtension": XRInterfaceExtension.self, //(nativeHandle:),
    "XRNode3D": XRNode3D.self, //(nativeHandle:),
    "XROrigin3D": XROrigin3D.self, //(nativeHandle:),
    "XRPose": XRPose.self, //(nativeHandle:),
    "XRPositionalTracker": XRPositionalTracker.self, //(nativeHandle:),
    "XRServer": XRServer.self, //(nativeHandle:),
    "ZIPPacker": ZIPPacker.self, //(nativeHandle:),
    "ZIPReader": ZIPReader.self, //(nativeHandle:),
]
